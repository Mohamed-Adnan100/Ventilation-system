

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Sep 11 22:27:48 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,inline
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82   000000                     
    83                           ; Generated 05/01/2024 GMT
    84                           ; 
    85                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F4620 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117   000000                     
   118                           	psect	idataCOMRAM
   119   002EB8                     __pidataCOMRAM:
   120                           	callstack 0
   121                           
   122                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3118
   123   002EB8  68                 	db	104
   124                           
   125                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3116
   126   002EB9  5A                 	db	90
   127                           
   128                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3114
   129   002EBA  62                 	db	98
   130                           
   131                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3112
   132   002EBB  2A                 	db	42
   133                           
   134                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3107
   135   002EBC  1A                 	db	26
   136                           
   137                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3105
   138   002EBD  62                 	db	98
   139                           
   140                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3103
   141   002EBE  2A                 	db	42
   142                           
   143                           ;initializer for _RB7_Flag
   144   002EBF  01                 	db	1
   145                           
   146                           ;initializer for _RB6_Flag
   147   002EC0  01                 	db	1
   148                           
   149                           ;initializer for _RB5_Flag
   150   002EC1  01                 	db	1
   151                           
   152                           ;initializer for _RB4_Flag
   153   002EC2  01                 	db	1
   154                           
   155                           ;initializer for _dc_motor_2
   156   002EC3  13                 	db	19
   157   002EC4  1B                 	db	27
   158                           
   159                           ;initializer for _dc_motor_1
   160   002EC5  03                 	db	3
   161   002EC6  0B                 	db	11
   162                           
   163                           	psect	idataBANK0
   164   002D76                     __pidataBANK0:
   165                           	callstack 0
   166                           
   167                           ;initializer for _port_registers
   168   002D76  80                 	db	128
   169   002D77  0F                 	db	15
   170   002D78  81                 	db	129
   171   002D79  0F                 	db	15
   172   002D7A  82                 	db	130
   173   002D7B  0F                 	db	15
   174   002D7C  83                 	db	131
   175   002D7D  0F                 	db	15
   176   002D7E  84                 	db	132
   177   002D7F  0F                 	db	15
   178                           
   179                           ;initializer for _lat_registers
   180   002D80  89                 	db	137
   181   002D81  0F                 	db	15
   182   002D82  8A                 	db	138
   183   002D83  0F                 	db	15
   184   002D84  8B                 	db	139
   185   002D85  0F                 	db	15
   186   002D86  8C                 	db	140
   187   002D87  0F                 	db	15
   188   002D88  8D                 	db	141
   189   002D89  0F                 	db	15
   190                           
   191                           ;initializer for _tris_registers
   192   002D8A  92                 	db	146
   193   002D8B  0F                 	db	15
   194   002D8C  93                 	db	147
   195   002D8D  0F                 	db	15
   196   002D8E  94                 	db	148
   197   002D8F  0F                 	db	15
   198   002D90  95                 	db	149
   199   002D91  0F                 	db	15
   200   002D92  96                 	db	150
   201   002D93  0F                 	db	15
   202                           
   203                           ;initializer for _Celsius
   204   002D94  03                 	db	3
   205   002D95  03                 	db	3
   206   002D96  00                 	db	0
   207   002D97  0E                 	db	14
   208   002D98  10                 	db	16
   209   002D99  10                 	db	16
   210   002D9A  0E                 	db	14
   211   002D9B  00                 	db	0
   212                           
   213                           ;initializer for _adc_1
   214   002D9C  00                 	db	0
   215   002D9D  00                 	db	0
   216   002D9E  00                 	db	0
   217   002D9F  05                 	db	5
   218   002DA0  05                 	db	5
   219   002DA1  00                 	db	0
   220   002DA2  02                 	db	2
   221                           
   222                           ;initializer for _lcd_1
   223   002DA3  02                 	db	2
   224   002DA4  0A                 	db	10
   225   002DA5  12                 	db	18
   226   002DA6  1A                 	db	26
   227   002DA7  22                 	db	34
   228   002DA8  2A                 	db	42
   229                           
   230                           	psect	smallconst
   231   001000                     __psmallconst:
   232                           	callstack 0
   233   001000  00                 	db	0
   234   001001                     _btn_values:
   235                           	callstack 0
   236   001001  37                 	db	55
   237   001002  38                 	db	56
   238   001003  39                 	db	57
   239   001004  2F                 	db	47
   240   001005  34                 	db	52
   241   001006  35                 	db	53
   242   001007  36                 	db	54
   243   001008  2A                 	db	42
   244   001009  31                 	db	49
   245   00100A  32                 	db	50
   246   00100B  33                 	db	51
   247   00100C  2D                 	db	45
   248   00100D  23                 	db	35
   249   00100E  30                 	db	48
   250   00100F  3D                 	db	61
   251   001010  2B                 	db	43
   252   001011                     __end_of_btn_values:
   253                           	callstack 0
   254   000000                     _SPBRGH	set	4016
   255   000000                     _SPBRG	set	4015
   256   000000                     _TXREG	set	4013
   257   000000                     _TXSTAbits	set	4012
   258   000000                     _RCREG	set	4014
   259   000000                     _RCSTAbits	set	4011
   260   000000                     _TMR3L	set	4018
   261   000000                     _TMR3H	set	4019
   262   000000                     _TMR2	set	4044
   263   000000                     _T2CONbits	set	4042
   264   000000                     _TMR1L	set	4046
   265   000000                     _TMR1H	set	4047
   266   000000                     _T1CONbits	set	4045
   267   000000                     _TMR0L	set	4054
   268   000000                     _TMR0H	set	4055
   269   000000                     _T0CONbits	set	4053
   270   000000                     _INTCON2bits	set	4081
   271   000000                     _INTCON3bits	set	4080
   272   000000                     _SSPBUF	set	4041
   273   000000                     _SSPSTATbits	set	4039
   274   000000                     _SSPADD	set	4040
   275   000000                     _SSPCON2bits	set	4037
   276   000000                     _SSPCON1bits	set	4038
   277   000000                     _EECON2	set	4007
   278   000000                     _ADCON1bits	set	4033
   279   000000                     _ADRESL	set	4035
   280   000000                     _ADRESH	set	4036
   281   000000                     _INTCONbits	set	4082
   282   000000                     _TRISD	set	3989
   283   000000                     _TRISC	set	3988
   284   000000                     _PR2	set	4043
   285   000000                     _TRISB	set	3987
   286   000000                     _TRISE	set	3990
   287   001011                     STR_4:
   288   001011  54                 	db	84	;'T'
   289   001012  65                 	db	101	;'e'
   290   001013  6D                 	db	109	;'m'
   291   001014  70                 	db	112	;'p'
   292   001015  65                 	db	101	;'e'
   293   001016  72                 	db	114	;'r'
   294   001017  61                 	db	97	;'a'
   295   001018  74                 	db	116	;'t'
   296   001019  75                 	db	117	;'u'
   297   00101A  72                 	db	114	;'r'
   298   00101B  65                 	db	101	;'e'
   299   00101C  31                 	db	49	;'1'
   300   00101D  3A                 	db	58	;':'
   301   00101E  20                 	db	32
   302   00101F  00                 	db	0
   303   001020                     STR_5:
   304   001020  54                 	db	84	;'T'
   305   001021  65                 	db	101	;'e'
   306   001022  6D                 	db	109	;'m'
   307   001023  70                 	db	112	;'p'
   308   001024  65                 	db	101	;'e'
   309   001025  72                 	db	114	;'r'
   310   001026  61                 	db	97	;'a'
   311   001027  74                 	db	116	;'t'
   312   001028  75                 	db	117	;'u'
   313   001029  72                 	db	114	;'r'
   314   00102A  65                 	db	101	;'e'
   315   00102B  32                 	db	50	;'2'
   316   00102C  3A                 	db	58	;':'
   317   00102D  20                 	db	32
   318   00102E  00                 	db	0
   319   00102F                     STR_1:
   320   00102F  25                 	db	37
   321   001030  69                 	db	105	;'i'
   322   001031  00                 	db	0
   323   001032  00                 	db	0	; dummy byte at the end
   324   000000                     
   325                           	psect	nvBANK0
   326   0000F9                     __pnvBANK0:
   327                           	callstack 0
   328   0000F9                     _lm35_res_2_Celsius_mv:
   329                           	callstack 0
   330   0000F9                     	ds	2
   331   0000FB                     _lm35_res_1_Celsius_mv:
   332                           	callstack 0
   333   0000FB                     	ds	2
   334   000000                     _PORTBbits	set	3969
   335   000000                     _TRISCbits	set	3988
   336   000000                     _PIE1bits	set	3997
   337   000000                     _ADCON2bits	set	4032
   338   000000                     _ADCON0bits	set	4034
   339   000000                     _PORTE	set	3972
   340   000000                     _PORTD	set	3971
   341   000000                     _PORTC	set	3970
   342   000000                     _PORTB	set	3969
   343   000000                     _PORTA	set	3968
   344   000000                     _LATA	set	3977
   345   000000                     _TRISA	set	3986
   346   000000                     _PIE2bits	set	4000
   347   000000                     _CCP2CONbits	set	4026
   348   000000                     _CCP1CONbits	set	4029
   349   000000                     _PIR1bits	set	3998
   350   000000                     _CCPR1L	set	4030
   351   000000                     _CCPR2L	set	4027
   352   000000                     _EECON1bits	set	4006
   353   000000                     _EEDATA	set	4008
   354   000000                     _EEADR	set	4009
   355   000000                     _EEADRH	set	4010
   356   000000                     _T3CONbits	set	4017
   357   000000                     _PIR2bits	set	4001
   358   000000                     _LATE	set	3981
   359   000000                     _LATD	set	3980
   360   000000                     _LATC	set	3979
   361   000000                     _LATB	set	3978
   362   000000                     _BAUDCONbits	set	4024
   363                           
   364                           ; #config settings
   365                           
   366                           	psect	cinit
   367   002934                     __pcinit:
   368                           	callstack 0
   369   002934                     start_initialization:
   370                           	callstack 0
   371   002934                     __initialization:
   372                           	callstack 0
   373                           
   374                           ; Initialize objects allocated to BANK0 (51 bytes)
   375                           ; load TBLPTR registers with __pidataBANK0
   376   002934  0E76               	movlw	low __pidataBANK0
   377   002936  6EF6               	movwf	tblptrl,c
   378   002938  0E2D               	movlw	high __pidataBANK0
   379   00293A  6EF7               	movwf	tblptrh,c
   380   00293C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   381   00293E  6EF8               	movwf	tblptru,c
   382   002940  EE00  F0C6         	lfsr	0,__pdataBANK0
   383   002944  EE10 F033          	lfsr	1,51
   384   002948                     copy_data0:
   385   002948  0009               	tblrd		*+
   386   00294A  CFF5 FFEE          	movff	tablat,postinc0
   387   00294E  50E5               	movf	postdec1,w,c
   388   002950  50E1               	movf	fsr1l,w,c
   389   002952  E1FA               	bnz	copy_data0
   390                           
   391                           ; Initialize objects allocated to COMRAM (15 bytes)
   392                           ; load TBLPTR registers with __pidataCOMRAM
   393   002954  0EB8               	movlw	low __pidataCOMRAM
   394   002956  6EF6               	movwf	tblptrl,c
   395   002958  0E2E               	movlw	high __pidataCOMRAM
   396   00295A  6EF7               	movwf	tblptrh,c
   397   00295C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   398   00295E  6EF8               	movwf	tblptru,c
   399   002960  EE00  F06A         	lfsr	0,__pdataCOMRAM
   400   002964  EE10 F00F          	lfsr	1,15
   401   002968                     copy_data1:
   402   002968  0009               	tblrd		*+
   403   00296A  CFF5 FFEE          	movff	tablat,postinc0
   404   00296E  50E5               	movf	postdec1,w,c
   405   002970  50E1               	movf	fsr1l,w,c
   406   002972  E1FA               	bnz	copy_data1
   407                           
   408                           ; Clear objects allocated to BANK0 (70 bytes)
   409   002974  EE00  F080         	lfsr	0,__pbssBANK0
   410   002978  0E46               	movlw	70
   411   00297A                     clear_0:
   412   00297A  6AEE               	clrf	postinc0,c
   413   00297C  06E8               	decf	wreg,f,c
   414   00297E  E1FD               	bnz	clear_0
   415                           
   416                           ; Clear objects allocated to COMRAM (55 bytes)
   417   002980  EE00  F001         	lfsr	0,__pbssCOMRAM
   418   002984  0E37               	movlw	55
   419   002986                     clear_1:
   420   002986  6AEE               	clrf	postinc0,c
   421   002988  06E8               	decf	wreg,f,c
   422   00298A  E1FD               	bnz	clear_1
   423   00298C                     end_of_initialization:
   424                           	callstack 0
   425   00298C                     __end_of__initialization:
   426                           	callstack 0
   427   00298C  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   428   00298E  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   429   002990  0100               	movlb	0
   430   002992  EF32  F00C         	goto	_main	;jump to C main() function
   431                           
   432                           	psect	bssCOMRAM
   433   000001                     __pbssCOMRAM:
   434                           	callstack 0
   435   000001                     _timer3_preload:
   436                           	callstack 0
   437   000001                     	ds	2
   438   000003                     _timer1_preload:
   439                           	callstack 0
   440   000003                     	ds	2
   441   000005                     _TMR1_InterruptHandler:
   442                           	callstack 0
   443   000005                     	ds	2
   444   000007                     _timer0_preload:
   445                           	callstack 0
   446   000007                     	ds	2
   447   000009                     _TMR0_InterruptHandler:
   448                           	callstack 0
   449   000009                     	ds	2
   450   00000B                     _RB7_InterruptHandler_LOW:
   451                           	callstack 0
   452   00000B                     	ds	2
   453   00000D                     _RB7_InterruptHandler_HIGH:
   454                           	callstack 0
   455   00000D                     	ds	2
   456   00000F                     _RB6_InterruptHandler_LOW:
   457                           	callstack 0
   458   00000F                     	ds	2
   459   000011                     _RB6_InterruptHandler_HIGH:
   460                           	callstack 0
   461   000011                     	ds	2
   462   000013                     _RB5_InterruptHandler_LOW:
   463                           	callstack 0
   464   000013                     	ds	2
   465   000015                     _RB5_InterruptHandler_HIGH:
   466                           	callstack 0
   467   000015                     	ds	2
   468   000017                     _RB4_InterruptHandler_LOW:
   469                           	callstack 0
   470   000017                     	ds	2
   471   000019                     _RB4_InterruptHandler_HIGH:
   472                           	callstack 0
   473   000019                     	ds	2
   474   00001B                     _INT2_InterruptHandler:
   475                           	callstack 0
   476   00001B                     	ds	2
   477   00001D                     _INT1_InterruptHandler:
   478                           	callstack 0
   479   00001D                     	ds	2
   480   00001F                     _INT0_InterruptHandler:
   481                           	callstack 0
   482   00001F                     	ds	2
   483   000021                     _I2C_DefaultInterruptHandle:
   484                           	callstack 0
   485   000021                     	ds	2
   486   000023                     _I2C_Report_Write_Collision_InterruptHandler:
   487                           	callstack 0
   488   000023                     	ds	2
   489   000025                     _CCP2_InterruptHandler:
   490                           	callstack 0
   491   000025                     	ds	2
   492   000027                     _CCP1_InterruptHandler:
   493                           	callstack 0
   494   000027                     	ds	2
   495   000029                     _ADC_InterruptHandler:
   496                           	callstack 0
   497   000029                     	ds	2
   498   00002B                     _flags:
   499                           	callstack 0
   500   00002B                     	ds	1
   501   00002C                     _timer2_preload:
   502                           	callstack 0
   503   00002C                     	ds	1
   504   00002D                     relay_turn_off@F3065:
   505                           	callstack 0
   506   00002D                     	ds	1
   507   00002E                     relay_turn_on@F3060:
   508                           	callstack 0
   509   00002E                     	ds	1
   510   00002F                     relay_initialize@F3055:
   511                           	callstack 0
   512   00002F                     	ds	1
   513   000030                     led_turn_toggle@F3076:
   514                           	callstack 0
   515   000030                     	ds	1
   516   000031                     led_turn_off@F3071:
   517                           	callstack 0
   518   000031                     	ds	1
   519   000032                     led_turn_on@F3066:
   520                           	callstack 0
   521   000032                     	ds	1
   522   000033                     led_initialize@F3061:
   523                           	callstack 0
   524   000033                     	ds	1
   525   000034                     _lm35_res_2:
   526                           	callstack 0
   527   000034                     	ds	2
   528   000036                     _lm35_res_1:
   529                           	callstack 0
   530   000036                     	ds	2
   531                           
   532                           	psect	dataCOMRAM
   533   00006A                     __pdataCOMRAM:
   534                           	callstack 0
   535   00006A                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3118:
   536                           	callstack 0
   537   00006A                     	ds	1
   538   00006B                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3116:
   539                           	callstack 0
   540   00006B                     	ds	1
   541   00006C                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3114:
   542                           	callstack 0
   543   00006C                     	ds	1
   544   00006D                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3112:
   545                           	callstack 0
   546   00006D                     	ds	1
   547   00006E                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3107:
   548                           	callstack 0
   549   00006E                     	ds	1
   550   00006F                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3105:
   551                           	callstack 0
   552   00006F                     	ds	1
   553   000070                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3103:
   554                           	callstack 0
   555   000070                     	ds	1
   556   000071                     _RB7_Flag:
   557                           	callstack 0
   558   000071                     	ds	1
   559   000072                     _RB6_Flag:
   560                           	callstack 0
   561   000072                     	ds	1
   562   000073                     _RB5_Flag:
   563                           	callstack 0
   564   000073                     	ds	1
   565   000074                     _RB4_Flag:
   566                           	callstack 0
   567   000074                     	ds	1
   568   000075                     _dc_motor_2:
   569                           	callstack 0
   570   000075                     	ds	2
   571   000077                     _dc_motor_1:
   572                           	callstack 0
   573   000077                     	ds	2
   574                           
   575                           	psect	bssBANK0
   576   000080                     __pbssBANK0:
   577                           	callstack 0
   578   000080                     _dbuf:
   579                           	callstack 0
   580   000080                     	ds	32
   581   0000A0                     	ds	6
   582   0000A6                     _width:
   583                           	callstack 0
   584   0000A6                     	ds	2
   585   0000A8                     _prec:
   586                           	callstack 0
   587   0000A8                     	ds	2
   588   0000AA                     _EUSART_OverrunErrorHandler:
   589                           	callstack 0
   590   0000AA                     	ds	2
   591   0000AC                     _EUSART_FramingErrorHandler:
   592                           	callstack 0
   593   0000AC                     	ds	2
   594   0000AE                     _EUSART_RxInterruptHandler:
   595                           	callstack 0
   596   0000AE                     	ds	2
   597   0000B0                     _EUSART_TxInterruptHandler:
   598                           	callstack 0
   599   0000B0                     	ds	2
   600   0000B2                     _TMR3_InterruptHandler:
   601                           	callstack 0
   602   0000B2                     	ds	2
   603   0000B4                     _TMR2_InterruptHandler:
   604                           	callstack 0
   605   0000B4                     	ds	2
   606   0000B6                     _I2C_Report_Receive_Overflow_InterruptHandle:
   607                           	callstack 0
   608   0000B6                     	ds	2
   609   0000B8                     _lm35_res_2_txt:
   610                           	callstack 0
   611   0000B8                     	ds	7
   612   0000BF                     _lm35_res_1_txt:
   613                           	callstack 0
   614   0000BF                     	ds	7
   615                           
   616                           	psect	dataBANK0
   617   0000C6                     __pdataBANK0:
   618                           	callstack 0
   619   0000C6                     _port_registers:
   620                           	callstack 0
   621   0000C6                     	ds	10
   622   0000D0                     _lat_registers:
   623                           	callstack 0
   624   0000D0                     	ds	10
   625   0000DA                     _tris_registers:
   626                           	callstack 0
   627   0000DA                     	ds	10
   628   0000E4                     _Celsius:
   629                           	callstack 0
   630   0000E4                     	ds	8
   631   0000EC                     _adc_1:
   632                           	callstack 0
   633   0000EC                     	ds	7
   634   0000F3                     _lcd_1:
   635                           	callstack 0
   636   0000F3                     	ds	6
   637                           
   638                           	psect	cstackBANK1
   639   000100                     __pcstackBANK1:
   640                           	callstack 0
   641   000100                     convert_uint16_to_string@Temp_String:
   642                           	callstack 0
   643                           
   644                           ; 6 bytes @ 0x0
   645   000100                     	ds	6
   646   000106                     convert_uint16_to_string@ret:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x6
   650   000106                     	ds	1
   651   000107                     convert_uint16_to_string@DataCounter:
   652                           	callstack 0
   653                           
   654                           ; 1 bytes @ 0x7
   655   000107                     	ds	1
   656                           
   657                           	psect	cstackCOMRAM
   658   000038                     __pcstackCOMRAM:
   659                           	callstack 0
   660   000038                     RB4_ISR@RB4_Source:
   661                           	callstack 0
   662   000038                     RB5_ISR@RB5_Source:
   663                           	callstack 0
   664   000038                     RB6_ISR@RB6_Source:
   665                           	callstack 0
   666   000038                     RB7_ISR@RB7_Source:
   667                           	callstack 0
   668   000038                     
   669                           ; 1 bytes @ 0x0
   670   000038                     	ds	1
   671   000039                     ??_adc_input_channel_port_configure:
   672   000039                     ?___awdiv:
   673                           	callstack 0
   674   000039                     ?___awmod:
   675                           	callstack 0
   676   000039                     ?___lwdiv:
   677                           	callstack 0
   678   000039                     ?___xxtofl:
   679                           	callstack 0
   680   000039                     ADC_StartConversion@_adc:
   681                           	callstack 0
   682   000039                     ADC_GetConversionResult@_adc:
   683                           	callstack 0
   684   000039                     select_result_format@_adc:
   685                           	callstack 0
   686   000039                     configure_voltage_reference@_adc:
   687                           	callstack 0
   688   000039                     gpio_pin_direction_intialize@_pin_config:
   689                           	callstack 0
   690   000039                     gpio_pin_write_logic@_pin_config:
   691                           	callstack 0
   692   000039                     memset@dest:
   693                           	callstack 0
   694   000039                     ___awdiv@dividend:
   695                           	callstack 0
   696   000039                     ___awmod@dividend:
   697                           	callstack 0
   698   000039                     ___lwdiv@dividend:
   699                           	callstack 0
   700   000039                     fputc@c:
   701                           	callstack 0
   702   000039                     ___xxtofl@val:
   703                           	callstack 0
   704                           
   705                           ; 4 bytes @ 0x1
   706   000039                     	ds	1
   707   00003A                     ??_gpio_pin_direction_intialize:
   708   00003A                     ADC_StartConversion@ret:
   709                           	callstack 0
   710   00003A                     ADC_GetConversionResult@conversion_result:
   711                           	callstack 0
   712   00003A                     gpio_pin_write_logic@logic:
   713                           	callstack 0
   714   00003A                     memset@c:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x2
   718   00003A                     	ds	1
   719   00003B                     ??_gpio_pin_write_logic:
   720   00003B                     ??_ADC_GetConversionResult:
   721   00003B                     adc_input_channel_port_configure@channel:
   722                           	callstack 0
   723   00003B                     fputc@fp:
   724                           	callstack 0
   725   00003B                     ___awdiv@divisor:
   726                           	callstack 0
   727   00003B                     ___awmod@divisor:
   728                           	callstack 0
   729   00003B                     ___lwdiv@divisor:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x3
   733   00003B                     	ds	1
   734   00003C                     ??_fputc:
   735   00003C                     ADC_Init@_adc:
   736                           	callstack 0
   737   00003C                     ADC_SelectChannel@_adc:
   738                           	callstack 0
   739   00003C                     memset@n:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x4
   743   00003C                     	ds	1
   744   00003D                     ??_ADC_Init:
   745   00003D                     ??___xxtofl:
   746   00003D                     ADC_SelectChannel@channel:
   747                           	callstack 0
   748   00003D                     ___awdiv@counter:
   749                           	callstack 0
   750   00003D                     ___awmod@counter:
   751                           	callstack 0
   752   00003D                     ___lwdiv@quotient:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x5
   756   00003D                     	ds	1
   757   00003E                     ??_ADC_SelectChannel:
   758   00003E                     ADC_Init@ret:
   759                           	callstack 0
   760   00003E                     ADC_GetConversionResult@ret:
   761                           	callstack 0
   762   00003E                     ___awdiv@sign:
   763                           	callstack 0
   764   00003E                     ___awmod@sign:
   765                           	callstack 0
   766   00003E                     memset@p:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0x6
   770   00003E                     	ds	1
   771   00003F                     ?_abs:
   772                           	callstack 0
   773   00003F                     ADC_SelectChannel@ret:
   774                           	callstack 0
   775   00003F                     gpio_pin_direction_intialize@ret:
   776                           	callstack 0
   777   00003F                     ___lwdiv@counter:
   778                           	callstack 0
   779   00003F                     ___awdiv@quotient:
   780                           	callstack 0
   781   00003F                     abs@a:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x7
   785   00003F                     	ds	1
   786   000040                     ADC_GetConversion_Blocking@_adc:
   787                           	callstack 0
   788   000040                     gpio_pin_write_logic@ret:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x8
   792   000040                     	ds	1
   793   000041                     ??_abs:
   794   000041                     lcd_send_4bits@lcd:
   795                           	callstack 0
   796   000041                     lcd_4bit_send_enable_signal@lcd:
   797                           	callstack 0
   798   000041                     dc_motor_move_right@_dc_motor:
   799                           	callstack 0
   800   000041                     dc_motor_stop@_dc_motor:
   801                           	callstack 0
   802   000041                     ADC_GetConversion_Blocking@channel:
   803                           	callstack 0
   804   000041                     gpio_pin_intialize@_pin_config:
   805                           	callstack 0
   806   000041                     ___xxtofl@sign:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0x9
   810   000041                     	ds	1
   811   000042                     ??_gpio_pin_intialize:
   812   000042                     lcd_send_4bits@_data_command:
   813                           	callstack 0
   814   000042                     lcd_4bit_send_enable_signal@ret:
   815                           	callstack 0
   816   000042                     dc_motor_move_right@ret:
   817                           	callstack 0
   818   000042                     dc_motor_stop@ret:
   819                           	callstack 0
   820   000042                     ADC_GetConversion_Blocking@conversion_result:
   821                           	callstack 0
   822   000042                     ___xxtofl@exp:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0xA
   826   000042                     	ds	1
   827   000043                     lcd_send_4bits@ret:
   828                           	callstack 0
   829   000043                     ADC_GetConversion_Blocking@ret:
   830                           	callstack 0
   831   000043                     gpio_pin_intialize@ret:
   832                           	callstack 0
   833   000043                     vfpfcnvrt@fp:
   834                           	callstack 0
   835   000043                     ___xxtofl@arg:
   836                           	callstack 0
   837                           
   838                           ; 4 bytes @ 0xB
   839   000043                     	ds	1
   840   000044                     lcd_4bit_send_command@lcd:
   841                           	callstack 0
   842   000044                     lcd_4bit_send_char_data@lcd:
   843                           	callstack 0
   844   000044                     dc_motor_initialize@_dc_motor:
   845                           	callstack 0
   846   000044                     vfpfcnvrt@fmt:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0xC
   850   000044                     	ds	1
   851   000045                     lcd_4bit_send_command@command:
   852                           	callstack 0
   853   000045                     lcd_4bit_send_char_data@data:
   854                           	callstack 0
   855   000045                     dc_motor_initialize@ret:
   856                           	callstack 0
   857   000045                     vfpfcnvrt@ap:
   858                           	callstack 0
   859                           
   860                           ; 1 bytes @ 0xD
   861   000045                     	ds	1
   862   000046                     ??_vfpfcnvrt:
   863   000046                     lcd_4bit_send_command@ret:
   864                           	callstack 0
   865   000046                     lcd_4bit_send_char_data@ret:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0xE
   869   000046                     	ds	1
   870   000047                     ?___flmul:
   871                           	callstack 0
   872   000047                     lcd_4bit_intialize@lcd:
   873                           	callstack 0
   874   000047                     lcd_4bit_set_cursor@lcd:
   875                           	callstack 0
   876   000047                     vfpfcnvrt@done:
   877                           	callstack 0
   878   000047                     ___flmul@b:
   879                           	callstack 0
   880                           
   881                           ; 4 bytes @ 0xF
   882   000047                     	ds	1
   883   000048                     ??_lcd_4bit_intialize:
   884   000048                     lcd_4bit_set_cursor@row:
   885                           	callstack 0
   886   000048                     vfpfcnvrt@cp:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x10
   890   000048                     	ds	1
   891   000049                     lcd_4bit_intialize@l_data_pins_counter:
   892                           	callstack 0
   893   000049                     lcd_4bit_set_cursor@coulmn:
   894                           	callstack 0
   895   000049                     vfpfcnvrt@convarg:
   896                           	callstack 0
   897                           
   898                           ; 4 bytes @ 0x11
   899   000049                     	ds	1
   900   00004A                     lcd_4bit_intialize@ret:
   901                           	callstack 0
   902   00004A                     lcd_4bit_set_cursor@ret:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0x12
   906   00004A                     	ds	1
   907   00004B                     lcd_4bit_send_char_data_pos@lcd:
   908                           	callstack 0
   909   00004B                     lcd_4bit_send_string_pos@lcd:
   910                           	callstack 0
   911   00004B                     ___flmul@a:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x13
   915   00004B                     	ds	1
   916   00004C                     lcd_4bit_send_char_data_pos@row:
   917                           	callstack 0
   918   00004C                     lcd_4bit_send_string_pos@row:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x14
   922   00004C                     	ds	1
   923   00004D                     lcd_4bit_send_char_data_pos@column:
   924                           	callstack 0
   925   00004D                     lcd_4bit_send_string_pos@column:
   926                           	callstack 0
   927   00004D                     vfpfcnvrt@c:
   928                           	callstack 0
   929                           
   930                           ; 1 bytes @ 0x15
   931   00004D                     	ds	1
   932   00004E                     ?_vfprintf:
   933                           	callstack 0
   934   00004E                     lcd_4bit_send_char_data_pos@data:
   935                           	callstack 0
   936   00004E                     vfprintf@fp:
   937                           	callstack 0
   938   00004E                     lcd_4bit_send_string_pos@str:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x16
   942   00004E                     	ds	1
   943   00004F                     ??___flmul:
   944   00004F                     lcd_4bit_send_char_data_pos@ret:
   945                           	callstack 0
   946   00004F                     vfprintf@fmt:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x17
   950   00004F                     	ds	1
   951   000050                     lcd_4bit_send_string_pos@ret:
   952                           	callstack 0
   953   000050                     lcd_4bit_send_custom_char@lcd:
   954                           	callstack 0
   955   000050                     vfprintf@ap:
   956                           	callstack 0
   957                           
   958                           ; 1 bytes @ 0x18
   959   000050                     	ds	1
   960   000051                     lcd_4bit_send_custom_char@row:
   961                           	callstack 0
   962   000051                     vfprintf@cfmt:
   963                           	callstack 0
   964                           
   965                           ; 1 bytes @ 0x19
   966   000051                     	ds	1
   967   000052                     ?_sprintf:
   968                           	callstack 0
   969   000052                     lcd_4bit_send_custom_char@column:
   970                           	callstack 0
   971   000052                     sprintf@s:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x1A
   975   000052                     	ds	1
   976   000053                     lcd_4bit_send_custom_char@_chr:
   977                           	callstack 0
   978   000053                     ___flmul@sign:
   979                           	callstack 0
   980                           
   981                           ; 1 bytes @ 0x1B
   982   000053                     	ds	1
   983   000054                     lcd_4bit_send_custom_char@mem_pos:
   984                           	callstack 0
   985   000054                     sprintf@fmt:
   986                           	callstack 0
   987   000054                     ___flmul@grs:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x1C
   991   000054                     	ds	1
   992   000055                     lcd_4bit_send_custom_char@ret:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x1D
   996   000055                     	ds	1
   997   000056                     lcd_4bit_send_custom_char@lcd_counter:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x1E
  1001   000056                     	ds	2
  1002   000058                     ___flmul@aexp:
  1003                           	callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x20
  1006   000058                     	ds	1
  1007   000059                     ___flmul@bexp:
  1008                           	callstack 0
  1009   000059                     sprintf@ap:
  1010                           	callstack 0
  1011                           
  1012                           ; 1 bytes @ 0x21
  1013   000059                     	ds	1
  1014   00005A                     ___flmul@prod:
  1015                           	callstack 0
  1016   00005A                     sprintf@f:
  1017                           	callstack 0
  1018                           
  1019                           ; 12 bytes @ 0x22
  1020   00005A                     	ds	4
  1021   00005E                     ___flmul@temp:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x26
  1025   00005E                     	ds	2
  1026   000060                     ?___fltol:
  1027                           	callstack 0
  1028   000060                     ___fltol@f1:
  1029                           	callstack 0
  1030                           
  1031                           ; 4 bytes @ 0x28
  1032   000060                     	ds	4
  1033   000064                     ??___fltol:
  1034                           
  1035                           ; 1 bytes @ 0x2C
  1036   000064                     	ds	2
  1037   000066                     convert_uint16_to_string@value:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x2E
  1041   000066                     	ds	2
  1042   000068                     convert_uint16_to_string@str:
  1043                           	callstack 0
  1044   000068                     ___fltol@sign1:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x30
  1048   000068                     	ds	1
  1049   000069                     ___fltol@exp1:
  1050                           	callstack 0
  1051                           
  1052                           ; 1 bytes @ 0x31
  1053   000069                     	ds	1
  1054   00006A                     
  1055                           ; 1 bytes @ 0x32
  1056 ;;
  1057 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1058 ;;
  1059 ;; *************** function _main *****************
  1060 ;; Defined at:
  1061 ;;		line 76 in file "application.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  ret             1    0        unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  2  1740[None  ] int 
  1068 ;; Registers used:
  1069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;Total ram usage:        0 bytes
  1080 ;; Hardware stack levels required when called: 8
  1081 ;; This function calls:
  1082 ;;		_ADC_GetConversion_Blocking
  1083 ;;		_ADC_Init
  1084 ;;		___flmul
  1085 ;;		___fltol
  1086 ;;		___lwdiv
  1087 ;;		___xxtofl
  1088 ;;		_application_intialize
  1089 ;;		_convert_uint16_to_string
  1090 ;;		_dc_motor_initialize
  1091 ;;		_dc_motor_move_right
  1092 ;;		_dc_motor_stop
  1093 ;;		_lcd_4bit_intialize
  1094 ;;		_lcd_4bit_send_custom_char
  1095 ;;		_lcd_4bit_send_string_pos
  1096 ;; This function is called by:
  1097 ;;		Startup code after reset
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text0
  1102   001864                     __ptext0:
  1103                           	callstack 0
  1104   001864                     _main:
  1105                           	callstack 23
  1106   001864                     
  1107                           ;application.c: 79:     application_intialize();
  1108   001864  EC7A  F017         	call	_application_intialize	;wreg free
  1109   001868  0EF3               	movlw	low _lcd_1
  1110   00186A  6E47               	movwf	lcd_4bit_intialize@lcd^0,c
  1111   00186C  EC9B  F010         	call	_lcd_4bit_intialize	;wreg free
  1112   001870  0EEC               	movlw	low _adc_1
  1113   001872  6E3C               	movwf	ADC_Init@_adc^0,c
  1114   001874  ECEF  F012         	call	_ADC_Init	;wreg free
  1115   001878  0E77               	movlw	low _dc_motor_1
  1116   00187A  6E44               	movwf	dc_motor_initialize@_dc_motor^0,c
  1117   00187C  ECD5  F016         	call	_dc_motor_initialize	;wreg free
  1118   001880  0E75               	movlw	low _dc_motor_2
  1119   001882  6E44               	movwf	dc_motor_initialize@_dc_motor^0,c
  1120   001884  ECD5  F016         	call	_dc_motor_initialize	;wreg free
  1121   001888  0EF3               	movlw	low _lcd_1
  1122   00188A  6E4B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1123   00188C  0E02               	movlw	2
  1124   00188E  6E4C               	movwf	lcd_4bit_send_string_pos@row^0,c
  1125   001890  0E01               	movlw	1
  1126   001892  6E4D               	movwf	lcd_4bit_send_string_pos@column^0,c
  1127   001894  0E11               	movlw	low STR_4
  1128   001896  6E4E               	movwf	lcd_4bit_send_string_pos@str^0,c
  1129   001898  504E               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1130   00189A  A4D8               	btfss	status,2,c
  1131   00189C  0E10               	movlw	high __smallconst
  1132   00189E  6E4F               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1133   0018A0  EC9A  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1134   0018A4  0EF3               	movlw	low _lcd_1
  1135   0018A6  6E4B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1136   0018A8  0E03               	movlw	3
  1137   0018AA  6E4C               	movwf	lcd_4bit_send_string_pos@row^0,c
  1138   0018AC  0E01               	movlw	1
  1139   0018AE  6E4D               	movwf	lcd_4bit_send_string_pos@column^0,c
  1140   0018B0  0E20               	movlw	low STR_5
  1141   0018B2  6E4E               	movwf	lcd_4bit_send_string_pos@str^0,c
  1142   0018B4  504E               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1143   0018B6  A4D8               	btfss	status,2,c
  1144   0018B8  0E10               	movlw	high __smallconst
  1145   0018BA  6E4F               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1146   0018BC  EC9A  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1147   0018C0  0EF3               	movlw	low _lcd_1
  1148   0018C2  6E50               	movwf	lcd_4bit_send_custom_char@lcd^0,c
  1149   0018C4  0E02               	movlw	2
  1150   0018C6  6E51               	movwf	lcd_4bit_send_custom_char@row^0,c
  1151   0018C8  0E11               	movlw	17
  1152   0018CA  6E52               	movwf	lcd_4bit_send_custom_char@column^0,c
  1153   0018CC  0EE4               	movlw	low _Celsius
  1154   0018CE  6E53               	movwf	lcd_4bit_send_custom_char@_chr^0,c
  1155   0018D0  0E00               	movlw	0
  1156   0018D2  6E54               	movwf	lcd_4bit_send_custom_char@mem_pos^0,c
  1157   0018D4  EC61  F014         	call	_lcd_4bit_send_custom_char	;wreg free
  1158   0018D8  0EF3               	movlw	low _lcd_1
  1159   0018DA  6E50               	movwf	lcd_4bit_send_custom_char@lcd^0,c
  1160   0018DC  0E03               	movlw	3
  1161   0018DE  6E51               	movwf	lcd_4bit_send_custom_char@row^0,c
  1162   0018E0  0E11               	movlw	17
  1163   0018E2  6E52               	movwf	lcd_4bit_send_custom_char@column^0,c
  1164   0018E4  0EE4               	movlw	low _Celsius
  1165   0018E6  6E53               	movwf	lcd_4bit_send_custom_char@_chr^0,c
  1166   0018E8  0E00               	movlw	0
  1167   0018EA  6E54               	movwf	lcd_4bit_send_custom_char@mem_pos^0,c
  1168   0018EC  EC61  F014         	call	_lcd_4bit_send_custom_char	;wreg free
  1169   0018F0                     l7980:
  1170   0018F0  0EEC               	movlw	low _adc_1
  1171   0018F2  6E40               	movwf	ADC_GetConversion_Blocking@_adc^0,c
  1172   0018F4  0E00               	movlw	0
  1173   0018F6  6E41               	movwf	ADC_GetConversion_Blocking@channel^0,c
  1174   0018F8  0E36               	movlw	low _lm35_res_1
  1175   0018FA  6E42               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1176   0018FC  ECCB  F014         	call	_ADC_GetConversion_Blocking	;wreg free
  1177   001900  0EEC               	movlw	low _adc_1
  1178   001902  6E40               	movwf	ADC_GetConversion_Blocking@_adc^0,c
  1179   001904  0E01               	movlw	1
  1180   001906  6E41               	movwf	ADC_GetConversion_Blocking@channel^0,c
  1181   001908  0E34               	movlw	low _lm35_res_2
  1182   00190A  6E42               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1183   00190C  ECCB  F014         	call	_ADC_GetConversion_Blocking	;wreg free
  1184   001910                     
  1185                           ;application.c: 97:         lm35_res_1_Celsius_mv = lm35_res_1 * 4.88f;
  1186   001910  0EF6               	movlw	246
  1187   001912  6E4B               	movwf	___flmul@a^0,c
  1188   001914  0E28               	movlw	40
  1189   001916  6E4C               	movwf	(___flmul@a+1)^0,c
  1190   001918  0E9C               	movlw	156
  1191   00191A  6E4D               	movwf	(___flmul@a+2)^0,c
  1192   00191C  0E40               	movlw	64
  1193   00191E  6E4E               	movwf	(___flmul@a+3)^0,c
  1194   001920  C036  F039         	movff	_lm35_res_1,___xxtofl@val
  1195   001924  C037  F03A         	movff	_lm35_res_1+1,___xxtofl@val+1
  1196   001928  6A3B               	clrf	(___xxtofl@val+2)^0,c
  1197   00192A  6A3C               	clrf	(___xxtofl@val+3)^0,c
  1198   00192C  0E00               	movlw	0
  1199   00192E  EC2D  F00E         	call	___xxtofl
  1200   001932  C039  F047         	movff	?___xxtofl,___flmul@b
  1201   001936  C03A  F048         	movff	?___xxtofl+1,___flmul@b+1
  1202   00193A  C03B  F049         	movff	?___xxtofl+2,___flmul@b+2
  1203   00193E  C03C  F04A         	movff	?___xxtofl+3,___flmul@b+3
  1204   001942  EC1A  F008         	call	___flmul	;wreg free
  1205   001946  C047  F060         	movff	?___flmul,___fltol@f1
  1206   00194A  C048  F061         	movff	?___flmul+1,___fltol@f1+1
  1207   00194E  C049  F062         	movff	?___flmul+2,___fltol@f1+2
  1208   001952  C04A  F063         	movff	?___flmul+3,___fltol@f1+3
  1209   001956  EC18  F010         	call	___fltol	;wreg free
  1210   00195A  C060  F0FB         	movff	?___fltol,_lm35_res_1_Celsius_mv
  1211   00195E  C061  F0FC         	movff	?___fltol+1,_lm35_res_1_Celsius_mv+1
  1212   001962                     
  1213                           ;application.c: 98:         lm35_res_2_Celsius_mv = lm35_res_2 * 4.88f;
  1214   001962  0EF6               	movlw	246
  1215   001964  6E4B               	movwf	___flmul@a^0,c
  1216   001966  0E28               	movlw	40
  1217   001968  6E4C               	movwf	(___flmul@a+1)^0,c
  1218   00196A  0E9C               	movlw	156
  1219   00196C  6E4D               	movwf	(___flmul@a+2)^0,c
  1220   00196E  0E40               	movlw	64
  1221   001970  6E4E               	movwf	(___flmul@a+3)^0,c
  1222   001972  C034  F039         	movff	_lm35_res_2,___xxtofl@val
  1223   001976  C035  F03A         	movff	_lm35_res_2+1,___xxtofl@val+1
  1224   00197A  6A3B               	clrf	(___xxtofl@val+2)^0,c
  1225   00197C  6A3C               	clrf	(___xxtofl@val+3)^0,c
  1226   00197E  0E00               	movlw	0
  1227   001980  EC2D  F00E         	call	___xxtofl
  1228   001984  C039  F047         	movff	?___xxtofl,___flmul@b
  1229   001988  C03A  F048         	movff	?___xxtofl+1,___flmul@b+1
  1230   00198C  C03B  F049         	movff	?___xxtofl+2,___flmul@b+2
  1231   001990  C03C  F04A         	movff	?___xxtofl+3,___flmul@b+3
  1232   001994  EC1A  F008         	call	___flmul	;wreg free
  1233   001998  C047  F060         	movff	?___flmul,___fltol@f1
  1234   00199C  C048  F061         	movff	?___flmul+1,___fltol@f1+1
  1235   0019A0  C049  F062         	movff	?___flmul+2,___fltol@f1+2
  1236   0019A4  C04A  F063         	movff	?___flmul+3,___fltol@f1+3
  1237   0019A8  EC18  F010         	call	___fltol	;wreg free
  1238   0019AC  C060  F0F9         	movff	?___fltol,_lm35_res_2_Celsius_mv
  1239   0019B0  C061  F0FA         	movff	?___fltol+1,_lm35_res_2_Celsius_mv+1
  1240   0019B4                     
  1241                           ;application.c: 100:         lm35_res_1_Celsius_mv /= 10;
  1242   0019B4  C0FB  F039         	movff	_lm35_res_1_Celsius_mv,___lwdiv@dividend
  1243   0019B8  C0FC  F03A         	movff	_lm35_res_1_Celsius_mv+1,___lwdiv@dividend+1
  1244   0019BC  0E00               	movlw	0
  1245   0019BE  6E3C               	movwf	(___lwdiv@divisor+1)^0,c
  1246   0019C0  0E0A               	movlw	10
  1247   0019C2  6E3B               	movwf	___lwdiv@divisor^0,c
  1248   0019C4  EC27  F014         	call	___lwdiv	;wreg free
  1249   0019C8  C039  F0FB         	movff	?___lwdiv,_lm35_res_1_Celsius_mv
  1250   0019CC  C03A  F0FC         	movff	?___lwdiv+1,_lm35_res_1_Celsius_mv+1
  1251   0019D0                     
  1252                           ;application.c: 101:         lm35_res_2_Celsius_mv /= 10;
  1253   0019D0  C0F9  F039         	movff	_lm35_res_2_Celsius_mv,___lwdiv@dividend
  1254   0019D4  C0FA  F03A         	movff	_lm35_res_2_Celsius_mv+1,___lwdiv@dividend+1
  1255   0019D8  0E00               	movlw	0
  1256   0019DA  6E3C               	movwf	(___lwdiv@divisor+1)^0,c
  1257   0019DC  0E0A               	movlw	10
  1258   0019DE  6E3B               	movwf	___lwdiv@divisor^0,c
  1259   0019E0  EC27  F014         	call	___lwdiv	;wreg free
  1260   0019E4  C039  F0F9         	movff	?___lwdiv,_lm35_res_2_Celsius_mv
  1261   0019E8  C03A  F0FA         	movff	?___lwdiv+1,_lm35_res_2_Celsius_mv+1
  1262   0019EC  C0FB  F066         	movff	_lm35_res_1_Celsius_mv,convert_uint16_to_string@value
  1263   0019F0  C0FC  F067         	movff	_lm35_res_1_Celsius_mv+1,convert_uint16_to_string@value+1
  1264   0019F4  0EBF               	movlw	low _lm35_res_1_txt
  1265   0019F6  6E68               	movwf	convert_uint16_to_string@str^0,c
  1266   0019F8  EC45  F013         	call	_convert_uint16_to_string	;wreg free
  1267   0019FC  C0F9  F066         	movff	_lm35_res_2_Celsius_mv,convert_uint16_to_string@value
  1268   001A00  C0FA  F067         	movff	_lm35_res_2_Celsius_mv+1,convert_uint16_to_string@value+1
  1269   001A04  0EB8               	movlw	low _lm35_res_2_txt
  1270   001A06  6E68               	movwf	convert_uint16_to_string@str^0,c
  1271   001A08  EC45  F013         	call	_convert_uint16_to_string	;wreg free
  1272   001A0C  0EF3               	movlw	low _lcd_1
  1273   001A0E  6E4B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1274   001A10  0E02               	movlw	2
  1275   001A12  6E4C               	movwf	lcd_4bit_send_string_pos@row^0,c
  1276   001A14  0E0E               	movlw	14
  1277   001A16  6E4D               	movwf	lcd_4bit_send_string_pos@column^0,c
  1278   001A18  0EBF               	movlw	low _lm35_res_1_txt
  1279   001A1A  6E4E               	movwf	lcd_4bit_send_string_pos@str^0,c
  1280   001A1C  6A4F               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  1281   001A1E  EC9A  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1282   001A22  0EF3               	movlw	low _lcd_1
  1283   001A24  6E4B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1284   001A26  0E03               	movlw	3
  1285   001A28  6E4C               	movwf	lcd_4bit_send_string_pos@row^0,c
  1286   001A2A  0E0E               	movlw	14
  1287   001A2C  6E4D               	movwf	lcd_4bit_send_string_pos@column^0,c
  1288   001A2E  0EB8               	movlw	low _lm35_res_2_txt
  1289   001A30  6E4E               	movwf	lcd_4bit_send_string_pos@str^0,c
  1290   001A32  6A4F               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  1291   001A34  EC9A  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1292   001A38                     
  1293                           ;application.c: 109:         if(lm35_res_1_Celsius_mv > 20){
  1294   001A38  0100               	movlb	0	; () banked
  1295   001A3A  51FC               	movf	(_lm35_res_1_Celsius_mv+1)& (0+255),w,b
  1296   001A3C  E109               	bnz	u7470
  1297   001A3E  0E15               	movlw	21
  1298   001A40  5DFB               	subwf	_lm35_res_1_Celsius_mv& (0+255),w,b
  1299   001A42  A0D8               	btfss	status,0,c
  1300   001A44  EF26  F00D         	goto	u7471
  1301   001A48  EF28  F00D         	goto	u7470
  1302   001A4C                     u7471:
  1303   001A4C  EF2E  F00D         	goto	l8004
  1304   001A50                     u7470:
  1305   001A50                     
  1306                           ; BSR set to: 0
  1307   001A50  0E77               	movlw	low _dc_motor_1
  1308   001A52  6E41               	movwf	dc_motor_move_right@_dc_motor^0,c
  1309   001A54  EC69  F016         	call	_dc_motor_move_right	;wreg free
  1310                           
  1311                           ;application.c: 111:         }
  1312   001A58  EF32  F00D         	goto	l8006
  1313   001A5C                     l8004:
  1314                           
  1315                           ; BSR set to: 0
  1316   001A5C  0E77               	movlw	low _dc_motor_1
  1317   001A5E  6E41               	movwf	dc_motor_stop@_dc_motor^0,c
  1318   001A60  EC4D  F016         	call	_dc_motor_stop	;wreg free
  1319   001A64                     l8006:
  1320                           
  1321                           ;application.c: 116:         if(lm35_res_2_Celsius_mv > 25){
  1322   001A64  0100               	movlb	0	; () banked
  1323   001A66  51FA               	movf	(_lm35_res_2_Celsius_mv+1)& (0+255),w,b
  1324   001A68  E109               	bnz	u7480
  1325   001A6A  0E1A               	movlw	26
  1326   001A6C  5DF9               	subwf	_lm35_res_2_Celsius_mv& (0+255),w,b
  1327   001A6E  A0D8               	btfss	status,0,c
  1328   001A70  EF3C  F00D         	goto	u7481
  1329   001A74  EF3E  F00D         	goto	u7480
  1330   001A78                     u7481:
  1331   001A78  EF44  F00D         	goto	l8010
  1332   001A7C                     u7480:
  1333   001A7C                     
  1334                           ; BSR set to: 0
  1335   001A7C  0E75               	movlw	low _dc_motor_2
  1336   001A7E  6E41               	movwf	dc_motor_move_right@_dc_motor^0,c
  1337   001A80  EC69  F016         	call	_dc_motor_move_right	;wreg free
  1338                           
  1339                           ;application.c: 118:         }
  1340   001A84  EF78  F00C         	goto	l7980
  1341   001A88                     l8010:
  1342                           
  1343                           ; BSR set to: 0
  1344   001A88  0E75               	movlw	low _dc_motor_2
  1345   001A8A  6E41               	movwf	dc_motor_stop@_dc_motor^0,c
  1346   001A8C  EC4D  F016         	call	_dc_motor_stop	;wreg free
  1347   001A90  EF78  F00C         	goto	l7980
  1348   001A94  EF07  F000         	goto	start
  1349   001A98                     __end_of_main:
  1350                           	callstack 0
  1351                           
  1352 ;; *************** function _lcd_4bit_send_string_pos *****************
  1353 ;; Defined at:
  1354 ;;		line 163 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  lcd             1   19[COMRAM] PTR const struct .
  1357 ;;		 -> lcd_1(6), 
  1358 ;;  row             1   20[COMRAM] unsigned char 
  1359 ;;  column          1   21[COMRAM] unsigned char 
  1360 ;;  str             2   22[COMRAM] PTR unsigned char 
  1361 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), STR_5(15), STR_4(15), 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  ret             1   24[COMRAM] unsigned char 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      unsigned char 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1373 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;Total ram usage:        6 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 6
  1380 ;; This function calls:
  1381 ;;		_lcd_4bit_send_char_data
  1382 ;;		_lcd_4bit_set_cursor
  1383 ;; This function is called by:
  1384 ;;		_main
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text1
  1389   002734                     __ptext1:
  1390                           	callstack 0
  1391   002734                     _lcd_4bit_send_string_pos:
  1392                           	callstack 24
  1393   002734                     
  1394                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 165:     if(((void*)0) == lcd){
  1395   002734  504B               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1396   002736  A4D8               	btfss	status,2,c
  1397   002738  EFA0  F013         	goto	u4701
  1398   00273C  EFA2  F013         	goto	u4700
  1399   002740                     u4701:
  1400   002740  EFA6  F013         	goto	l6074
  1401   002744                     u4700:
  1402   002744                     
  1403                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 166:         ret = (Std_ReturnType)0x00;
  1404   002744  0E00               	movlw	0
  1405   002746  6E50               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1406                           
  1407                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 167:     }
  1408   002748  EFE3  F013         	goto	l6082
  1409   00274C                     l6074:
  1410                           
  1411                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 169:         ret = lcd_4bit_set_cursor(lcd, row, colum
      +                          n);
  1412   00274C  C04B  F047         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1413   002750  C04C  F048         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1414   002754  C04D  F049         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@coulmn
  1415   002758  ECE5  F013         	call	_lcd_4bit_set_cursor	;wreg free
  1416   00275C  6E50               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1417                           
  1418                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 170:         while(*str){
  1419   00275E  EFCA  F013         	goto	l6080
  1420   002762                     l6076:
  1421                           
  1422                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 171:             ret = lcd_4bit_send_char_data(lcd, *s
      +                          tr++);
  1423   002762  C04B  F044         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  1424   002766  C04E  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1425   00276A  C04F  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1426   00276E  0E00               	movlw	low (__smallconst shr (0+16))
  1427   002770  6EF8               	movwf	tblptru,c
  1428   002772  0E0F               	movlw	(high __ramtop+-1)
  1429   002774  64F7               	cpfsgt	tblptrh,c
  1430   002776  D003               	bra	u4717
  1431   002778  0008               	tblrd		*
  1432   00277A  50F5               	movf	tablat,w,c
  1433   00277C  D005               	bra	u4710
  1434   00277E                     u4717:
  1435   00277E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1436   002782  CFF7 FFEA          	movff	tblptrh,fsr0h
  1437   002786  50EF               	movf	indf0,w,c
  1438   002788                     u4710:
  1439   002788  6E45               	movwf	lcd_4bit_send_char_data@data^0,c
  1440   00278A  EC2A  F015         	call	_lcd_4bit_send_char_data	;wreg free
  1441   00278E  6E50               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1442   002790  4A4E               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  1443   002792  2A4F               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  1444   002794                     l6080:
  1445                           
  1446                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 170:         while(*str){
  1447   002794  C04E  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1448   002798  C04F  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1449   00279C  0E00               	movlw	low (__smallconst shr (0+16))
  1450   00279E  6EF8               	movwf	tblptru,c
  1451   0027A0  0E0F               	movlw	(high __ramtop+-1)
  1452   0027A2  64F7               	cpfsgt	tblptrh,c
  1453   0027A4  D003               	bra	u4727
  1454   0027A6  0008               	tblrd		*
  1455   0027A8  50F5               	movf	tablat,w,c
  1456   0027AA  D005               	bra	u4720
  1457   0027AC                     u4727:
  1458   0027AC  CFF6 FFE9          	movff	tblptrl,fsr0l
  1459   0027B0  CFF7 FFEA          	movff	tblptrh,fsr0h
  1460   0027B4  50EF               	movf	indf0,w,c
  1461   0027B6                     u4720:
  1462   0027B6  0900               	iorlw	0
  1463   0027B8  A4D8               	btfss	status,2,c
  1464   0027BA  EFE1  F013         	goto	u4731
  1465   0027BE  EFE3  F013         	goto	u4730
  1466   0027C2                     u4731:
  1467   0027C2  EFB1  F013         	goto	l6076
  1468   0027C6                     u4730:
  1469   0027C6                     l6082:
  1470                           
  1471                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 174:     return ret;
  1472   0027C6  5050               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1473   0027C8  0012               	return		;funcret
  1474   0027CA                     __end_of_lcd_4bit_send_string_pos:
  1475                           	callstack 0
  1476                           
  1477 ;; *************** function _lcd_4bit_send_custom_char *****************
  1478 ;; Defined at:
  1479 ;;		line 188 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;  lcd             1   24[COMRAM] PTR const struct .
  1482 ;;		 -> lcd_1(6), 
  1483 ;;  row             1   25[COMRAM] unsigned char 
  1484 ;;  column          1   26[COMRAM] unsigned char 
  1485 ;;  _chr            1   27[COMRAM] PTR const unsigned char 
  1486 ;;		 -> Celsius(8), 
  1487 ;;  mem_pos         1   28[COMRAM] unsigned char 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  lcd_counter     1   30[COMRAM] unsigned char 
  1490 ;;  ret             1   29[COMRAM] unsigned char 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      unsigned char 
  1493 ;; Registers used:
  1494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1500 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;Total ram usage:        7 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; Hardware stack levels required when called: 7
  1507 ;; This function calls:
  1508 ;;		_lcd_4bit_send_char_data
  1509 ;;		_lcd_4bit_send_char_data_pos
  1510 ;;		_lcd_4bit_send_command
  1511 ;; This function is called by:
  1512 ;;		_main
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text2
  1517   0028C2                     __ptext2:
  1518                           	callstack 0
  1519   0028C2                     _lcd_4bit_send_custom_char:
  1520                           	callstack 23
  1521   0028C2                     
  1522                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 191:     uint8 lcd_counter = 0;
  1523   0028C2  0E00               	movlw	0
  1524   0028C4  6E56               	movwf	lcd_4bit_send_custom_char@lcd_counter^0,c
  1525                           
  1526                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 192:     if(((void*)0) == lcd){
  1527   0028C6  5050               	movf	lcd_4bit_send_custom_char@lcd^0,w,c
  1528   0028C8  A4D8               	btfss	status,2,c
  1529   0028CA  EF69  F014         	goto	u4741
  1530   0028CE  EF6B  F014         	goto	u4740
  1531   0028D2                     u4741:
  1532   0028D2  EF6F  F014         	goto	l6090
  1533   0028D6                     u4740:
  1534   0028D6                     
  1535                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 193:         ret = (Std_ReturnType)0x00;
  1536   0028D6  0E00               	movlw	0
  1537   0028D8  6E55               	movwf	lcd_4bit_send_custom_char@ret^0,c
  1538                           
  1539                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 194:     }
  1540   0028DA  EF98  F014         	goto	l6106
  1541   0028DE                     l6090:
  1542   0028DE  C050  F044         	movff	lcd_4bit_send_custom_char@lcd,lcd_4bit_send_command@lcd
  1543   0028E2  5054               	movf	lcd_4bit_send_custom_char@mem_pos^0,w,c
  1544   0028E4  0D08               	mullw	8
  1545   0028E6  50F3               	movf	243,w,c
  1546   0028E8  0F40               	addlw	64
  1547   0028EA  6E45               	movwf	lcd_4bit_send_command@command^0,c
  1548   0028EC  EC58  F015         	call	_lcd_4bit_send_command	;wreg free
  1549   0028F0                     
  1550                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 197:         for(lcd_counter=0; lcd_counter<=7; ++lcd_
      +                          counter){
  1551   0028F0  0E00               	movlw	0
  1552   0028F2  6E56               	movwf	lcd_4bit_send_custom_char@lcd_counter^0,c
  1553   0028F4                     l6098:
  1554   0028F4  C050  F044         	movff	lcd_4bit_send_custom_char@lcd,lcd_4bit_send_char_data@lcd
  1555   0028F8  5053               	movf	lcd_4bit_send_custom_char@_chr^0,w,c
  1556   0028FA  2456               	addwf	lcd_4bit_send_custom_char@lcd_counter^0,w,c
  1557   0028FC  6ED9               	movwf	fsr2l,c
  1558   0028FE  6ADA               	clrf	fsr2h,c
  1559   002900  50DF               	movf	indf2,w,c
  1560   002902  6E45               	movwf	lcd_4bit_send_char_data@data^0,c
  1561   002904  EC2A  F015         	call	_lcd_4bit_send_char_data	;wreg free
  1562   002908                     
  1563                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 199:         }
  1564   002908  2A56               	incf	lcd_4bit_send_custom_char@lcd_counter^0,f,c
  1565   00290A  0E07               	movlw	7
  1566   00290C  6456               	cpfsgt	lcd_4bit_send_custom_char@lcd_counter^0,c
  1567   00290E  EF8B  F014         	goto	u4751
  1568   002912  EF8D  F014         	goto	u4750
  1569   002916                     u4751:
  1570   002916  EF7A  F014         	goto	l6098
  1571   00291A                     u4750:
  1572   00291A                     
  1573                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 200:         ret = lcd_4bit_send_char_data_pos(lcd, ro
      +                          w, column, mem_pos);
  1574   00291A  C050  F04B         	movff	lcd_4bit_send_custom_char@lcd,lcd_4bit_send_char_data_pos@lcd
  1575   00291E  C051  F04C         	movff	lcd_4bit_send_custom_char@row,lcd_4bit_send_char_data_pos@row
  1576   002922  C052  F04D         	movff	lcd_4bit_send_custom_char@column,lcd_4bit_send_char_data_pos@column
  1577   002926  C054  F04E         	movff	lcd_4bit_send_custom_char@mem_pos,lcd_4bit_send_char_data_pos@data
  1578   00292A  EC11  F016         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1579   00292E  6E55               	movwf	lcd_4bit_send_custom_char@ret^0,c
  1580   002930                     l6106:
  1581                           
  1582                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 202:     return ret;
  1583   002930  5055               	movf	lcd_4bit_send_custom_char@ret^0,w,c
  1584   002932  0012               	return		;funcret
  1585   002934                     __end_of_lcd_4bit_send_custom_char:
  1586                           	callstack 0
  1587                           
  1588 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  1589 ;; Defined at:
  1590 ;;		line 120 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  lcd             1   19[COMRAM] PTR const struct .
  1593 ;;		 -> lcd_1(6), 
  1594 ;;  row             1   20[COMRAM] unsigned char 
  1595 ;;  column          1   21[COMRAM] unsigned char 
  1596 ;;  data            1   22[COMRAM] unsigned char 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  ret             1   23[COMRAM] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      unsigned char 
  1601 ;; Registers used:
  1602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1608 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;Total ram usage:        5 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; Hardware stack levels required when called: 6
  1615 ;; This function calls:
  1616 ;;		_lcd_4bit_send_char_data
  1617 ;;		_lcd_4bit_set_cursor
  1618 ;; This function is called by:
  1619 ;;		_lcd_4bit_send_custom_char
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           	psect	text3
  1624   002C22                     __ptext3:
  1625                           	callstack 0
  1626   002C22                     _lcd_4bit_send_char_data_pos:
  1627                           	callstack 23
  1628   002C22                     
  1629                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 122:     if(((void*)0) == lcd){
  1630   002C22  504B               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  1631   002C24  A4D8               	btfss	status,2,c
  1632   002C26  EF17  F016         	goto	u4521
  1633   002C2A  EF19  F016         	goto	u4520
  1634   002C2E                     u4521:
  1635   002C2E  EF1D  F016         	goto	l5906
  1636   002C32                     u4520:
  1637   002C32                     
  1638                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 123:         ret = (Std_ReturnType)0x00;
  1639   002C32  0E00               	movlw	0
  1640   002C34  6E4F               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1641                           
  1642                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 124:     }
  1643   002C36  EF2D  F016         	goto	l5908
  1644   002C3A                     l5906:
  1645                           
  1646                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 126:         ret = lcd_4bit_set_cursor(lcd, row, colum
      +                          n);
  1647   002C3A  C04B  F047         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_cursor@lcd
  1648   002C3E  C04C  F048         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_cursor@row
  1649   002C42  C04D  F049         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bit_set_cursor@coulmn
  1650   002C46  ECE5  F013         	call	_lcd_4bit_set_cursor	;wreg free
  1651   002C4A  6E4F               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1652                           
  1653                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 127:         ret = lcd_4bit_send_char_data(lcd, data);
  1654   002C4C  C04B  F044         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  1655   002C50  C04E  F045         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  1656   002C54  EC2A  F015         	call	_lcd_4bit_send_char_data	;wreg free
  1657   002C58  6E4F               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1658   002C5A                     l5908:
  1659                           
  1660                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 129:     return ret;
  1661   002C5A  504F               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  1662   002C5C  0012               	return		;funcret
  1663   002C5E                     __end_of_lcd_4bit_send_char_data_pos:
  1664                           	callstack 0
  1665                           
  1666 ;; *************** function _lcd_4bit_set_cursor *****************
  1667 ;; Defined at:
  1668 ;;		line 535 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  lcd             1   15[COMRAM] PTR const struct .
  1671 ;;		 -> lcd_1(6), 
  1672 ;;  row             1   16[COMRAM] unsigned char 
  1673 ;;  coulmn          1   17[COMRAM] unsigned char 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  ret             1   18[COMRAM] unsigned char 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      unsigned char 
  1678 ;; Registers used:
  1679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1685 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;Total ram usage:        4 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; Hardware stack levels required when called: 5
  1692 ;; This function calls:
  1693 ;;		_lcd_4bit_send_command
  1694 ;; This function is called by:
  1695 ;;		_lcd_4bit_send_char_data_pos
  1696 ;;		_lcd_4bit_send_string_pos
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text4
  1701   0027CA                     __ptext4:
  1702                           	callstack 0
  1703   0027CA                     _lcd_4bit_set_cursor:
  1704                           	callstack 24
  1705   0027CA                     
  1706                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 536:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1707   0027CA  0E01               	movlw	1
  1708   0027CC  6E4A               	movwf	lcd_4bit_set_cursor@ret^0,c
  1709   0027CE                     
  1710                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 537:     coulmn--;
  1711   0027CE  0649               	decf	lcd_4bit_set_cursor@coulmn^0,f,c
  1712                           
  1713                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 538:     switch(row){
  1714   0027D0  EF12  F014         	goto	l5840
  1715   0027D4                     l5832:
  1716   0027D4  C047  F044         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1717   0027D8  5049               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1718   0027DA  0F80               	addlw	128
  1719   0027DC  6E45               	movwf	lcd_4bit_send_command@command^0,c
  1720   0027DE  EC58  F015         	call	_lcd_4bit_send_command	;wreg free
  1721   0027E2  6E4A               	movwf	lcd_4bit_set_cursor@ret^0,c
  1722   0027E4  EF25  F014         	goto	l5842
  1723   0027E8                     l5834:
  1724   0027E8  C047  F044         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1725   0027EC  5049               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1726   0027EE  0FC0               	addlw	192
  1727   0027F0  6E45               	movwf	lcd_4bit_send_command@command^0,c
  1728   0027F2  EC58  F015         	call	_lcd_4bit_send_command	;wreg free
  1729   0027F6  6E4A               	movwf	lcd_4bit_set_cursor@ret^0,c
  1730   0027F8  EF25  F014         	goto	l5842
  1731   0027FC                     l5836:
  1732   0027FC  C047  F044         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1733   002800  5049               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1734   002802  0F94               	addlw	148
  1735   002804  6E45               	movwf	lcd_4bit_send_command@command^0,c
  1736   002806  EC58  F015         	call	_lcd_4bit_send_command	;wreg free
  1737   00280A  6E4A               	movwf	lcd_4bit_set_cursor@ret^0,c
  1738   00280C  EF25  F014         	goto	l5842
  1739   002810                     l5838:
  1740   002810  C047  F044         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1741   002814  5049               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1742   002816  0FD4               	addlw	212
  1743   002818  6E45               	movwf	lcd_4bit_send_command@command^0,c
  1744   00281A  EC58  F015         	call	_lcd_4bit_send_command	;wreg free
  1745   00281E  6E4A               	movwf	lcd_4bit_set_cursor@ret^0,c
  1746   002820  EF25  F014         	goto	l5842
  1747   002824                     l5840:
  1748   002824  5048               	movf	lcd_4bit_set_cursor@row^0,w,c
  1749                           
  1750                           ; Switch size 1, requested type "simple"
  1751                           ; Number of cases is 4, Range of values is 1 to 4
  1752                           ; switch strategies available:
  1753                           ; Name         Instructions Cycles
  1754                           ; simple_byte           13     7 (average)
  1755                           ;	Chosen strategy is simple_byte
  1756   002826  0A01               	xorlw	1	; case 1
  1757   002828  B4D8               	btfsc	status,2,c
  1758   00282A  EFEA  F013         	goto	l5832
  1759   00282E  0A03               	xorlw	3	; case 2
  1760   002830  B4D8               	btfsc	status,2,c
  1761   002832  EFF4  F013         	goto	l5834
  1762   002836  0A01               	xorlw	1	; case 3
  1763   002838  B4D8               	btfsc	status,2,c
  1764   00283A  EFFE  F013         	goto	l5836
  1765   00283E  0A07               	xorlw	7	; case 4
  1766   002840  B4D8               	btfsc	status,2,c
  1767   002842  EF08  F014         	goto	l5838
  1768   002846  EF25  F014         	goto	l5842
  1769   00284A                     l5842:
  1770                           
  1771                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 545:     return ret;
  1772   00284A  504A               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1773   00284C  0012               	return		;funcret
  1774   00284E                     __end_of_lcd_4bit_set_cursor:
  1775                           	callstack 0
  1776                           
  1777 ;; *************** function _lcd_4bit_send_char_data *****************
  1778 ;; Defined at:
  1779 ;;		line 89 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;  lcd             1   12[COMRAM] PTR const struct .
  1782 ;;		 -> lcd_1(6), 
  1783 ;;  data            1   13[COMRAM] unsigned char 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  ret             1   14[COMRAM] unsigned char 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      unsigned char 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;Total ram usage:        3 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; Hardware stack levels required when called: 4
  1802 ;; This function calls:
  1803 ;;		_gpio_pin_write_logic
  1804 ;;		_lcd_4bit_send_enable_signal
  1805 ;;		_lcd_send_4bits
  1806 ;; This function is called by:
  1807 ;;		_lcd_4bit_send_char_data_pos
  1808 ;;		_lcd_4bit_send_string_pos
  1809 ;;		_lcd_4bit_send_custom_char
  1810 ;;		_lcd_4bit_send_string
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text5
  1815   002A54                     __ptext5:
  1816                           	callstack 0
  1817   002A54                     _lcd_4bit_send_char_data:
  1818                           	callstack 25
  1819   002A54                     
  1820                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 91:     if(((void*)0) == lcd){
  1821   002A54  5044               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1822   002A56  A4D8               	btfss	status,2,c
  1823   002A58  EF30  F015         	goto	u4481
  1824   002A5C  EF32  F015         	goto	u4480
  1825   002A60                     u4481:
  1826   002A60  EF36  F015         	goto	l5822
  1827   002A64                     u4480:
  1828   002A64                     
  1829                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 92:         ret = (Std_ReturnType)0x00;
  1830   002A64  0E00               	movlw	0
  1831   002A66  6E46               	movwf	lcd_4bit_send_char_data@ret^0,c
  1832                           
  1833                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 93:     }
  1834   002A68  EF56  F015         	goto	l5824
  1835   002A6C                     l5822:
  1836                           
  1837                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 97:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_HIGH);
  1838   002A6C  C044  F039         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  1839   002A70  0E01               	movlw	1
  1840   002A72  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  1841   002A74  EC90  F00F         	call	_gpio_pin_write_logic	;wreg free
  1842   002A78  6E46               	movwf	lcd_4bit_send_char_data@ret^0,c
  1843                           
  1844                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 99:         ret = lcd_send_4bits(lcd, data >> 4);
  1845   002A7A  C044  F041         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1846   002A7E  3845               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1847   002A80  0B0F               	andlw	15
  1848   002A82  6E42               	movwf	lcd_send_4bits@_data_command^0,c
  1849   002A84  EC86  F015         	call	_lcd_send_4bits	;wreg free
  1850   002A88  6E46               	movwf	lcd_4bit_send_char_data@ret^0,c
  1851                           
  1852                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 101:         ret = lcd_4bit_send_enable_signal(lcd);
  1853   002A8A  C044  F041         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1854   002A8E  EC05  F017         	call	_lcd_4bit_send_enable_signal	;wreg free
  1855   002A92  6E46               	movwf	lcd_4bit_send_char_data@ret^0,c
  1856                           
  1857                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 103:         ret = lcd_send_4bits(lcd, data);
  1858   002A94  C044  F041         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1859   002A98  C045  F042         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  1860   002A9C  EC86  F015         	call	_lcd_send_4bits	;wreg free
  1861   002AA0  6E46               	movwf	lcd_4bit_send_char_data@ret^0,c
  1862                           
  1863                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 105:         ret = lcd_4bit_send_enable_signal(lcd);
  1864   002AA2  C044  F041         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1865   002AA6  EC05  F017         	call	_lcd_4bit_send_enable_signal	;wreg free
  1866   002AAA  6E46               	movwf	lcd_4bit_send_char_data@ret^0,c
  1867   002AAC                     l5824:
  1868                           
  1869                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 107:     return ret;
  1870   002AAC  5046               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1871   002AAE  0012               	return		;funcret
  1872   002AB0                     __end_of_lcd_4bit_send_char_data:
  1873                           	callstack 0
  1874                           
  1875 ;; *************** function _lcd_4bit_intialize *****************
  1876 ;; Defined at:
  1877 ;;		line 23 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  lcd             1   15[COMRAM] PTR const struct .
  1880 ;;		 -> lcd_1(6), 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  ret             1   18[COMRAM] unsigned char 
  1883 ;;  l_data_pins_    1   17[COMRAM] unsigned char 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      unsigned char 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1893 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1894 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1896 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1897 ;;Total ram usage:        4 bytes
  1898 ;; Hardware stack levels used: 1
  1899 ;; Hardware stack levels required when called: 5
  1900 ;; This function calls:
  1901 ;;		_gpio_pin_intialize
  1902 ;;		_lcd_4bit_send_command
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text6
  1909   002136                     __ptext6:
  1910                           	callstack 0
  1911   002136                     _lcd_4bit_intialize:
  1912                           	callstack 25
  1913   002136                     
  1914                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 25:     uint8 l_data_pins_counter = 0;
  1915   002136  0E00               	movlw	0
  1916   002138  6E49               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  1917                           
  1918                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 26:     if(((void*)0) == lcd){
  1919   00213A  5047               	movf	lcd_4bit_intialize@lcd^0,w,c
  1920   00213C  A4D8               	btfss	status,2,c
  1921   00213E  EFA3  F010         	goto	u4681
  1922   002142  EFA5  F010         	goto	u4680
  1923   002146                     u4681:
  1924   002146  EFA9  F010         	goto	l6030
  1925   00214A                     u4680:
  1926   00214A                     
  1927                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 27:         ret = (Std_ReturnType)0x00;
  1928   00214A  0E00               	movlw	0
  1929   00214C  6E4A               	movwf	lcd_4bit_intialize@ret^0,c
  1930                           
  1931                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 28:     }
  1932   00214E  EF0E  F011         	goto	l6066
  1933   002152                     l6030:
  1934                           
  1935                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 30:         ret = gpio_pin_intialize(&(lcd->lcd_rs));
  1936   002152  C047  F041         	movff	lcd_4bit_intialize@lcd,gpio_pin_intialize@_pin_config
  1937   002156  ECFB  F014         	call	_gpio_pin_intialize	;wreg free
  1938   00215A  6E4A               	movwf	lcd_4bit_intialize@ret^0,c
  1939                           
  1940                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 31:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  1941   00215C  2847               	incf	lcd_4bit_intialize@lcd^0,w,c
  1942   00215E  6E41               	movwf	gpio_pin_intialize@_pin_config^0,c
  1943   002160  ECFB  F014         	call	_gpio_pin_intialize	;wreg free
  1944   002164  6E4A               	movwf	lcd_4bit_intialize@ret^0,c
  1945   002166                     
  1946                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 32:         for(l_data_pins_counter=0; l_data_pins_cou
      +                          nter<4; l_data_pins_counter++){
  1947   002166  0E00               	movlw	0
  1948   002168  6E49               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  1949   00216A                     l6038:
  1950   00216A  5047               	movf	lcd_4bit_intialize@lcd^0,w,c
  1951   00216C  2449               	addwf	lcd_4bit_intialize@l_data_pins_counter^0,w,c
  1952   00216E  0F02               	addlw	2
  1953   002170  6E41               	movwf	gpio_pin_intialize@_pin_config^0,c
  1954   002172  ECFB  F014         	call	_gpio_pin_intialize	;wreg free
  1955   002176                     
  1956                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 34:         }
  1957   002176  2A49               	incf	lcd_4bit_intialize@l_data_pins_counter^0,f,c
  1958   002178  0E03               	movlw	3
  1959   00217A  6449               	cpfsgt	lcd_4bit_intialize@l_data_pins_counter^0,c
  1960   00217C  EFC2  F010         	goto	u4691
  1961   002180  EFC4  F010         	goto	u4690
  1962   002184                     u4691:
  1963   002184  EFB5  F010         	goto	l6038
  1964   002188                     u4690:
  1965   002188                     
  1966                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 35:         _delay((unsigned long)((20)*(4000000UL/400
      +                          0.0)));
  1967   002188  0E1A               	movlw	26
  1968   00218A  6E48               	movwf	??_lcd_4bit_intialize^0,c
  1969   00218C  0EF8               	movlw	248
  1970   00218E                     u7497:
  1971   00218E  2EE8               	decfsz	wreg,f,c
  1972   002190  D7FE               	bra	u7497
  1973   002192  2E48               	decfsz	??_lcd_4bit_intialize^0,f,c
  1974   002194  D7FC               	bra	u7497
  1975   002196  D000               	nop2	
  1976   002198  C047  F044         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1977   00219C  0E38               	movlw	56
  1978   00219E  6E45               	movwf	lcd_4bit_send_command@command^0,c
  1979   0021A0  EC58  F015         	call	_lcd_4bit_send_command	;wreg free
  1980   0021A4                     
  1981                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 37:         _delay((unsigned long)((5)*(4000000UL/4000
      +                          .0)));
  1982   0021A4  0E07               	movlw	7
  1983   0021A6  6E48               	movwf	??_lcd_4bit_intialize^0,c
  1984   0021A8  0E7D               	movlw	125
  1985   0021AA                     u7507:
  1986   0021AA  2EE8               	decfsz	wreg,f,c
  1987   0021AC  D7FE               	bra	u7507
  1988   0021AE  2E48               	decfsz	??_lcd_4bit_intialize^0,f,c
  1989   0021B0  D7FC               	bra	u7507
  1990   0021B2  0000               	nop	
  1991   0021B4  C047  F044         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1992   0021B8  0E38               	movlw	56
  1993   0021BA  6E45               	movwf	lcd_4bit_send_command@command^0,c
  1994   0021BC  EC58  F015         	call	_lcd_4bit_send_command	;wreg free
  1995   0021C0                     
  1996                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 39:         _delay((unsigned long)((150)*(4000000UL/40
      +                          00000.0)));
  1997   0021C0  0E32               	movlw	50
  1998   0021C2                     u7517:
  1999   0021C2  2EE8               	decfsz	wreg,f,c
  2000   0021C4  D7FE               	bra	u7517
  2001   0021C6  C047  F044         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2002   0021CA  0E38               	movlw	56
  2003   0021CC  6E45               	movwf	lcd_4bit_send_command@command^0,c
  2004   0021CE  EC58  F015         	call	_lcd_4bit_send_command	;wreg free
  2005   0021D2  C047  F044         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2006   0021D6  0E01               	movlw	1
  2007   0021D8  6E45               	movwf	lcd_4bit_send_command@command^0,c
  2008   0021DA  EC58  F015         	call	_lcd_4bit_send_command	;wreg free
  2009   0021DE  C047  F044         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2010   0021E2  0E02               	movlw	2
  2011   0021E4  6E45               	movwf	lcd_4bit_send_command@command^0,c
  2012   0021E6  EC58  F015         	call	_lcd_4bit_send_command	;wreg free
  2013   0021EA  C047  F044         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2014   0021EE  0E06               	movlw	6
  2015   0021F0  6E45               	movwf	lcd_4bit_send_command@command^0,c
  2016   0021F2  EC58  F015         	call	_lcd_4bit_send_command	;wreg free
  2017   0021F6  C047  F044         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2018   0021FA  0E0C               	movlw	12
  2019   0021FC  6E45               	movwf	lcd_4bit_send_command@command^0,c
  2020   0021FE  EC58  F015         	call	_lcd_4bit_send_command	;wreg free
  2021   002202  C047  F044         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2022   002206  0E28               	movlw	40
  2023   002208  6E45               	movwf	lcd_4bit_send_command@command^0,c
  2024   00220A  EC58  F015         	call	_lcd_4bit_send_command	;wreg free
  2025   00220E                     
  2026                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 47:         ret = lcd_4bit_send_command(lcd, 0x80);
  2027   00220E  C047  F044         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2028   002212  0E80               	movlw	128
  2029   002214  6E45               	movwf	lcd_4bit_send_command@command^0,c
  2030   002216  EC58  F015         	call	_lcd_4bit_send_command	;wreg free
  2031   00221A  6E4A               	movwf	lcd_4bit_intialize@ret^0,c
  2032   00221C                     l6066:
  2033                           
  2034                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 49:     return ret;
  2035   00221C  504A               	movf	lcd_4bit_intialize@ret^0,w,c
  2036   00221E  0012               	return		;funcret
  2037   002220                     __end_of_lcd_4bit_intialize:
  2038                           	callstack 0
  2039                           
  2040 ;; *************** function _lcd_4bit_send_command *****************
  2041 ;; Defined at:
  2042 ;;		line 60 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  lcd             1   12[COMRAM] PTR const struct .
  2045 ;;		 -> lcd_1(6), 
  2046 ;;  command         1   13[COMRAM] unsigned char 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;  ret             1   14[COMRAM] unsigned char 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      unsigned char 
  2051 ;; Registers used:
  2052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2058 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2062 ;;Total ram usage:        3 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; Hardware stack levels required when called: 4
  2065 ;; This function calls:
  2066 ;;		_gpio_pin_write_logic
  2067 ;;		_lcd_4bit_send_enable_signal
  2068 ;;		_lcd_send_4bits
  2069 ;; This function is called by:
  2070 ;;		_lcd_4bit_intialize
  2071 ;;		_lcd_4bit_send_custom_char
  2072 ;;		_lcd_4bit_set_cursor
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text7
  2077   002AB0                     __ptext7:
  2078                           	callstack 0
  2079   002AB0                     _lcd_4bit_send_command:
  2080                           	callstack 24
  2081   002AB0                     
  2082                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 62:     if(((void*)0) == lcd){
  2083   002AB0  5044               	movf	lcd_4bit_send_command@lcd^0,w,c
  2084   002AB2  A4D8               	btfss	status,2,c
  2085   002AB4  EF5E  F015         	goto	u4321
  2086   002AB8  EF60  F015         	goto	u4320
  2087   002ABC                     u4321:
  2088   002ABC  EF64  F015         	goto	l5744
  2089   002AC0                     u4320:
  2090   002AC0                     
  2091                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 63:         ret = (Std_ReturnType)0x00;
  2092   002AC0  0E00               	movlw	0
  2093   002AC2  6E46               	movwf	lcd_4bit_send_command@ret^0,c
  2094                           
  2095                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 64:     }
  2096   002AC4  EF84  F015         	goto	l5746
  2097   002AC8                     l5744:
  2098                           
  2099                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 68:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_LOW);
  2100   002AC8  C044  F039         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  2101   002ACC  0E00               	movlw	0
  2102   002ACE  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2103   002AD0  EC90  F00F         	call	_gpio_pin_write_logic	;wreg free
  2104   002AD4  6E46               	movwf	lcd_4bit_send_command@ret^0,c
  2105                           
  2106                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret = lcd_send_4bits(lcd, command >> 4);
  2107   002AD6  C044  F041         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2108   002ADA  3845               	swapf	lcd_4bit_send_command@command^0,w,c
  2109   002ADC  0B0F               	andlw	15
  2110   002ADE  6E42               	movwf	lcd_send_4bits@_data_command^0,c
  2111   002AE0  EC86  F015         	call	_lcd_send_4bits	;wreg free
  2112   002AE4  6E46               	movwf	lcd_4bit_send_command@ret^0,c
  2113                           
  2114                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 72:         ret = lcd_4bit_send_enable_signal(lcd);
  2115   002AE6  C044  F041         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  2116   002AEA  EC05  F017         	call	_lcd_4bit_send_enable_signal	;wreg free
  2117   002AEE  6E46               	movwf	lcd_4bit_send_command@ret^0,c
  2118                           
  2119                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 74:         ret = lcd_send_4bits(lcd, command);
  2120   002AF0  C044  F041         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2121   002AF4  C045  F042         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  2122   002AF8  EC86  F015         	call	_lcd_send_4bits	;wreg free
  2123   002AFC  6E46               	movwf	lcd_4bit_send_command@ret^0,c
  2124                           
  2125                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 76:         ret = lcd_4bit_send_enable_signal(lcd);
  2126   002AFE  C044  F041         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  2127   002B02  EC05  F017         	call	_lcd_4bit_send_enable_signal	;wreg free
  2128   002B06  6E46               	movwf	lcd_4bit_send_command@ret^0,c
  2129   002B08                     l5746:
  2130                           
  2131                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 78:     return ret;
  2132   002B08  5046               	movf	lcd_4bit_send_command@ret^0,w,c
  2133   002B0A  0012               	return		;funcret
  2134   002B0C                     __end_of_lcd_4bit_send_command:
  2135                           	callstack 0
  2136                           
  2137 ;; *************** function _lcd_send_4bits *****************
  2138 ;; Defined at:
  2139 ;;		line 465 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  lcd             1    9[COMRAM] PTR const struct .
  2142 ;;		 -> lcd_1(6), 
  2143 ;;  _data_comman    1   10[COMRAM] unsigned char 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  ret             1   11[COMRAM] unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      unsigned char 
  2148 ;; Registers used:
  2149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2158 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;Total ram usage:        3 bytes
  2160 ;; Hardware stack levels used: 1
  2161 ;; Hardware stack levels required when called: 3
  2162 ;; This function calls:
  2163 ;;		_gpio_pin_write_logic
  2164 ;; This function is called by:
  2165 ;;		_lcd_4bit_send_command
  2166 ;;		_lcd_4bit_send_char_data
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text8
  2171   002B0C                     __ptext8:
  2172                           	callstack 0
  2173   002B0C                     _lcd_send_4bits:
  2174                           	callstack 24
  2175   002B0C  5041               	movf	lcd_send_4bits@lcd^0,w,c
  2176   002B0E  0F02               	addlw	2
  2177   002B10  6E39               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2178   002B12  5042               	movf	lcd_send_4bits@_data_command^0,w,c
  2179   002B14  0B01               	andlw	1
  2180   002B16  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2181   002B18  EC90  F00F         	call	_gpio_pin_write_logic	;wreg free
  2182   002B1C  5041               	movf	lcd_send_4bits@lcd^0,w,c
  2183   002B1E  0F03               	addlw	3
  2184   002B20  6E39               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2185   002B22  90D8               	bcf	status,0,c
  2186   002B24  3042               	rrcf	lcd_send_4bits@_data_command^0,w,c
  2187   002B26  0B01               	andlw	1
  2188   002B28  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2189   002B2A  EC90  F00F         	call	_gpio_pin_write_logic	;wreg free
  2190   002B2E  5041               	movf	lcd_send_4bits@lcd^0,w,c
  2191   002B30  0F04               	addlw	4
  2192   002B32  6E39               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2193   002B34  4042               	rrncf	lcd_send_4bits@_data_command^0,w,c
  2194   002B36  42E8               	rrncf	wreg,f,c
  2195   002B38  0B3F               	andlw	63
  2196   002B3A  0B01               	andlw	1
  2197   002B3C  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2198   002B3E  EC90  F00F         	call	_gpio_pin_write_logic	;wreg free
  2199   002B42                     
  2200                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 470:     ret = gpio_pin_write_logic(&(lcd->lcd_data[3]
      +                          ), (_data_command >> 3) & (uint8)0x01);
  2201   002B42  5041               	movf	lcd_send_4bits@lcd^0,w,c
  2202   002B44  0F05               	addlw	5
  2203   002B46  6E39               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2204   002B48  3842               	swapf	lcd_send_4bits@_data_command^0,w,c
  2205   002B4A  46E8               	rlncf	wreg,f,c
  2206   002B4C  0B1F               	andlw	31
  2207   002B4E  0B01               	andlw	1
  2208   002B50  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2209   002B52  EC90  F00F         	call	_gpio_pin_write_logic	;wreg free
  2210   002B56  6E43               	movwf	lcd_send_4bits@ret^0,c
  2211                           
  2212                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 471:     return ret;
  2213   002B58  5043               	movf	lcd_send_4bits@ret^0,w,c
  2214   002B5A  0012               	return		;funcret
  2215   002B5C                     __end_of_lcd_send_4bits:
  2216                           	callstack 0
  2217                           
  2218 ;; *************** function _lcd_4bit_send_enable_signal *****************
  2219 ;; Defined at:
  2220 ;;		line 481 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  lcd             1    9[COMRAM] PTR const struct .
  2223 ;;		 -> lcd_1(6), 
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  ret             1   10[COMRAM] unsigned char 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      unsigned char 
  2228 ;; Registers used:
  2229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2235 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;Total ram usage:        2 bytes
  2240 ;; Hardware stack levels used: 1
  2241 ;; Hardware stack levels required when called: 3
  2242 ;; This function calls:
  2243 ;;		_gpio_pin_write_logic
  2244 ;; This function is called by:
  2245 ;;		_lcd_4bit_send_command
  2246 ;;		_lcd_4bit_send_char_data
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text9
  2251   002E0A                     __ptext9:
  2252                           	callstack 0
  2253   002E0A                     _lcd_4bit_send_enable_signal:
  2254                           	callstack 24
  2255   002E0A  2841               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2256   002E0C  6E39               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2257   002E0E  0E01               	movlw	1
  2258   002E10  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2259   002E12  EC90  F00F         	call	_gpio_pin_write_logic	;wreg free
  2260   002E16                     
  2261                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 484:     _delay((unsigned long)((5)*(4000000UL/4000000
      +                          .0)));
  2262   002E16  D000               	nop2		;2 cycle nop
  2263   002E18  D000               	nop2		;2 cycle nop
  2264   002E1A  0000               	nop	
  2265   002E1C                     
  2266                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 485:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GP
      +                          IO_LOW);
  2267   002E1C  2841               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2268   002E1E  6E39               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2269   002E20  0E00               	movlw	0
  2270   002E22  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2271   002E24  EC90  F00F         	call	_gpio_pin_write_logic	;wreg free
  2272   002E28  6E42               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2273                           
  2274                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 486:     return ret;
  2275   002E2A  5042               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  2276   002E2C  0012               	return		;funcret
  2277   002E2E                     __end_of_lcd_4bit_send_enable_signal:
  2278                           	callstack 0
  2279                           
  2280 ;; *************** function _dc_motor_stop *****************
  2281 ;; Defined at:
  2282 ;;		line 74 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  _dc_motor       1    9[COMRAM] PTR const struct .
  2285 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  ret             1   10[COMRAM] unsigned char 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      unsigned char 
  2290 ;; Registers used:
  2291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2297 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;Total ram usage:        2 bytes
  2302 ;; Hardware stack levels used: 1
  2303 ;; Hardware stack levels required when called: 3
  2304 ;; This function calls:
  2305 ;;		_gpio_pin_write_logic
  2306 ;; This function is called by:
  2307 ;;		_main
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text10
  2312   002C9A                     __ptext10:
  2313                           	callstack 0
  2314   002C9A                     _dc_motor_stop:
  2315                           	callstack 27
  2316   002C9A                     
  2317                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 75:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2318   002C9A  0E01               	movlw	1
  2319   002C9C  6E42               	movwf	dc_motor_stop@ret^0,c
  2320                           
  2321                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 76:     if(((void*)0) == _dc_motor){
  2322   002C9E  5041               	movf	dc_motor_stop@_dc_motor^0,w,c
  2323   002CA0  A4D8               	btfss	status,2,c
  2324   002CA2  EF55  F016         	goto	u4871
  2325   002CA6  EF57  F016         	goto	u4870
  2326   002CAA                     u4871:
  2327   002CAA  EF5B  F016         	goto	l6214
  2328   002CAE                     u4870:
  2329   002CAE                     
  2330                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 77:         ret = (Std_ReturnType)0x00;
  2331   002CAE  0E00               	movlw	0
  2332   002CB0  6E42               	movwf	dc_motor_stop@ret^0,c
  2333                           
  2334                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 78:     }
  2335   002CB2  EF67  F016         	goto	l6216
  2336   002CB6                     l6214:
  2337                           
  2338                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 80:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x00U]), GPIO_LOW);
  2339   002CB6  C041  F039         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@_pin_config
  2340   002CBA  0E00               	movlw	0
  2341   002CBC  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2342   002CBE  EC90  F00F         	call	_gpio_pin_write_logic	;wreg free
  2343                           
  2344                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 81:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x01U]), GPIO_LOW);
  2345   002CC2  2841               	incf	dc_motor_stop@_dc_motor^0,w,c
  2346   002CC4  6E39               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2347   002CC6  0E00               	movlw	0
  2348   002CC8  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2349   002CCA  EC90  F00F         	call	_gpio_pin_write_logic	;wreg free
  2350   002CCE                     l6216:
  2351                           
  2352                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 83:     return ret;
  2353   002CCE  5042               	movf	dc_motor_stop@ret^0,w,c
  2354   002CD0  0012               	return		;funcret
  2355   002CD2                     __end_of_dc_motor_stop:
  2356                           	callstack 0
  2357                           
  2358 ;; *************** function _dc_motor_move_right *****************
  2359 ;; Defined at:
  2360 ;;		line 36 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;  _dc_motor       1    9[COMRAM] PTR const struct .
  2363 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  ret             1   10[COMRAM] unsigned char 
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  1    wreg      unsigned char 
  2368 ;; Registers used:
  2369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2375 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2379 ;;Total ram usage:        2 bytes
  2380 ;; Hardware stack levels used: 1
  2381 ;; Hardware stack levels required when called: 3
  2382 ;; This function calls:
  2383 ;;		_gpio_pin_write_logic
  2384 ;; This function is called by:
  2385 ;;		_main
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           	psect	text11
  2390   002CD2                     __ptext11:
  2391                           	callstack 0
  2392   002CD2                     _dc_motor_move_right:
  2393                           	callstack 27
  2394   002CD2                     
  2395                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 37:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2396   002CD2  0E01               	movlw	1
  2397   002CD4  6E42               	movwf	dc_motor_move_right@ret^0,c
  2398                           
  2399                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 38:     if(((void*)0) == _dc_motor){
  2400   002CD6  5041               	movf	dc_motor_move_right@_dc_motor^0,w,c
  2401   002CD8  A4D8               	btfss	status,2,c
  2402   002CDA  EF71  F016         	goto	u4861
  2403   002CDE  EF73  F016         	goto	u4860
  2404   002CE2                     u4861:
  2405   002CE2  EF77  F016         	goto	l6204
  2406   002CE6                     u4860:
  2407   002CE6                     
  2408                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 39:         ret = (Std_ReturnType)0x00;
  2409   002CE6  0E00               	movlw	0
  2410   002CE8  6E42               	movwf	dc_motor_move_right@ret^0,c
  2411                           
  2412                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 40:     }
  2413   002CEA  EF83  F016         	goto	l6206
  2414   002CEE                     l6204:
  2415                           
  2416                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 42:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x00U]), GPIO_HIGH);
  2417   002CEE  C041  F039         	movff	dc_motor_move_right@_dc_motor,gpio_pin_write_logic@_pin_config
  2418   002CF2  0E01               	movlw	1
  2419   002CF4  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2420   002CF6  EC90  F00F         	call	_gpio_pin_write_logic	;wreg free
  2421                           
  2422                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 43:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x01U]), GPIO_LOW);
  2423   002CFA  2841               	incf	dc_motor_move_right@_dc_motor^0,w,c
  2424   002CFC  6E39               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2425   002CFE  0E00               	movlw	0
  2426   002D00  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2427   002D02  EC90  F00F         	call	_gpio_pin_write_logic	;wreg free
  2428   002D06                     l6206:
  2429                           
  2430                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 45:     return ret;
  2431   002D06  5042               	movf	dc_motor_move_right@ret^0,w,c
  2432   002D08  0012               	return		;funcret
  2433   002D0A                     __end_of_dc_motor_move_right:
  2434                           	callstack 0
  2435                           
  2436 ;; *************** function _dc_motor_initialize *****************
  2437 ;; Defined at:
  2438 ;;		line 17 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  _dc_motor       1   12[COMRAM] PTR const struct .
  2441 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;  ret             1   13[COMRAM] unsigned char 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      unsigned char 
  2446 ;; Registers used:
  2447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2453 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;Total ram usage:        2 bytes
  2458 ;; Hardware stack levels used: 1
  2459 ;; Hardware stack levels required when called: 4
  2460 ;; This function calls:
  2461 ;;		_gpio_pin_intialize
  2462 ;; This function is called by:
  2463 ;;		_main
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text12
  2468   002DAA                     __ptext12:
  2469                           	callstack 0
  2470   002DAA                     _dc_motor_initialize:
  2471                           	callstack 26
  2472   002DAA                     
  2473                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 18:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2474   002DAA  0E01               	movlw	1
  2475   002DAC  6E45               	movwf	dc_motor_initialize@ret^0,c
  2476                           
  2477                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 19:     if(((void*)0) == _dc_motor){
  2478   002DAE  5044               	movf	dc_motor_initialize@_dc_motor^0,w,c
  2479   002DB0  A4D8               	btfss	status,2,c
  2480   002DB2  EFDD  F016         	goto	u4851
  2481   002DB6  EFDF  F016         	goto	u4850
  2482   002DBA                     u4851:
  2483   002DBA  EFE3  F016         	goto	l6194
  2484   002DBE                     u4850:
  2485   002DBE                     
  2486                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 20:         ret = (Std_ReturnType)0x00;
  2487   002DBE  0E00               	movlw	0
  2488   002DC0  6E45               	movwf	dc_motor_initialize@ret^0,c
  2489                           
  2490                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 21:     }
  2491   002DC2  EFEB  F016         	goto	l6196
  2492   002DC6                     l6194:
  2493                           
  2494                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 23:         gpio_pin_intialize(&(_dc_motor->dc_motor
      +                          _pin[0x00U]));
  2495   002DC6  C044  F041         	movff	dc_motor_initialize@_dc_motor,gpio_pin_intialize@_pin_config
  2496   002DCA  ECFB  F014         	call	_gpio_pin_intialize	;wreg free
  2497                           
  2498                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 24:         gpio_pin_intialize(&(_dc_motor->dc_motor
      +                          _pin[0x01U]));
  2499   002DCE  2844               	incf	dc_motor_initialize@_dc_motor^0,w,c
  2500   002DD0  6E41               	movwf	gpio_pin_intialize@_pin_config^0,c
  2501   002DD2  ECFB  F014         	call	_gpio_pin_intialize	;wreg free
  2502   002DD6                     l6196:
  2503                           
  2504                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 26:     return ret;
  2505   002DD6  5045               	movf	dc_motor_initialize@ret^0,w,c
  2506   002DD8  0012               	return		;funcret
  2507   002DDA                     __end_of_dc_motor_initialize:
  2508                           	callstack 0
  2509                           
  2510 ;; *************** function _gpio_pin_intialize *****************
  2511 ;; Defined at:
  2512 ;;		line 144 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  _pin_config     1    9[COMRAM] PTR const struct .
  2515 ;;		 -> lcd_1$lcd_data(4), lcd_1(6), dc_motor_2$dc_motor_pin(2), dc_motor_2(2), 
  2516 ;;		 -> dc_motor_1$dc_motor_pin(2), dc_motor_1(2), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  ret             1   11[COMRAM] unsigned char 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  1    wreg      unsigned char 
  2521 ;; Registers used:
  2522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2528 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;Total ram usage:        3 bytes
  2533 ;; Hardware stack levels used: 1
  2534 ;; Hardware stack levels required when called: 3
  2535 ;; This function calls:
  2536 ;;		_gpio_pin_direction_intialize
  2537 ;;		_gpio_pin_write_logic
  2538 ;; This function is called by:
  2539 ;;		_lcd_4bit_intialize
  2540 ;;		_dc_motor_initialize
  2541 ;;		_seven_segement_intialize
  2542 ;;		_lcd_8bit_intialize
  2543 ;;		_keypad_initialize
  2544 ;;		_led_initialize
  2545 ;;		_relay_initialize
  2546 ;;		_Ultrasonic_Init
  2547 ;;		_CCP_Init
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           	psect	text13
  2552   0029F6                     __ptext13:
  2553                           	callstack 0
  2554   0029F6                     _gpio_pin_intialize:
  2555                           	callstack 26
  2556   0029F6                     
  2557                           ;MCAL_Layer/GPIO/hal_gpio.c: 146:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1){
  2558   0029F6  5041               	movf	gpio_pin_intialize@_pin_config^0,w,c
  2559   0029F8  B4D8               	btfsc	status,2,c
  2560   0029FA  EF01  F015         	goto	u4501
  2561   0029FE  EF03  F015         	goto	u4500
  2562   002A02                     u4501:
  2563   002A02  EF13  F015         	goto	l5894
  2564   002A06                     u4500:
  2565   002A06  5041               	movf	gpio_pin_intialize@_pin_config^0,w,c
  2566   002A08  6ED9               	movwf	fsr2l,c
  2567   002A0A  6ADA               	clrf	fsr2h,c
  2568   002A0C  30DF               	rrcf	223,w,c
  2569   002A0E  32E8               	rrcf	wreg,f,c
  2570   002A10  32E8               	rrcf	wreg,f,c
  2571   002A12  0B07               	andlw	7
  2572   002A14  6E42               	movwf	??_gpio_pin_intialize^0,c
  2573   002A16  0E07               	movlw	7
  2574   002A18  6442               	cpfsgt	??_gpio_pin_intialize^0,c
  2575   002A1A  EF11  F015         	goto	u4511
  2576   002A1E  EF13  F015         	goto	u4510
  2577   002A22                     u4511:
  2578   002A22  EF17  F015         	goto	l5896
  2579   002A26                     u4510:
  2580   002A26                     l5894:
  2581                           
  2582                           ;MCAL_Layer/GPIO/hal_gpio.c: 147:         ret = (Std_ReturnType)0x00;
  2583   002A26  0E00               	movlw	0
  2584   002A28  6E43               	movwf	gpio_pin_intialize@ret^0,c
  2585                           
  2586                           ;MCAL_Layer/GPIO/hal_gpio.c: 148:     }
  2587   002A2A  EF28  F015         	goto	l5898
  2588   002A2E                     l5896:
  2589                           
  2590                           ;MCAL_Layer/GPIO/hal_gpio.c: 150:         ret = gpio_pin_direction_intialize(_pin_config
      +                          );
  2591   002A2E  C041  F039         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  2592   002A32  EC07  F00F         	call	_gpio_pin_direction_intialize	;wreg free
  2593   002A36  6E43               	movwf	gpio_pin_intialize@ret^0,c
  2594                           
  2595                           ;MCAL_Layer/GPIO/hal_gpio.c: 151:         ret = gpio_pin_write_logic(_pin_config, _pin_c
      +                          onfig->logic);
  2596   002A38  C041  F039         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  2597   002A3C  5041               	movf	gpio_pin_intialize@_pin_config^0,w,c
  2598   002A3E  6ED9               	movwf	fsr2l,c
  2599   002A40  6ADA               	clrf	fsr2h,c
  2600   002A42  0E00               	movlw	0
  2601   002A44  BEDF               	btfsc	indf2,7,c
  2602   002A46  0E01               	movlw	1
  2603   002A48  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2604   002A4A  EC90  F00F         	call	_gpio_pin_write_logic	;wreg free
  2605   002A4E  6E43               	movwf	gpio_pin_intialize@ret^0,c
  2606   002A50                     l5898:
  2607                           
  2608                           ;MCAL_Layer/GPIO/hal_gpio.c: 153:     return ret;
  2609   002A50  5043               	movf	gpio_pin_intialize@ret^0,w,c
  2610   002A52  0012               	return		;funcret
  2611   002A54                     __end_of_gpio_pin_intialize:
  2612                           	callstack 0
  2613                           
  2614 ;; *************** function _gpio_pin_write_logic *****************
  2615 ;; Defined at:
  2616 ;;		line 75 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;  _pin_config     1    1[COMRAM] PTR const struct .
  2619 ;;		 -> lcd_1$lcd_data(4), lcd_1(6), dc_motor_2$dc_motor_pin(2), dc_motor_2(2), 
  2620 ;;		 -> dc_motor_1$dc_motor_pin(2), dc_motor_1(2), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  2621 ;;		 -> relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  2622 ;;  logic           1    2[COMRAM] enum E2981
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  ret             1    8[COMRAM] unsigned char 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      unsigned char 
  2627 ;; Registers used:
  2628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;Total ram usage:        8 bytes
  2639 ;; Hardware stack levels used: 1
  2640 ;; Hardware stack levels required when called: 2
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_lcd_4bit_send_command
  2645 ;;		_lcd_4bit_send_char_data
  2646 ;;		_lcd_send_4bits
  2647 ;;		_lcd_4bit_send_enable_signal
  2648 ;;		_dc_motor_move_right
  2649 ;;		_dc_motor_stop
  2650 ;;		_gpio_pin_intialize
  2651 ;;		_seven_segement_write_number
  2652 ;;		_lcd_8bit_send_command
  2653 ;;		_lcd_8bit_send_char_data
  2654 ;;		_lcd_8bit_send_enable_signal
  2655 ;;		_dc_motor_move_left
  2656 ;;		_keypad_get_value
  2657 ;;		_led_turn_on
  2658 ;;		_led_turn_off
  2659 ;;		_relay_turn_on
  2660 ;;		_relay_turn_off
  2661 ;;		_Ultrasonic_Calculate_Distance
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text14
  2666   001F20                     __ptext14:
  2667                           	callstack 0
  2668   001F20                     _gpio_pin_write_logic:
  2669                           	callstack 24
  2670   001F20                     
  2671                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2672   001F20  0E01               	movlw	1
  2673   001F22  6E40               	movwf	gpio_pin_write_logic@ret^0,c
  2674                           
  2675                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  2676   001F24  5039               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2677   001F26  B4D8               	btfsc	status,2,c
  2678   001F28  EF98  F00F         	goto	u4111
  2679   001F2C  EF9A  F00F         	goto	u4110
  2680   001F30                     u4111:
  2681   001F30  EFAA  F00F         	goto	l5602
  2682   001F34                     u4110:
  2683   001F34  5039               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2684   001F36  6ED9               	movwf	fsr2l,c
  2685   001F38  6ADA               	clrf	fsr2h,c
  2686   001F3A  30DF               	rrcf	223,w,c
  2687   001F3C  32E8               	rrcf	wreg,f,c
  2688   001F3E  32E8               	rrcf	wreg,f,c
  2689   001F40  0B07               	andlw	7
  2690   001F42  6E3B               	movwf	??_gpio_pin_write_logic^0,c
  2691   001F44  0E07               	movlw	7
  2692   001F46  643B               	cpfsgt	??_gpio_pin_write_logic^0,c
  2693   001F48  EFA8  F00F         	goto	u4121
  2694   001F4C  EFAA  F00F         	goto	u4120
  2695   001F50                     u4121:
  2696   001F50  EF01  F010         	goto	l5610
  2697   001F54                     u4120:
  2698   001F54                     l5602:
  2699                           
  2700                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:         ret = (Std_ReturnType)0x00;
  2701   001F54  0E00               	movlw	0
  2702   001F56  6E40               	movwf	gpio_pin_write_logic@ret^0,c
  2703                           
  2704                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     }
  2705   001F58  EF16  F010         	goto	l5612
  2706   001F5C                     l5604:
  2707                           
  2708                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
  2709   001F5C  5039               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2710   001F5E  6ED9               	movwf	fsr2l,c
  2711   001F60  6ADA               	clrf	fsr2h,c
  2712   001F62  30DF               	rrcf	223,w,c
  2713   001F64  32E8               	rrcf	wreg,f,c
  2714   001F66  32E8               	rrcf	wreg,f,c
  2715   001F68  0B07               	andlw	7
  2716   001F6A  6E3B               	movwf	??_gpio_pin_write_logic^0,c
  2717   001F6C  0E01               	movlw	1
  2718   001F6E  6E3C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2719   001F70  2A3B               	incf	??_gpio_pin_write_logic^0,f,c
  2720   001F72  EFBD  F00F         	goto	u4134
  2721   001F76                     u4135:
  2722   001F76  90D8               	bcf	status,0,c
  2723   001F78  363C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2724   001F7A                     u4134:
  2725   001F7A  2E3B               	decfsz	??_gpio_pin_write_logic^0,f,c
  2726   001F7C  EFBB  F00F         	goto	u4135
  2727   001F80  503C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2728   001F82  0AFF               	xorlw	255
  2729   001F84  6E3D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2730   001F86  5039               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2731   001F88  6ED9               	movwf	fsr2l,c
  2732   001F8A  6ADA               	clrf	fsr2h,c
  2733   001F8C  50DF               	movf	223,w,c
  2734   001F8E  0B07               	andlw	7
  2735   001F90  0D02               	mullw	2
  2736   001F92  50F3               	movf	243,w,c
  2737   001F94  0FD0               	addlw	low _lat_registers
  2738   001F96  6ED9               	movwf	fsr2l,c
  2739   001F98  6ADA               	clrf	fsr2h,c
  2740   001F9A  CFDE F03E          	movff	postinc2,??_gpio_pin_write_logic+3
  2741   001F9E  CFDD F03F          	movff	postdec2,??_gpio_pin_write_logic+4
  2742   001FA2  C03E  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2743   001FA6  C03F  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2744   001FAA  503D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2745   001FAC  16DF               	andwf	indf2,f,c
  2746                           
  2747                           ;MCAL_Layer/GPIO/hal_gpio.c: 84:                 break;
  2748   001FAE  EF16  F010         	goto	l5612
  2749   001FB2                     l5606:
  2750                           
  2751                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
  2752   001FB2  5039               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2753   001FB4  6ED9               	movwf	fsr2l,c
  2754   001FB6  6ADA               	clrf	fsr2h,c
  2755   001FB8  30DF               	rrcf	223,w,c
  2756   001FBA  32E8               	rrcf	wreg,f,c
  2757   001FBC  32E8               	rrcf	wreg,f,c
  2758   001FBE  0B07               	andlw	7
  2759   001FC0  6E3B               	movwf	??_gpio_pin_write_logic^0,c
  2760   001FC2  0E01               	movlw	1
  2761   001FC4  6E3C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2762   001FC6  2A3B               	incf	??_gpio_pin_write_logic^0,f,c
  2763   001FC8  EFE8  F00F         	goto	u4144
  2764   001FCC                     u4145:
  2765   001FCC  90D8               	bcf	status,0,c
  2766   001FCE  363C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2767   001FD0                     u4144:
  2768   001FD0  2E3B               	decfsz	??_gpio_pin_write_logic^0,f,c
  2769   001FD2  EFE6  F00F         	goto	u4145
  2770   001FD6  5039               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2771   001FD8  6ED9               	movwf	fsr2l,c
  2772   001FDA  6ADA               	clrf	fsr2h,c
  2773   001FDC  50DF               	movf	223,w,c
  2774   001FDE  0B07               	andlw	7
  2775   001FE0  0D02               	mullw	2
  2776   001FE2  50F3               	movf	243,w,c
  2777   001FE4  0FD0               	addlw	low _lat_registers
  2778   001FE6  6ED9               	movwf	fsr2l,c
  2779   001FE8  6ADA               	clrf	fsr2h,c
  2780   001FEA  CFDE F03D          	movff	postinc2,??_gpio_pin_write_logic+2
  2781   001FEE  CFDD F03E          	movff	postdec2,??_gpio_pin_write_logic+3
  2782   001FF2  C03D  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2783   001FF6  C03E  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2784   001FFA  503C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2785   001FFC  12DF               	iorwf	indf2,f,c
  2786                           
  2787                           ;MCAL_Layer/GPIO/hal_gpio.c: 87:                 break;
  2788   001FFE  EF16  F010         	goto	l5612
  2789   002002                     l5610:
  2790   002002  503A               	movf	gpio_pin_write_logic@logic^0,w,c
  2791   002004  6E3B               	movwf	??_gpio_pin_write_logic^0,c
  2792   002006  6A3C               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2793                           
  2794                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2795                           ; Switch size 1, requested type "simple"
  2796                           ; Number of cases is 1, Range of values is 0 to 0
  2797                           ; switch strategies available:
  2798                           ; Name         Instructions Cycles
  2799                           ; simple_byte            4     3 (average)
  2800                           ;	Chosen strategy is simple_byte
  2801   002008  503C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2802   00200A  0A00               	xorlw	0	; case 0
  2803   00200C  B4D8               	btfsc	status,2,c
  2804   00200E  EF0B  F010         	goto	l8052
  2805   002012  EFAA  F00F         	goto	l5602
  2806   002016                     l8052:
  2807                           
  2808                           ; Switch size 1, requested type "simple"
  2809                           ; Number of cases is 2, Range of values is 0 to 1
  2810                           ; switch strategies available:
  2811                           ; Name         Instructions Cycles
  2812                           ; simple_byte            7     4 (average)
  2813                           ;	Chosen strategy is simple_byte
  2814   002016  503B               	movf	??_gpio_pin_write_logic^0,w,c
  2815   002018  0A00               	xorlw	0	; case 0
  2816   00201A  B4D8               	btfsc	status,2,c
  2817   00201C  EFAE  F00F         	goto	l5604
  2818   002020  0A01               	xorlw	1	; case 1
  2819   002022  B4D8               	btfsc	status,2,c
  2820   002024  EFD9  F00F         	goto	l5606
  2821   002028  EFAA  F00F         	goto	l5602
  2822   00202C                     l5612:
  2823                           
  2824                           ;MCAL_Layer/GPIO/hal_gpio.c: 91:     return ret;
  2825   00202C  5040               	movf	gpio_pin_write_logic@ret^0,w,c
  2826   00202E  0012               	return		;funcret
  2827   002030                     __end_of_gpio_pin_write_logic:
  2828                           	callstack 0
  2829                           
  2830 ;; *************** function _gpio_pin_direction_intialize *****************
  2831 ;; Defined at:
  2832 ;;		line 25 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  _pin_config     1    1[COMRAM] PTR const struct .
  2835 ;;		 -> lcd_1$lcd_data(4), lcd_1(6), dc_motor_2$dc_motor_pin(2), dc_motor_2(2), 
  2836 ;;		 -> dc_motor_1$dc_motor_pin(2), dc_motor_1(2), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS(1), MSSP_SPI_Slave
      +_Mode_GPIO_PIN_Configurations@SPI_CLK(1), 
  2837 ;;		 -> MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI(1), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO(1), 
      +MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_CLK(1), MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDI(1), 
  2838 ;;		 -> MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDO(1), relay_initialize@pin_obj(1), led_initialize@pin_obj(1),
      + 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;  ret             1    7[COMRAM] unsigned char 
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      unsigned char 
  2843 ;; Registers used:
  2844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2850 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;Total ram usage:        7 bytes
  2855 ;; Hardware stack levels used: 1
  2856 ;; Hardware stack levels required when called: 2
  2857 ;; This function calls:
  2858 ;;		Nothing
  2859 ;; This function is called by:
  2860 ;;		_gpio_pin_intialize
  2861 ;;		_button_initialize
  2862 ;;		_keypad_initialize
  2863 ;;		_Interrupt_RBx_Init
  2864 ;;		_Interrupt_INTx_Pin_Init
  2865 ;;		_MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations
  2866 ;;		_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text15
  2871   001E0E                     __ptext15:
  2872                           	callstack 0
  2873   001E0E                     _gpio_pin_direction_intialize:
  2874                           	callstack 26
  2875   001E0E                     
  2876                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2877   001E0E  0E01               	movlw	1
  2878   001E10  6E3F               	movwf	gpio_pin_direction_intialize@ret^0,c
  2879                           
  2880                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  2881   001E12  5039               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2882   001E14  B4D8               	btfsc	status,2,c
  2883   001E16  EF0F  F00F         	goto	u4431
  2884   001E1A  EF11  F00F         	goto	u4430
  2885   001E1E                     u4431:
  2886   001E1E  EF21  F00F         	goto	l5804
  2887   001E22                     u4430:
  2888   001E22  5039               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2889   001E24  6ED9               	movwf	fsr2l,c
  2890   001E26  6ADA               	clrf	fsr2h,c
  2891   001E28  30DF               	rrcf	223,w,c
  2892   001E2A  32E8               	rrcf	wreg,f,c
  2893   001E2C  32E8               	rrcf	wreg,f,c
  2894   001E2E  0B07               	andlw	7
  2895   001E30  6E3A               	movwf	??_gpio_pin_direction_intialize^0,c
  2896   001E32  0E07               	movlw	7
  2897   001E34  643A               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  2898   001E36  EF1F  F00F         	goto	u4441
  2899   001E3A  EF21  F00F         	goto	u4440
  2900   001E3E                     u4441:
  2901   001E3E  EF78  F00F         	goto	l5812
  2902   001E42                     u4440:
  2903   001E42                     l5804:
  2904                           
  2905                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:         ret = (Std_ReturnType)0x00;
  2906   001E42  0E00               	movlw	0
  2907   001E44  6E3F               	movwf	gpio_pin_direction_intialize@ret^0,c
  2908                           
  2909                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:     }
  2910   001E46  EF8E  F00F         	goto	l5814
  2911   001E4A                     l5806:
  2912                           
  2913                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  2914   001E4A  5039               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2915   001E4C  6ED9               	movwf	fsr2l,c
  2916   001E4E  6ADA               	clrf	fsr2h,c
  2917   001E50  30DF               	rrcf	223,w,c
  2918   001E52  32E8               	rrcf	wreg,f,c
  2919   001E54  32E8               	rrcf	wreg,f,c
  2920   001E56  0B07               	andlw	7
  2921   001E58  6E3A               	movwf	??_gpio_pin_direction_intialize^0,c
  2922   001E5A  0E01               	movlw	1
  2923   001E5C  6E3B               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2924   001E5E  2A3A               	incf	??_gpio_pin_direction_intialize^0,f,c
  2925   001E60  EF34  F00F         	goto	u4454
  2926   001E64                     u4455:
  2927   001E64  90D8               	bcf	status,0,c
  2928   001E66  363B               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2929   001E68                     u4454:
  2930   001E68  2E3A               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2931   001E6A  EF32  F00F         	goto	u4455
  2932   001E6E  503B               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2933   001E70  0AFF               	xorlw	255
  2934   001E72  6E3C               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  2935   001E74  5039               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2936   001E76  6ED9               	movwf	fsr2l,c
  2937   001E78  6ADA               	clrf	fsr2h,c
  2938   001E7A  50DF               	movf	223,w,c
  2939   001E7C  0B07               	andlw	7
  2940   001E7E  0D02               	mullw	2
  2941   001E80  50F3               	movf	243,w,c
  2942   001E82  0FDA               	addlw	low _tris_registers
  2943   001E84  6ED9               	movwf	fsr2l,c
  2944   001E86  6ADA               	clrf	fsr2h,c
  2945   001E88  CFDE F03D          	movff	postinc2,??_gpio_pin_direction_intialize+3
  2946   001E8C  CFDD F03E          	movff	postdec2,??_gpio_pin_direction_intialize+4
  2947   001E90  C03D  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  2948   001E94  C03E  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  2949   001E98  503C               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  2950   001E9A  16DF               	andwf	indf2,f,c
  2951                           
  2952                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 break;
  2953   001E9C  EF8E  F00F         	goto	l5814
  2954   001EA0                     l5808:
  2955                           
  2956                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  2957   001EA0  5039               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2958   001EA2  6ED9               	movwf	fsr2l,c
  2959   001EA4  6ADA               	clrf	fsr2h,c
  2960   001EA6  30DF               	rrcf	223,w,c
  2961   001EA8  32E8               	rrcf	wreg,f,c
  2962   001EAA  32E8               	rrcf	wreg,f,c
  2963   001EAC  0B07               	andlw	7
  2964   001EAE  6E3A               	movwf	??_gpio_pin_direction_intialize^0,c
  2965   001EB0  0E01               	movlw	1
  2966   001EB2  6E3B               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2967   001EB4  2A3A               	incf	??_gpio_pin_direction_intialize^0,f,c
  2968   001EB6  EF5F  F00F         	goto	u4464
  2969   001EBA                     u4465:
  2970   001EBA  90D8               	bcf	status,0,c
  2971   001EBC  363B               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2972   001EBE                     u4464:
  2973   001EBE  2E3A               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2974   001EC0  EF5D  F00F         	goto	u4465
  2975   001EC4  5039               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2976   001EC6  6ED9               	movwf	fsr2l,c
  2977   001EC8  6ADA               	clrf	fsr2h,c
  2978   001ECA  50DF               	movf	223,w,c
  2979   001ECC  0B07               	andlw	7
  2980   001ECE  0D02               	mullw	2
  2981   001ED0  50F3               	movf	243,w,c
  2982   001ED2  0FDA               	addlw	low _tris_registers
  2983   001ED4  6ED9               	movwf	fsr2l,c
  2984   001ED6  6ADA               	clrf	fsr2h,c
  2985   001ED8  CFDE F03C          	movff	postinc2,??_gpio_pin_direction_intialize+2
  2986   001EDC  CFDD F03D          	movff	postdec2,??_gpio_pin_direction_intialize+3
  2987   001EE0  C03C  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  2988   001EE4  C03D  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  2989   001EE8  503B               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2990   001EEA  12DF               	iorwf	indf2,f,c
  2991                           
  2992                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:                 break;
  2993   001EEC  EF8E  F00F         	goto	l5814
  2994   001EF0                     l5812:
  2995   001EF0  5039               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2996   001EF2  6ED9               	movwf	fsr2l,c
  2997   001EF4  6ADA               	clrf	fsr2h,c
  2998   001EF6  BCDF               	btfsc	indf2,6,c
  2999   001EF8  EF80  F00F         	goto	u4471
  3000   001EFC  EF83  F00F         	goto	u4470
  3001   001F00                     u4471:
  3002   001F00  0E01               	movlw	1
  3003   001F02  EF84  F00F         	goto	u4476
  3004   001F06                     u4470:
  3005   001F06  0E00               	movlw	0
  3006   001F08                     u4476:
  3007                           
  3008                           ; Switch size 1, requested type "simple"
  3009                           ; Number of cases is 2, Range of values is 0 to 1
  3010                           ; switch strategies available:
  3011                           ; Name         Instructions Cycles
  3012                           ; simple_byte            7     4 (average)
  3013                           ;	Chosen strategy is simple_byte
  3014   001F08  0A00               	xorlw	0	; case 0
  3015   001F0A  B4D8               	btfsc	status,2,c
  3016   001F0C  EF25  F00F         	goto	l5806
  3017   001F10  0A01               	xorlw	1	; case 1
  3018   001F12  B4D8               	btfsc	status,2,c
  3019   001F14  EF50  F00F         	goto	l5808
  3020   001F18  EF21  F00F         	goto	l5804
  3021   001F1C                     l5814:
  3022                           
  3023                           ;MCAL_Layer/GPIO/hal_gpio.c: 41:     return ret;
  3024   001F1C  503F               	movf	gpio_pin_direction_intialize@ret^0,w,c
  3025   001F1E  0012               	return		;funcret
  3026   001F20                     __end_of_gpio_pin_direction_intialize:
  3027                           	callstack 0
  3028                           
  3029 ;; *************** function _convert_uint16_to_string *****************
  3030 ;; Defined at:
  3031 ;;		line 418 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  value           2   46[COMRAM] unsigned short 
  3034 ;;  str             1   48[COMRAM] PTR unsigned char 
  3035 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), 
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  Temp_String     6    0[BANK1 ] unsigned char [6]
  3038 ;;  DataCounter     1    7[BANK1 ] unsigned char 
  3039 ;;  ret             1    6[BANK1 ] unsigned char 
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1    wreg      unsigned char 
  3042 ;; Registers used:
  3043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3049 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;      Totals:         3       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;Total ram usage:       11 bytes
  3054 ;; Hardware stack levels used: 1
  3055 ;; Hardware stack levels required when called: 7
  3056 ;; This function calls:
  3057 ;;		_memset
  3058 ;;		_sprintf
  3059 ;; This function is called by:
  3060 ;;		_main
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text16
  3065   00268A                     __ptext16:
  3066                           	callstack 0
  3067   00268A                     _convert_uint16_to_string:
  3068                           	callstack 23
  3069   00268A                     
  3070                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 419:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3071   00268A  0E01               	movlw	1
  3072   00268C  0101               	movlb	1	; () banked
  3073   00268E  6F06               	movwf	convert_uint16_to_string@ret& (0+255),b
  3074   002690                     
  3075                           ; BSR set to: 1
  3076                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 420:     uint8 Temp_String[6] = {0};
  3077   002690  EE21  F000         	lfsr	2,convert_uint16_to_string@Temp_String
  3078   002694  0E05               	movlw	5
  3079   002696                     u7421:
  3080   002696  6ADE               	clrf	postinc2,c
  3081   002698  06E8               	decf	wreg,f,c
  3082   00269A  E2FD               	bc	u7421
  3083   00269C                     
  3084                           ; BSR set to: 1
  3085                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 421:     uint8 DataCounter = 0;
  3086   00269C  0E00               	movlw	0
  3087   00269E  6F07               	movwf	convert_uint16_to_string@DataCounter& (0+255),b
  3088   0026A0                     
  3089                           ; BSR set to: 1
  3090                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 422:     if(((void*)0) == str){
  3091   0026A0  5068               	movf	convert_uint16_to_string@str^0,w,c
  3092   0026A2  A4D8               	btfss	status,2,c
  3093   0026A4  EF56  F013         	goto	u7431
  3094   0026A8  EF58  F013         	goto	u7430
  3095   0026AC                     u7431:
  3096   0026AC  EF5C  F013         	goto	l7920
  3097   0026B0                     u7430:
  3098   0026B0                     
  3099                           ; BSR set to: 1
  3100                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 423:         ret = (Std_ReturnType)0x00;
  3101   0026B0  0E00               	movlw	0
  3102   0026B2  6F06               	movwf	convert_uint16_to_string@ret& (0+255),b
  3103                           
  3104                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 424:     }
  3105   0026B4  EF98  F013         	goto	l7932
  3106   0026B8                     l7920:
  3107                           
  3108                           ; BSR set to: 1
  3109                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 426:         memset(str, ' ', 3);
  3110   0026B8  C068  F039         	movff	convert_uint16_to_string@str,memset@dest
  3111   0026BC  0E00               	movlw	0
  3112   0026BE  6E3B               	movwf	(memset@c+1)^0,c
  3113   0026C0  0E20               	movlw	32
  3114   0026C2  6E3A               	movwf	memset@c^0,c
  3115   0026C4  0E00               	movlw	0
  3116   0026C6  6E3D               	movwf	(memset@n+1)^0,c
  3117   0026C8  0E03               	movlw	3
  3118   0026CA  6E3C               	movwf	memset@n^0,c
  3119   0026CC  ECED  F016         	call	_memset	;wreg free
  3120   0026D0                     
  3121                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 427:         str[5] = '\0';
  3122   0026D0  5068               	movf	convert_uint16_to_string@str^0,w,c
  3123   0026D2  6ED9               	movwf	fsr2l,c
  3124   0026D4  6ADA               	clrf	fsr2h,c
  3125   0026D6  0E05               	movlw	5
  3126   0026D8  26D9               	addwf	fsr2l,f,c
  3127   0026DA  6ADF               	clrf	indf2,c
  3128   0026DC                     
  3129                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 428:         sprintf((char *)Temp_String, "%i", value)
      +                          ;
  3130   0026DC  0E00               	movlw	low convert_uint16_to_string@Temp_String
  3131   0026DE  6E52               	movwf	sprintf@s^0,c
  3132   0026E0  0E01               	movlw	high convert_uint16_to_string@Temp_String
  3133   0026E2  6E53               	movwf	(sprintf@s+1)^0,c
  3134   0026E4  0E2F               	movlw	low STR_1
  3135   0026E6  6E54               	movwf	sprintf@fmt^0,c
  3136   0026E8  C066  F055         	movff	convert_uint16_to_string@value,?_sprintf+3
  3137   0026EC  C067  F056         	movff	convert_uint16_to_string@value+1,?_sprintf+4
  3138   0026F0  EC2F  F016         	call	_sprintf	;wreg free
  3139                           
  3140                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 429:         while(Temp_String[DataCounter] != '\0'){
  3141   0026F4  EF89  F013         	goto	l7930
  3142   0026F8                     l7926:
  3143                           
  3144                           ; BSR set to: 1
  3145                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 430:             str[DataCounter] = Temp_String[DataCo
      +                          unter];
  3146   0026F8  0E00               	movlw	low convert_uint16_to_string@Temp_String
  3147   0026FA  2507               	addwf	convert_uint16_to_string@DataCounter& (0+255),w,b
  3148   0026FC  6ED9               	movwf	fsr2l,c
  3149   0026FE  6ADA               	clrf	fsr2h,c
  3150   002700  0E01               	movlw	high convert_uint16_to_string@Temp_String
  3151   002702  22DA               	addwfc	fsr2h,f,c
  3152   002704  5068               	movf	convert_uint16_to_string@str^0,w,c
  3153   002706  2507               	addwf	convert_uint16_to_string@DataCounter& (0+255),w,b
  3154   002708  6EE1               	movwf	fsr1l,c
  3155   00270A  6AE2               	clrf	fsr1h,c
  3156   00270C  CFDF FFE7          	movff	indf2,indf1
  3157   002710                     
  3158                           ; BSR set to: 1
  3159                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 431:             DataCounter++;
  3160   002710  2B07               	incf	convert_uint16_to_string@DataCounter& (0+255),f,b
  3161   002712                     l7930:
  3162                           
  3163                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 429:         while(Temp_String[DataCounter] != '\0'){
  3164   002712  0E00               	movlw	low convert_uint16_to_string@Temp_String
  3165   002714  0101               	movlb	1	; () banked
  3166   002716  2507               	addwf	convert_uint16_to_string@DataCounter& (0+255),w,b
  3167   002718  6ED9               	movwf	fsr2l,c
  3168   00271A  6ADA               	clrf	fsr2h,c
  3169   00271C  0E01               	movlw	high convert_uint16_to_string@Temp_String
  3170   00271E  22DA               	addwfc	fsr2h,f,c
  3171   002720  50DF               	movf	indf2,w,c
  3172   002722  A4D8               	btfss	status,2,c
  3173   002724  EF96  F013         	goto	u7441
  3174   002728  EF98  F013         	goto	u7440
  3175   00272C                     u7441:
  3176   00272C  EF7C  F013         	goto	l7926
  3177   002730                     u7440:
  3178   002730                     l7932:
  3179                           
  3180                           ; BSR set to: 1
  3181                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 434:     return ret;
  3182   002730  5106               	movf	convert_uint16_to_string@ret& (0+255),w,b
  3183   002732                     
  3184                           ; BSR set to: 1
  3185   002732  0012               	return		;funcret
  3186   002734                     __end_of_convert_uint16_to_string:
  3187                           	callstack 0
  3188                           
  3189 ;; *************** function _sprintf *****************
  3190 ;; Defined at:
  3191 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  s               2   26[COMRAM] PTR unsigned char 
  3194 ;;		 -> convert_uint16_to_string@Temp_String(6), 
  3195 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
  3196 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  f              12   34[COMRAM] struct _IO_FILE
  3199 ;;  ret             2    0        int 
  3200 ;;  ap              1   33[COMRAM] PTR void [1]
  3201 ;;		 -> ?_sprintf(2), 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  2   26[COMRAM] int 
  3204 ;; Registers used:
  3205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3211 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;Total ram usage:       20 bytes
  3216 ;; Hardware stack levels used: 1
  3217 ;; Hardware stack levels required when called: 6
  3218 ;; This function calls:
  3219 ;;		_vfprintf
  3220 ;; This function is called by:
  3221 ;;		_convert_uint16_to_string
  3222 ;;		_convert_uint8_to_string
  3223 ;;		_convert_uint32_to_string
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text17
  3228   002C5E                     __ptext17:
  3229                           	callstack 0
  3230   002C5E                     _sprintf:
  3231                           	callstack 23
  3232   002C5E  0E55               	movlw	low (?_sprintf+3)
  3233   002C60  6E59               	movwf	sprintf@ap^0,c
  3234   002C62  C052  F05A         	movff	sprintf@s,sprintf@f
  3235   002C66  C053  F05B         	movff	sprintf@s+1,sprintf@f+1
  3236   002C6A  0E00               	movlw	0
  3237   002C6C  6E5E               	movwf	(sprintf@f+4)^0,c
  3238   002C6E  0E00               	movlw	0
  3239   002C70  6E5D               	movwf	(sprintf@f+3)^0,c
  3240   002C72  0E00               	movlw	0
  3241   002C74  6E65               	movwf	(sprintf@f+11)^0,c
  3242   002C76  0E00               	movlw	0
  3243   002C78  6E64               	movwf	(sprintf@f+10)^0,c
  3244   002C7A  0E5A               	movlw	low sprintf@f
  3245   002C7C  6E4E               	movwf	vfprintf@fp^0,c
  3246   002C7E  C054  F04F         	movff	sprintf@fmt,vfprintf@fmt
  3247   002C82  0E59               	movlw	low sprintf@ap
  3248   002C84  6E50               	movwf	vfprintf@ap^0,c
  3249   002C86  ECD1  F015         	call	_vfprintf	;wreg free
  3250   002C8A  505D               	movf	(sprintf@f+3)^0,w,c
  3251   002C8C  2452               	addwf	sprintf@s^0,w,c
  3252   002C8E  6ED9               	movwf	fsr2l,c
  3253   002C90  505E               	movf	(sprintf@f+4)^0,w,c
  3254   002C92  2053               	addwfc	(sprintf@s+1)^0,w,c
  3255   002C94  6EDA               	movwf	fsr2h,c
  3256   002C96  6ADF               	clrf	indf2,c
  3257   002C98  0012               	return		;funcret
  3258   002C9A                     __end_of_sprintf:
  3259                           	callstack 0
  3260                           
  3261 ;; *************** function _vfprintf *****************
  3262 ;; Defined at:
  3263 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  3266 ;;		 -> sprintf@f(12), 
  3267 ;;  fmt             1   23[COMRAM] PTR const unsigned char 
  3268 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3269 ;;  ap              1   24[COMRAM] PTR PTR void 
  3270 ;;		 -> sprintf@ap(1), 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  cfmt            1   25[COMRAM] PTR unsigned char 
  3273 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  2   22[COMRAM] int 
  3276 ;; Registers used:
  3277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3283 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3287 ;;Total ram usage:        4 bytes
  3288 ;; Hardware stack levels used: 1
  3289 ;; Hardware stack levels required when called: 5
  3290 ;; This function calls:
  3291 ;;		_vfpfcnvrt
  3292 ;; This function is called by:
  3293 ;;		_sprintf
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text18
  3298   002BA2                     __ptext18:
  3299                           	callstack 0
  3300   002BA2                     _vfprintf:
  3301                           	callstack 23
  3302   002BA2                     
  3303                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3304   002BA2  C04F  F051         	movff	vfprintf@fmt,vfprintf@cfmt
  3305                           
  3306                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3307   002BA6  EFDD  F015         	goto	l7884
  3308   002BAA                     l7882:
  3309                           
  3310                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3311   002BAA  C04E  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  3312   002BAE  0E51               	movlw	low vfprintf@cfmt
  3313   002BB0  6E44               	movwf	vfpfcnvrt@fmt^0,c
  3314   002BB2  C050  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  3315   002BB6  EC4C  F00D         	call	_vfpfcnvrt	;wreg free
  3316   002BBA                     l7884:
  3317                           
  3318                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3319   002BBA  C051  FFF6         	movff	vfprintf@cfmt,tblptrl
  3320   002BBE                     	if	1	;There is more than 1 active tblptr byte
  3321   002BBE  0E10               	movlw	high __smallconst
  3322   002BC0  6EF7               	movwf	tblptrh,c
  3323   002BC2                     	endif
  3324   002BC2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3325   002BC2  6AF8               	clrf	tblptru,c
  3326   002BC4                     	endif
  3327   002BC4                     	if	0	;tblptru may be non-zero
  3328   002BC4                     	endif
  3329   002BC4  0008               	tblrd		*
  3330   002BC6  50F5               	movf	tablat,w,c
  3331   002BC8  0900               	iorlw	0
  3332   002BCA  A4D8               	btfss	status,2,c
  3333   002BCC  EFEA  F015         	goto	u7401
  3334   002BD0  EFEC  F015         	goto	u7400
  3335   002BD4                     u7401:
  3336   002BD4  EFD5  F015         	goto	l7882
  3337   002BD8                     u7400:
  3338   002BD8                     
  3339                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3340   002BD8  0E00               	movlw	0
  3341   002BDA  6E4F               	movwf	(?_vfprintf+1)^0,c
  3342   002BDC  0E00               	movlw	0
  3343   002BDE  6E4E               	movwf	?_vfprintf^0,c
  3344   002BE0  0012               	return		;funcret
  3345   002BE2                     __end_of_vfprintf:
  3346                           	callstack 0
  3347                           
  3348 ;; *************** function _vfpfcnvrt *****************
  3349 ;; Defined at:
  3350 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
  3353 ;;		 -> sprintf@f(12), 
  3354 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  3355 ;;		 -> vfprintf@cfmt(1), 
  3356 ;;  ap              1   13[COMRAM] PTR PTR void 
  3357 ;;		 -> sprintf@ap(1), 
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;  convarg         4   17[COMRAM] struct .
  3360 ;;  c               1   21[COMRAM] unsigned char 
  3361 ;;  cp              1   16[COMRAM] PTR unsigned char 
  3362 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3363 ;;  done            1   15[COMRAM] _Bool 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      void 
  3366 ;; Registers used:
  3367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3373 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;Total ram usage:       11 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 4
  3380 ;; This function calls:
  3381 ;;		___awdiv
  3382 ;;		___awmod
  3383 ;;		_abs
  3384 ;;		_fputc
  3385 ;; This function is called by:
  3386 ;;		_vfprintf
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           	psect	text19
  3391   001A98                     __ptext19:
  3392                           	callstack 0
  3393   001A98                     _vfpfcnvrt:
  3394                           	callstack 23
  3395   001A98                     
  3396                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3397   001A98  5044               	movf	vfpfcnvrt@fmt^0,w,c
  3398   001A9A  6ED9               	movwf	fsr2l,c
  3399   001A9C  6ADA               	clrf	fsr2h,c
  3400   001A9E  CFDF FFF6          	movff	indf2,tblptrl
  3401   001AA2                     	if	1	;There is more than 1 active tblptr byte
  3402   001AA2  0E10               	movlw	high __smallconst
  3403   001AA4  6EF7               	movwf	tblptrh,c
  3404   001AA6                     	endif
  3405   001AA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3406   001AA6  6AF8               	clrf	tblptru,c
  3407   001AA8                     	endif
  3408   001AA8                     	if	0	;tblptru may be non-zero
  3409   001AA8                     	endif
  3410   001AA8  0008               	tblrd		*
  3411   001AAA  50F5               	movf	tablat,w,c
  3412   001AAC  0A25               	xorlw	37
  3413   001AAE  A4D8               	btfss	status,2,c
  3414   001AB0  EF5C  F00D         	goto	u7301
  3415   001AB4  EF5E  F00D         	goto	u7300
  3416   001AB8                     u7301:
  3417   001AB8  EF1A  F00E         	goto	l7874
  3418   001ABC                     u7300:
  3419   001ABC                     
  3420                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3421   001ABC  5044               	movf	vfpfcnvrt@fmt^0,w,c
  3422   001ABE  6ED9               	movwf	fsr2l,c
  3423   001AC0  6ADA               	clrf	fsr2h,c
  3424   001AC2  2ADF               	incf	indf2,f,c
  3425   001AC4                     
  3426                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3427   001AC4  0E00               	movlw	0
  3428   001AC6  0100               	movlb	0	; () banked
  3429   001AC8  6FA7               	movwf	(_width+1)& (0+255),b
  3430   001ACA  0E00               	movlw	0
  3431   001ACC  6FA6               	movwf	_width& (0+255),b
  3432   001ACE  C0A6  F02B         	movff	_width,_flags
  3433   001AD2                     
  3434                           ; BSR set to: 0
  3435                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3436   001AD2  69A8               	setf	_prec& (0+255),b
  3437   001AD4  69A9               	setf	(_prec+1)& (0+255),b
  3438   001AD6                     
  3439                           ; BSR set to: 0
  3440                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3441   001AD6  5044               	movf	vfpfcnvrt@fmt^0,w,c
  3442   001AD8  6ED9               	movwf	fsr2l,c
  3443   001ADA  6ADA               	clrf	fsr2h,c
  3444   001ADC  50DF               	movf	indf2,w,c
  3445   001ADE  6E48               	movwf	vfpfcnvrt@cp^0,c
  3446   001AE0                     
  3447                           ; BSR set to: 0
  3448                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3449   001AE0  C048  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3450   001AE4                     	if	1	;There is more than 1 active tblptr byte
  3451   001AE4  0E10               	movlw	high __smallconst
  3452   001AE6  6EF7               	movwf	tblptrh,c
  3453   001AE8                     	endif
  3454   001AE8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3455   001AE8  6AF8               	clrf	tblptru,c
  3456   001AEA                     	endif
  3457   001AEA                     	if	0	;tblptru may be non-zero
  3458   001AEA                     	endif
  3459   001AEA  0008               	tblrd		*
  3460   001AEC  50F5               	movf	tablat,w,c
  3461   001AEE  0A64               	xorlw	100
  3462   001AF0  B4D8               	btfsc	status,2,c
  3463   001AF2  EF7D  F00D         	goto	u7311
  3464   001AF6  EF7F  F00D         	goto	u7310
  3465   001AFA                     u7311:
  3466   001AFA  EF8E  F00D         	goto	l7844
  3467   001AFE                     u7310:
  3468   001AFE                     
  3469                           ; BSR set to: 0
  3470   001AFE  C048  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3471   001B02                     	if	1	;There is more than 1 active tblptr byte
  3472   001B02  0E10               	movlw	high __smallconst
  3473   001B04  6EF7               	movwf	tblptrh,c
  3474   001B06                     	endif
  3475   001B06                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3476   001B06  6AF8               	clrf	tblptru,c
  3477   001B08                     	endif
  3478   001B08                     	if	0	;tblptru may be non-zero
  3479   001B08                     	endif
  3480   001B08  0008               	tblrd		*
  3481   001B0A  50F5               	movf	tablat,w,c
  3482   001B0C  0A69               	xorlw	105
  3483   001B0E  A4D8               	btfss	status,2,c
  3484   001B10  EF8C  F00D         	goto	u7321
  3485   001B14  EF8E  F00D         	goto	u7320
  3486   001B18                     u7321:
  3487   001B18  EF14  F00E         	goto	l7870
  3488   001B1C                     u7320:
  3489   001B1C                     l7844:
  3490                           
  3491                           ; BSR set to: 0
  3492                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3493   001B1C  5045               	movf	vfpfcnvrt@ap^0,w,c
  3494   001B1E  6ED9               	movwf	fsr2l,c
  3495   001B20  6ADA               	clrf	fsr2h,c
  3496   001B22  0E02               	movlw	2
  3497   001B24  26DF               	addwf	indf2,f,c
  3498   001B26  5CDF               	subwf	indf2,w,c
  3499   001B28  6ED9               	movwf	fsr2l,c
  3500   001B2A  6ADA               	clrf	fsr2h,c
  3501   001B2C  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  3502   001B30  CFDE F04A          	movff	postinc2,vfpfcnvrt@convarg+1
  3503   001B34                     
  3504                           ; BSR set to: 0
  3505                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3506   001B34  5044               	movf	vfpfcnvrt@fmt^0,w,c
  3507   001B36  6ED9               	movwf	fsr2l,c
  3508   001B38  6ADA               	clrf	fsr2h,c
  3509   001B3A  2848               	incf	vfpfcnvrt@cp^0,w,c
  3510   001B3C  6EDF               	movwf	indf2,c
  3511   001B3E                     
  3512                           ; BSR set to: 0
  3513                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3514   001B3E  0E20               	movlw	32
  3515   001B40  6E4D               	movwf	vfpfcnvrt@c^0,c
  3516                           
  3517                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3518   001B42  BE4A               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3519   001B44  EFA6  F00D         	goto	u7331
  3520   001B48  EFA9  F00D         	goto	u7330
  3521   001B4C                     u7331:
  3522   001B4C  0E01               	movlw	1
  3523   001B4E  EFAA  F00D         	goto	u7340
  3524   001B52                     u7330:
  3525   001B52  0E00               	movlw	0
  3526   001B54                     u7340:
  3527   001B54  6E47               	movwf	vfpfcnvrt@done^0,c
  3528   001B56                     l7850:
  3529                           
  3530                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3531   001B56  064D               	decf	vfpfcnvrt@c^0,f,c
  3532   001B58  504D               	movf	vfpfcnvrt@c^0,w,c
  3533   001B5A  0F80               	addlw	low _dbuf
  3534   001B5C  6ED9               	movwf	fsr2l,c
  3535   001B5E  6ADA               	clrf	fsr2h,c
  3536   001B60  C049  F039         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3537   001B64  C04A  F03A         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3538   001B68  0E00               	movlw	0
  3539   001B6A  6E3C               	movwf	(___awmod@divisor+1)^0,c
  3540   001B6C  0E0A               	movlw	10
  3541   001B6E  6E3B               	movwf	___awmod@divisor^0,c
  3542   001B70  EC97  F012         	call	___awmod	;wreg free
  3543   001B74  C039  F03F         	movff	?___awmod,abs@a
  3544   001B78  C03A  F040         	movff	?___awmod+1,abs@a+1
  3545   001B7C  ECA1  F016         	call	_abs	;wreg free
  3546   001B80  503F               	movf	?_abs^0,w,c
  3547   001B82  0F30               	addlw	48
  3548   001B84  6EDF               	movwf	indf2,c
  3549   001B86                     
  3550                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3551   001B86  C049  F039         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3552   001B8A  C04A  F03A         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3553   001B8E  0E00               	movlw	0
  3554   001B90  6E3C               	movwf	(___awdiv@divisor+1)^0,c
  3555   001B92  0E0A               	movlw	10
  3556   001B94  6E3B               	movwf	___awdiv@divisor^0,c
  3557   001B96  EC7C  F011         	call	___awdiv	;wreg free
  3558   001B9A  C039  F049         	movff	?___awdiv,vfpfcnvrt@convarg
  3559   001B9E  C03A  F04A         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3560   001BA2                     
  3561                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3562   001BA2  5049               	movf	vfpfcnvrt@convarg^0,w,c
  3563   001BA4  104A               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3564   001BA6  B4D8               	btfsc	status,2,c
  3565   001BA8  EFD8  F00D         	goto	u7351
  3566   001BAC  EFDA  F00D         	goto	u7350
  3567   001BB0                     u7351:
  3568   001BB0  EFE2  F00D         	goto	l7858
  3569   001BB4                     u7350:
  3570   001BB4  504D               	movf	vfpfcnvrt@c^0,w,c
  3571   001BB6  A4D8               	btfss	status,2,c
  3572   001BB8  EFE0  F00D         	goto	u7361
  3573   001BBC  EFE2  F00D         	goto	u7360
  3574   001BC0                     u7361:
  3575   001BC0  EFAB  F00D         	goto	l7850
  3576   001BC4                     u7360:
  3577   001BC4                     l7858:
  3578                           
  3579                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3580   001BC4  504D               	movf	vfpfcnvrt@c^0,w,c
  3581   001BC6  B4D8               	btfsc	status,2,c
  3582   001BC8  EFE8  F00D         	goto	u7371
  3583   001BCC  EFEA  F00D         	goto	u7370
  3584   001BD0                     u7371:
  3585   001BD0  EF09  F00E         	goto	l7868
  3586   001BD4                     u7370:
  3587   001BD4  5047               	movf	vfpfcnvrt@done^0,w,c
  3588   001BD6  B4D8               	btfsc	status,2,c
  3589   001BD8  EFF0  F00D         	goto	u7381
  3590   001BDC  EFF2  F00D         	goto	u7380
  3591   001BE0                     u7381:
  3592   001BE0  EF09  F00E         	goto	l7868
  3593   001BE4                     u7380:
  3594   001BE4                     
  3595                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3596   001BE4  064D               	decf	vfpfcnvrt@c^0,f,c
  3597   001BE6  504D               	movf	vfpfcnvrt@c^0,w,c
  3598   001BE8  0F80               	addlw	low _dbuf
  3599   001BEA  6ED9               	movwf	fsr2l,c
  3600   001BEC  6ADA               	clrf	fsr2h,c
  3601   001BEE  0E2D               	movlw	45
  3602   001BF0  6EDF               	movwf	indf2,c
  3603   001BF2  EF09  F00E         	goto	l7868
  3604   001BF6                     l7864:
  3605                           
  3606                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3607   001BF6  504D               	movf	vfpfcnvrt@c^0,w,c
  3608   001BF8  0F80               	addlw	low _dbuf
  3609   001BFA  6ED9               	movwf	fsr2l,c
  3610   001BFC  6ADA               	clrf	fsr2h,c
  3611   001BFE  50DF               	movf	indf2,w,c
  3612   001C00  6E46               	movwf	??_vfpfcnvrt^0,c
  3613   001C02  5046               	movf	??_vfpfcnvrt^0,w,c
  3614   001C04  6E39               	movwf	fputc@c^0,c
  3615   001C06  6A3A               	clrf	(fputc@c+1)^0,c
  3616   001C08  C043  F03B         	movff	vfpfcnvrt@fp,fputc@fp
  3617   001C0C  ECDE  F011         	call	_fputc	;wreg free
  3618   001C10  2A4D               	incf	vfpfcnvrt@c^0,f,c
  3619   001C12                     l7868:
  3620                           
  3621                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3622   001C12  0E20               	movlw	32
  3623   001C14  184D               	xorwf	vfpfcnvrt@c^0,w,c
  3624   001C16  A4D8               	btfss	status,2,c
  3625   001C18  EF10  F00E         	goto	u7391
  3626   001C1C  EF12  F00E         	goto	u7390
  3627   001C20                     u7391:
  3628   001C20  EFFB  F00D         	goto	l7864
  3629   001C24                     u7390:
  3630   001C24  EF2C  F00E         	goto	l2476
  3631   001C28                     l7870:
  3632                           
  3633                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3634   001C28  5044               	movf	vfpfcnvrt@fmt^0,w,c
  3635   001C2A  6ED9               	movwf	fsr2l,c
  3636   001C2C  6ADA               	clrf	fsr2h,c
  3637   001C2E  2ADF               	incf	indf2,f,c
  3638   001C30  EF2C  F00E         	goto	l2476
  3639   001C34                     l7874:
  3640                           
  3641                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3642   001C34  5044               	movf	vfpfcnvrt@fmt^0,w,c
  3643   001C36  6ED9               	movwf	fsr2l,c
  3644   001C38  6ADA               	clrf	fsr2h,c
  3645   001C3A  CFDF FFF6          	movff	indf2,tblptrl
  3646   001C3E                     	if	1	;There is more than 1 active tblptr byte
  3647   001C3E  0E10               	movlw	high __smallconst
  3648   001C40  6EF7               	movwf	tblptrh,c
  3649   001C42                     	endif
  3650   001C42                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3651   001C42  6AF8               	clrf	tblptru,c
  3652   001C44                     	endif
  3653   001C44                     	if	0	;tblptru may be non-zero
  3654   001C44                     	endif
  3655   001C44  0008               	tblrd		*
  3656   001C46  50F5               	movf	tablat,w,c
  3657   001C48  6E39               	movwf	fputc@c^0,c
  3658   001C4A  6A3A               	clrf	(fputc@c+1)^0,c
  3659   001C4C  C043  F03B         	movff	vfpfcnvrt@fp,fputc@fp
  3660   001C50  ECDE  F011         	call	_fputc	;wreg free
  3661   001C54  EF14  F00E         	goto	l7870
  3662   001C58                     l2476:
  3663   001C58  0012               	return		;funcret
  3664   001C5A                     __end_of_vfpfcnvrt:
  3665                           	callstack 0
  3666                           
  3667 ;; *************** function _fputc *****************
  3668 ;; Defined at:
  3669 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  c               2    1[COMRAM] int 
  3672 ;;  fp              1    3[COMRAM] PTR struct _IO_FILE
  3673 ;;		 -> sprintf@f(12), 
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  2    1[COMRAM] int 
  3678 ;; Registers used:
  3679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3685 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;Total ram usage:        8 bytes
  3690 ;; Hardware stack levels used: 1
  3691 ;; Hardware stack levels required when called: 3
  3692 ;; This function calls:
  3693 ;;		_putch
  3694 ;; This function is called by:
  3695 ;;		_vfpfcnvrt
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text20
  3700   0023BC                     __ptext20:
  3701                           	callstack 0
  3702   0023BC                     _fputc:
  3703                           	callstack 23
  3704   0023BC  503B               	movf	fputc@fp^0,w,c
  3705   0023BE  B4D8               	btfsc	status,2,c
  3706   0023C0  EFE4  F011         	goto	u7251
  3707   0023C4  EFE6  F011         	goto	u7250
  3708   0023C8                     u7251:
  3709   0023C8  EFEE  F011         	goto	l7816
  3710   0023CC                     u7250:
  3711   0023CC  503B               	movf	fputc@fp^0,w,c
  3712   0023CE  A4D8               	btfss	status,2,c
  3713   0023D0  EFEC  F011         	goto	u7261
  3714   0023D4  EFEE  F011         	goto	u7260
  3715   0023D8                     u7261:
  3716   0023D8  EFF3  F011         	goto	l7818
  3717   0023DC                     u7260:
  3718   0023DC                     l7816:
  3719   0023DC  5039               	movf	fputc@c^0,w,c
  3720   0023DE  EC8F  F017         	call	_putch
  3721   0023E2  EF3A  F012         	goto	l2501
  3722   0023E6                     l7818:
  3723   0023E6  503B               	movf	fputc@fp^0,w,c
  3724   0023E8  6ED9               	movwf	fsr2l,c
  3725   0023EA  6ADA               	clrf	fsr2h,c
  3726   0023EC  0E0A               	movlw	10
  3727   0023EE  26D9               	addwf	fsr2l,f,c
  3728   0023F0  50DE               	movf	postinc2,w,c
  3729   0023F2  10DE               	iorwf	postinc2,w,c
  3730   0023F4  B4D8               	btfsc	status,2,c
  3731   0023F6  EFFF  F011         	goto	u7271
  3732   0023FA  EF01  F012         	goto	u7270
  3733   0023FE                     u7271:
  3734   0023FE  EF1A  F012         	goto	l7822
  3735   002402                     u7270:
  3736   002402  503B               	movf	fputc@fp^0,w,c
  3737   002404  6ED9               	movwf	fsr2l,c
  3738   002406  6ADA               	clrf	fsr2h,c
  3739   002408  0E0A               	movlw	10
  3740   00240A  26D9               	addwf	fsr2l,f,c
  3741   00240C  503B               	movf	fputc@fp^0,w,c
  3742   00240E  6EE1               	movwf	fsr1l,c
  3743   002410  6AE2               	clrf	fsr1h,c
  3744   002412  0E03               	movlw	3
  3745   002414  26E1               	addwf	fsr1l,f,c
  3746   002416  50DE               	movf	postinc2,w,c
  3747   002418  5CE6               	subwf	postinc1,w,c
  3748   00241A  50E6               	movf	postinc1,w,c
  3749   00241C  0A80               	xorlw	128
  3750   00241E  6E40               	movwf	(??_fputc+4)^0,c
  3751   002420  50DE               	movf	postinc2,w,c
  3752   002422  0A80               	xorlw	128
  3753   002424  5840               	subwfb	(??_fputc+4)^0,w,c
  3754   002426  B0D8               	btfsc	status,0,c
  3755   002428  EF18  F012         	goto	u7281
  3756   00242C  EF1A  F012         	goto	u7280
  3757   002430                     u7281:
  3758   002430  EF3A  F012         	goto	l2501
  3759   002434                     u7280:
  3760   002434                     l7822:
  3761   002434  503B               	movf	fputc@fp^0,w,c
  3762   002436  6ED9               	movwf	fsr2l,c
  3763   002438  6ADA               	clrf	fsr2h,c
  3764   00243A  0E03               	movlw	3
  3765   00243C  26D9               	addwf	fsr2l,f,c
  3766   00243E  CFDE F03C          	movff	postinc2,??_fputc
  3767   002442  CFDD F03D          	movff	postdec2,??_fputc+1
  3768   002446  503B               	movf	fputc@fp^0,w,c
  3769   002448  6ED9               	movwf	fsr2l,c
  3770   00244A  6ADA               	clrf	fsr2h,c
  3771   00244C  CFDE F03E          	movff	postinc2,??_fputc+2
  3772   002450  CFDD F03F          	movff	postdec2,??_fputc+3
  3773   002454  503C               	movf	??_fputc^0,w,c
  3774   002456  243E               	addwf	(??_fputc+2)^0,w,c
  3775   002458  6ED9               	movwf	fsr2l,c
  3776   00245A  503D               	movf	(??_fputc+1)^0,w,c
  3777   00245C  203F               	addwfc	(??_fputc+3)^0,w,c
  3778   00245E  6EDA               	movwf	fsr2h,c
  3779   002460  C039  FFDF         	movff	fputc@c,indf2
  3780   002464  503B               	movf	fputc@fp^0,w,c
  3781   002466  6ED9               	movwf	fsr2l,c
  3782   002468  6ADA               	clrf	fsr2h,c
  3783   00246A  0E03               	movlw	3
  3784   00246C  26D9               	addwf	fsr2l,f,c
  3785   00246E  2ADE               	incf	postinc2,f,c
  3786   002470  0E00               	movlw	0
  3787   002472  22DD               	addwfc	postdec2,f,c
  3788   002474                     l2501:
  3789   002474  0012               	return		;funcret
  3790   002476                     __end_of_fputc:
  3791                           	callstack 0
  3792                           
  3793 ;; *************** function _putch *****************
  3794 ;; Defined at:
  3795 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  c               1    wreg     unsigned char 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;  c               1    0[COMRAM] unsigned char 
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  1    wreg      void 
  3802 ;; Registers used:
  3803 ;;		wreg
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3813 ;;Total ram usage:        0 bytes
  3814 ;; Hardware stack levels used: 1
  3815 ;; Hardware stack levels required when called: 2
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		_fputc
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text21
  3824   002F1E                     __ptext21:
  3825                           	callstack 0
  3826   002F1E                     _putch:
  3827                           	callstack 23
  3828   002F1E  0012               	return		;funcret
  3829   002F20                     __end_of_putch:
  3830                           	callstack 0
  3831                           
  3832 ;; *************** function _abs *****************
  3833 ;; Defined at:
  3834 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  a               2    7[COMRAM] int 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;		None
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  2    7[COMRAM] int 
  3841 ;; Registers used:
  3842 ;;		wreg, status,2, status,0
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;Total ram usage:        4 bytes
  3853 ;; Hardware stack levels used: 1
  3854 ;; Hardware stack levels required when called: 2
  3855 ;; This function calls:
  3856 ;;		Nothing
  3857 ;; This function is called by:
  3858 ;;		_vfpfcnvrt
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           	psect	text22
  3863   002D42                     __ptext22:
  3864                           	callstack 0
  3865   002D42                     _abs:
  3866                           	callstack 24
  3867   002D42  BE40               	btfsc	(abs@a+1)^0,7,c
  3868   002D44  EFA6  F016         	goto	u7291
  3869   002D48  EFA8  F016         	goto	u7290
  3870   002D4C                     u7291:
  3871   002D4C  EFAE  F016         	goto	l2486
  3872   002D50                     u7290:
  3873   002D50  C03F  F03F         	movff	abs@a,?_abs
  3874   002D54  C040  F040         	movff	abs@a+1,?_abs+1
  3875   002D58  EFBA  F016         	goto	l2489
  3876   002D5C                     l2486:
  3877   002D5C  C03F  F041         	movff	abs@a,??_abs
  3878   002D60  C040  F042         	movff	abs@a+1,??_abs+1
  3879   002D64  1E41               	comf	??_abs^0,f,c
  3880   002D66  1E42               	comf	(??_abs+1)^0,f,c
  3881   002D68  4A41               	infsnz	??_abs^0,f,c
  3882   002D6A  2A42               	incf	(??_abs+1)^0,f,c
  3883   002D6C  C041  F03F         	movff	??_abs,?_abs
  3884   002D70  C042  F040         	movff	??_abs+1,?_abs+1
  3885   002D74                     l2489:
  3886   002D74  0012               	return		;funcret
  3887   002D76                     __end_of_abs:
  3888                           	callstack 0
  3889                           
  3890 ;; *************** function ___awmod *****************
  3891 ;; Defined at:
  3892 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  dividend        2    1[COMRAM] int 
  3895 ;;  divisor         2    3[COMRAM] int 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  sign            1    6[COMRAM] unsigned char 
  3898 ;;  counter         1    5[COMRAM] unsigned char 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  2    1[COMRAM] int 
  3901 ;; Registers used:
  3902 ;;		wreg, status,2, status,0
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3908 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3909 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;Total ram usage:        6 bytes
  3913 ;; Hardware stack levels used: 1
  3914 ;; Hardware stack levels required when called: 2
  3915 ;; This function calls:
  3916 ;;		Nothing
  3917 ;; This function is called by:
  3918 ;;		_vfpfcnvrt
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text23
  3923   00252E                     __ptext23:
  3924                           	callstack 0
  3925   00252E                     ___awmod:
  3926                           	callstack 24
  3927   00252E  0E00               	movlw	0
  3928   002530  6E3E               	movwf	___awmod@sign^0,c
  3929   002532  BE3A               	btfsc	(___awmod@dividend+1)^0,7,c
  3930   002534  EFA0  F012         	goto	u7190
  3931   002538  EF9E  F012         	goto	u7191
  3932   00253C                     u7191:
  3933   00253C  EFA6  F012         	goto	l7784
  3934   002540                     u7190:
  3935   002540  6C39               	negf	___awmod@dividend^0,c
  3936   002542  1E3A               	comf	(___awmod@dividend+1)^0,f,c
  3937   002544  B0D8               	btfsc	status,0,c
  3938   002546  2A3A               	incf	(___awmod@dividend+1)^0,f,c
  3939   002548  0E01               	movlw	1
  3940   00254A  6E3E               	movwf	___awmod@sign^0,c
  3941   00254C                     l7784:
  3942   00254C  BE3C               	btfsc	(___awmod@divisor+1)^0,7,c
  3943   00254E  EFAD  F012         	goto	u7200
  3944   002552  EFAB  F012         	goto	u7201
  3945   002556                     u7201:
  3946   002556  EFB1  F012         	goto	l7788
  3947   00255A                     u7200:
  3948   00255A  6C3B               	negf	___awmod@divisor^0,c
  3949   00255C  1E3C               	comf	(___awmod@divisor+1)^0,f,c
  3950   00255E  B0D8               	btfsc	status,0,c
  3951   002560  2A3C               	incf	(___awmod@divisor+1)^0,f,c
  3952   002562                     l7788:
  3953   002562  503B               	movf	___awmod@divisor^0,w,c
  3954   002564  103C               	iorwf	(___awmod@divisor+1)^0,w,c
  3955   002566  B4D8               	btfsc	status,2,c
  3956   002568  EFB8  F012         	goto	u7211
  3957   00256C  EFBA  F012         	goto	u7210
  3958   002570                     u7211:
  3959   002570  EFDE  F012         	goto	l7804
  3960   002574                     u7210:
  3961   002574  0E01               	movlw	1
  3962   002576  6E3D               	movwf	___awmod@counter^0,c
  3963   002578  EFC2  F012         	goto	l7794
  3964   00257C                     l7792:
  3965   00257C  90D8               	bcf	status,0,c
  3966   00257E  363B               	rlcf	___awmod@divisor^0,f,c
  3967   002580  363C               	rlcf	(___awmod@divisor+1)^0,f,c
  3968   002582  2A3D               	incf	___awmod@counter^0,f,c
  3969   002584                     l7794:
  3970   002584  AE3C               	btfss	(___awmod@divisor+1)^0,7,c
  3971   002586  EFC7  F012         	goto	u7221
  3972   00258A  EFC9  F012         	goto	u7220
  3973   00258E                     u7221:
  3974   00258E  EFBE  F012         	goto	l7792
  3975   002592                     u7220:
  3976   002592                     l7796:
  3977   002592  503B               	movf	___awmod@divisor^0,w,c
  3978   002594  5C39               	subwf	___awmod@dividend^0,w,c
  3979   002596  503C               	movf	(___awmod@divisor+1)^0,w,c
  3980   002598  583A               	subwfb	(___awmod@dividend+1)^0,w,c
  3981   00259A  A0D8               	btfss	status,0,c
  3982   00259C  EFD2  F012         	goto	u7231
  3983   0025A0  EFD4  F012         	goto	u7230
  3984   0025A4                     u7231:
  3985   0025A4  EFD8  F012         	goto	l7800
  3986   0025A8                     u7230:
  3987   0025A8  503B               	movf	___awmod@divisor^0,w,c
  3988   0025AA  5E39               	subwf	___awmod@dividend^0,f,c
  3989   0025AC  503C               	movf	(___awmod@divisor+1)^0,w,c
  3990   0025AE  5A3A               	subwfb	(___awmod@dividend+1)^0,f,c
  3991   0025B0                     l7800:
  3992   0025B0  90D8               	bcf	status,0,c
  3993   0025B2  323C               	rrcf	(___awmod@divisor+1)^0,f,c
  3994   0025B4  323B               	rrcf	___awmod@divisor^0,f,c
  3995   0025B6  2E3D               	decfsz	___awmod@counter^0,f,c
  3996   0025B8  EFC9  F012         	goto	l7796
  3997   0025BC                     l7804:
  3998   0025BC  503E               	movf	___awmod@sign^0,w,c
  3999   0025BE  B4D8               	btfsc	status,2,c
  4000   0025C0  EFE4  F012         	goto	u7241
  4001   0025C4  EFE6  F012         	goto	u7240
  4002   0025C8                     u7241:
  4003   0025C8  EFEA  F012         	goto	l7808
  4004   0025CC                     u7240:
  4005   0025CC  6C39               	negf	___awmod@dividend^0,c
  4006   0025CE  1E3A               	comf	(___awmod@dividend+1)^0,f,c
  4007   0025D0  B0D8               	btfsc	status,0,c
  4008   0025D2  2A3A               	incf	(___awmod@dividend+1)^0,f,c
  4009   0025D4                     l7808:
  4010   0025D4  C039  F039         	movff	___awmod@dividend,?___awmod
  4011   0025D8  C03A  F03A         	movff	___awmod@dividend+1,?___awmod+1
  4012   0025DC  0012               	return		;funcret
  4013   0025DE                     __end_of___awmod:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function ___awdiv *****************
  4017 ;; Defined at:
  4018 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  dividend        2    1[COMRAM] int 
  4021 ;;  divisor         2    3[COMRAM] int 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;  quotient        2    7[COMRAM] int 
  4024 ;;  sign            1    6[COMRAM] unsigned char 
  4025 ;;  counter         1    5[COMRAM] unsigned char 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  2    1[COMRAM] int 
  4028 ;; Registers used:
  4029 ;;		wreg, status,2, status,0
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4035 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;Total ram usage:        8 bytes
  4040 ;; Hardware stack levels used: 1
  4041 ;; Hardware stack levels required when called: 2
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_vfpfcnvrt
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text24
  4050   0022F8                     __ptext24:
  4051                           	callstack 0
  4052   0022F8                     ___awdiv:
  4053                           	callstack 24
  4054   0022F8  0E00               	movlw	0
  4055   0022FA  6E3E               	movwf	___awdiv@sign^0,c
  4056   0022FC  BE3C               	btfsc	(___awdiv@divisor+1)^0,7,c
  4057   0022FE  EF85  F011         	goto	u7130
  4058   002302  EF83  F011         	goto	u7131
  4059   002306                     u7131:
  4060   002306  EF8B  F011         	goto	l7740
  4061   00230A                     u7130:
  4062   00230A  6C3B               	negf	___awdiv@divisor^0,c
  4063   00230C  1E3C               	comf	(___awdiv@divisor+1)^0,f,c
  4064   00230E  B0D8               	btfsc	status,0,c
  4065   002310  2A3C               	incf	(___awdiv@divisor+1)^0,f,c
  4066   002312  0E01               	movlw	1
  4067   002314  6E3E               	movwf	___awdiv@sign^0,c
  4068   002316                     l7740:
  4069   002316  BE3A               	btfsc	(___awdiv@dividend+1)^0,7,c
  4070   002318  EF92  F011         	goto	u7140
  4071   00231C  EF90  F011         	goto	u7141
  4072   002320                     u7141:
  4073   002320  EF98  F011         	goto	l7746
  4074   002324                     u7140:
  4075   002324  6C39               	negf	___awdiv@dividend^0,c
  4076   002326  1E3A               	comf	(___awdiv@dividend+1)^0,f,c
  4077   002328  B0D8               	btfsc	status,0,c
  4078   00232A  2A3A               	incf	(___awdiv@dividend+1)^0,f,c
  4079   00232C  0E01               	movlw	1
  4080   00232E  1A3E               	xorwf	___awdiv@sign^0,f,c
  4081   002330                     l7746:
  4082   002330  0E00               	movlw	0
  4083   002332  6E40               	movwf	(___awdiv@quotient+1)^0,c
  4084   002334  0E00               	movlw	0
  4085   002336  6E3F               	movwf	___awdiv@quotient^0,c
  4086   002338  503B               	movf	___awdiv@divisor^0,w,c
  4087   00233A  103C               	iorwf	(___awdiv@divisor+1)^0,w,c
  4088   00233C  B4D8               	btfsc	status,2,c
  4089   00233E  EFA3  F011         	goto	u7151
  4090   002342  EFA5  F011         	goto	u7150
  4091   002346                     u7151:
  4092   002346  EFCD  F011         	goto	l7768
  4093   00234A                     u7150:
  4094   00234A  0E01               	movlw	1
  4095   00234C  6E3D               	movwf	___awdiv@counter^0,c
  4096   00234E  EFAD  F011         	goto	l7754
  4097   002352                     l7752:
  4098   002352  90D8               	bcf	status,0,c
  4099   002354  363B               	rlcf	___awdiv@divisor^0,f,c
  4100   002356  363C               	rlcf	(___awdiv@divisor+1)^0,f,c
  4101   002358  2A3D               	incf	___awdiv@counter^0,f,c
  4102   00235A                     l7754:
  4103   00235A  AE3C               	btfss	(___awdiv@divisor+1)^0,7,c
  4104   00235C  EFB2  F011         	goto	u7161
  4105   002360  EFB4  F011         	goto	u7160
  4106   002364                     u7161:
  4107   002364  EFA9  F011         	goto	l7752
  4108   002368                     u7160:
  4109   002368                     l7756:
  4110   002368  90D8               	bcf	status,0,c
  4111   00236A  363F               	rlcf	___awdiv@quotient^0,f,c
  4112   00236C  3640               	rlcf	(___awdiv@quotient+1)^0,f,c
  4113   00236E  503B               	movf	___awdiv@divisor^0,w,c
  4114   002370  5C39               	subwf	___awdiv@dividend^0,w,c
  4115   002372  503C               	movf	(___awdiv@divisor+1)^0,w,c
  4116   002374  583A               	subwfb	(___awdiv@dividend+1)^0,w,c
  4117   002376  A0D8               	btfss	status,0,c
  4118   002378  EFC0  F011         	goto	u7171
  4119   00237C  EFC2  F011         	goto	u7170
  4120   002380                     u7171:
  4121   002380  EFC7  F011         	goto	l7764
  4122   002384                     u7170:
  4123   002384  503B               	movf	___awdiv@divisor^0,w,c
  4124   002386  5E39               	subwf	___awdiv@dividend^0,f,c
  4125   002388  503C               	movf	(___awdiv@divisor+1)^0,w,c
  4126   00238A  5A3A               	subwfb	(___awdiv@dividend+1)^0,f,c
  4127   00238C  803F               	bsf	___awdiv@quotient^0,0,c
  4128   00238E                     l7764:
  4129   00238E  90D8               	bcf	status,0,c
  4130   002390  323C               	rrcf	(___awdiv@divisor+1)^0,f,c
  4131   002392  323B               	rrcf	___awdiv@divisor^0,f,c
  4132   002394  2E3D               	decfsz	___awdiv@counter^0,f,c
  4133   002396  EFB4  F011         	goto	l7756
  4134   00239A                     l7768:
  4135   00239A  503E               	movf	___awdiv@sign^0,w,c
  4136   00239C  B4D8               	btfsc	status,2,c
  4137   00239E  EFD3  F011         	goto	u7181
  4138   0023A2  EFD5  F011         	goto	u7180
  4139   0023A6                     u7181:
  4140   0023A6  EFD9  F011         	goto	l7772
  4141   0023AA                     u7180:
  4142   0023AA  6C3F               	negf	___awdiv@quotient^0,c
  4143   0023AC  1E40               	comf	(___awdiv@quotient+1)^0,f,c
  4144   0023AE  B0D8               	btfsc	status,0,c
  4145   0023B0  2A40               	incf	(___awdiv@quotient+1)^0,f,c
  4146   0023B2                     l7772:
  4147   0023B2  C03F  F039         	movff	___awdiv@quotient,?___awdiv
  4148   0023B6  C040  F03A         	movff	___awdiv@quotient+1,?___awdiv+1
  4149   0023BA  0012               	return		;funcret
  4150   0023BC                     __end_of___awdiv:
  4151                           	callstack 0
  4152                           
  4153 ;; *************** function _memset *****************
  4154 ;; Defined at:
  4155 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  dest            1    1[COMRAM] PTR void 
  4158 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), 
  4159 ;;  c               2    2[COMRAM] int 
  4160 ;;  n               2    4[COMRAM] unsigned int 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  p               1    6[COMRAM] PTR unsigned char 
  4163 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      PTR void 
  4166 ;; Registers used:
  4167 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4173 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;Total ram usage:        6 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; Hardware stack levels required when called: 2
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_convert_uint16_to_string
  4184 ;;		_convert_uint8_to_string
  4185 ;;		_convert_uint32_to_string
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text25
  4190   002DDA                     __ptext25:
  4191                           	callstack 0
  4192   002DDA                     _memset:
  4193                           	callstack 27
  4194   002DDA  C039  F03E         	movff	memset@dest,memset@p
  4195   002DDE  EFF7  F016         	goto	l7896
  4196   002DE2                     l7892:
  4197   002DE2  503E               	movf	memset@p^0,w,c
  4198   002DE4  6ED9               	movwf	fsr2l,c
  4199   002DE6  6ADA               	clrf	fsr2h,c
  4200   002DE8  C03A  FFDF         	movff	memset@c,indf2
  4201   002DEC  2A3E               	incf	memset@p^0,f,c
  4202   002DEE                     l7896:
  4203   002DEE  063C               	decf	memset@n^0,f,c
  4204   002DF0  A0D8               	btfss	status,0,c
  4205   002DF2  063D               	decf	(memset@n+1)^0,f,c
  4206   002DF4  283C               	incf	memset@n^0,w,c
  4207   002DF6  E106               	bnz	u7411
  4208   002DF8  283D               	incf	(memset@n+1)^0,w,c
  4209   002DFA  A4D8               	btfss	status,2,c
  4210   002DFC  EF02  F017         	goto	u7411
  4211   002E00  EF04  F017         	goto	u7410
  4212   002E04                     u7411:
  4213   002E04  EFF1  F016         	goto	l7892
  4214   002E08                     u7410:
  4215   002E08  0012               	return		;funcret
  4216   002E0A                     __end_of_memset:
  4217                           	callstack 0
  4218                           
  4219 ;; *************** function _application_intialize *****************
  4220 ;; Defined at:
  4221 ;;		line 126 in file "application.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;		None
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  ret             1    0        unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1    wreg      void 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4239 ;;Total ram usage:        0 bytes
  4240 ;; Hardware stack levels used: 1
  4241 ;; Hardware stack levels required when called: 3
  4242 ;; This function calls:
  4243 ;;		_ecu_layer_intialize
  4244 ;; This function is called by:
  4245 ;;		_main
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           	psect	text26
  4250   002EF4                     __ptext26:
  4251                           	callstack 0
  4252   002EF4                     _application_intialize:
  4253                           	callstack 27
  4254   002EF4                     
  4255                           ;application.c: 128:     ecu_layer_intialize();
  4256   002EF4  EC90  F017         	call	_ecu_layer_intialize	;wreg free
  4257   002EF8  0012               	return		;funcret
  4258   002EFA                     __end_of_application_intialize:
  4259                           	callstack 0
  4260                           
  4261 ;; *************** function _ecu_layer_intialize *****************
  4262 ;; Defined at:
  4263 ;;		line 10 in file "ECU_Layer/ecu_layer_init.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;		None
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;  ret             1    0        unsigned char 
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  1    wreg      void 
  4270 ;; Registers used:
  4271 ;;		wreg, status,2
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4281 ;;Total ram usage:        0 bytes
  4282 ;; Hardware stack levels used: 1
  4283 ;; Hardware stack levels required when called: 2
  4284 ;; This function calls:
  4285 ;;		Nothing
  4286 ;; This function is called by:
  4287 ;;		_application_intialize
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           	psect	text27
  4292   002F20                     __ptext27:
  4293                           	callstack 0
  4294   002F20                     _ecu_layer_intialize:
  4295                           	callstack 27
  4296   002F20  0012               	return		;funcret
  4297   002F22                     __end_of_ecu_layer_intialize:
  4298                           	callstack 0
  4299                           
  4300 ;; *************** function ___xxtofl *****************
  4301 ;; Defined at:
  4302 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  sign            1    wreg     unsigned char 
  4305 ;;  val             4    1[COMRAM] long 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  sign            1    9[COMRAM] unsigned char 
  4308 ;;  arg             4   11[COMRAM] unsigned long 
  4309 ;;  exp             1   10[COMRAM] unsigned char 
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  4    1[COMRAM] unsigned char 
  4312 ;; Registers used:
  4313 ;;		wreg, status,2, status,0
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4319 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4320 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4321 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;Total ram usage:       14 bytes
  4324 ;; Hardware stack levels used: 1
  4325 ;; Hardware stack levels required when called: 2
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_main
  4330 ;;		_Ultrasonic_Calculate_Distance
  4331 ;;		_CCP_PWM_Set_Duty
  4332 ;;		_CCP_PWM_Mode_Config
  4333 ;;		_I2C_Master_Mode_Clock_Configurations
  4334 ;;		_EUSART_Baud_Rate_Calculation
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text28
  4339   001C5A                     __ptext28:
  4340                           	callstack 0
  4341   001C5A                     ___xxtofl:
  4342                           	callstack 28
  4343                           
  4344                           ;incstack = 0
  4345                           ;___xxtofl@sign stored from wreg
  4346   001C5A  6E41               	movwf	___xxtofl@sign^0,c
  4347   001C5C  5041               	movf	___xxtofl@sign^0,w,c
  4348   001C5E  B4D8               	btfsc	status,2,c
  4349   001C60  EF34  F00E         	goto	u5211
  4350   001C64  EF36  F00E         	goto	u5210
  4351   001C68                     u5211:
  4352   001C68  EF58  F00E         	goto	l2409
  4353   001C6C                     u5210:
  4354   001C6C  BE3C               	btfsc	(___xxtofl@val+3)^0,7,c
  4355   001C6E  EF3D  F00E         	goto	u5220
  4356   001C72  EF3B  F00E         	goto	u5221
  4357   001C76                     u5221:
  4358   001C76  EF58  F00E         	goto	l2409
  4359   001C7A                     u5220:
  4360   001C7A  C039  F03D         	movff	___xxtofl@val,??___xxtofl
  4361   001C7E  C03A  F03E         	movff	___xxtofl@val+1,??___xxtofl+1
  4362   001C82  C03B  F03F         	movff	___xxtofl@val+2,??___xxtofl+2
  4363   001C86  C03C  F040         	movff	___xxtofl@val+3,??___xxtofl+3
  4364   001C8A  1E3D               	comf	??___xxtofl^0,f,c
  4365   001C8C  1E3E               	comf	(??___xxtofl+1)^0,f,c
  4366   001C8E  1E3F               	comf	(??___xxtofl+2)^0,f,c
  4367   001C90  1E40               	comf	(??___xxtofl+3)^0,f,c
  4368   001C92  2A3D               	incf	??___xxtofl^0,f,c
  4369   001C94  0E00               	movlw	0
  4370   001C96  223E               	addwfc	(??___xxtofl+1)^0,f,c
  4371   001C98  223F               	addwfc	(??___xxtofl+2)^0,f,c
  4372   001C9A  2240               	addwfc	(??___xxtofl+3)^0,f,c
  4373   001C9C  C03D  F043         	movff	??___xxtofl,___xxtofl@arg
  4374   001CA0  C03E  F044         	movff	??___xxtofl+1,___xxtofl@arg+1
  4375   001CA4  C03F  F045         	movff	??___xxtofl+2,___xxtofl@arg+2
  4376   001CA8  C040  F046         	movff	??___xxtofl+3,___xxtofl@arg+3
  4377   001CAC  EF60  F00E         	goto	l6500
  4378   001CB0                     l2409:
  4379   001CB0  C039  F043         	movff	___xxtofl@val,___xxtofl@arg
  4380   001CB4  C03A  F044         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4381   001CB8  C03B  F045         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4382   001CBC  C03C  F046         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4383   001CC0                     l6500:
  4384   001CC0  5039               	movf	___xxtofl@val^0,w,c
  4385   001CC2  103A               	iorwf	(___xxtofl@val+1)^0,w,c
  4386   001CC4  103B               	iorwf	(___xxtofl@val+2)^0,w,c
  4387   001CC6  103C               	iorwf	(___xxtofl@val+3)^0,w,c
  4388   001CC8  A4D8               	btfss	status,2,c
  4389   001CCA  EF69  F00E         	goto	u5231
  4390   001CCE  EF6B  F00E         	goto	u5230
  4391   001CD2                     u5231:
  4392   001CD2  EF75  F00E         	goto	l6506
  4393   001CD6                     u5230:
  4394   001CD6  0E00               	movlw	0
  4395   001CD8  6E39               	movwf	?___xxtofl^0,c
  4396   001CDA  0E00               	movlw	0
  4397   001CDC  6E3A               	movwf	(?___xxtofl+1)^0,c
  4398   001CDE  0E00               	movlw	0
  4399   001CE0  6E3B               	movwf	(?___xxtofl+2)^0,c
  4400   001CE2  0E00               	movlw	0
  4401   001CE4  6E3C               	movwf	(?___xxtofl+3)^0,c
  4402   001CE6  EF06  F00F         	goto	l2412
  4403   001CEA                     l6506:
  4404   001CEA  0E96               	movlw	150
  4405   001CEC  6E42               	movwf	___xxtofl@exp^0,c
  4406   001CEE  EF7F  F00E         	goto	l6510
  4407   001CF2                     l6508:
  4408   001CF2  2A42               	incf	___xxtofl@exp^0,f,c
  4409   001CF4  90D8               	bcf	status,0,c
  4410   001CF6  3246               	rrcf	(___xxtofl@arg+3)^0,f,c
  4411   001CF8  3245               	rrcf	(___xxtofl@arg+2)^0,f,c
  4412   001CFA  3244               	rrcf	(___xxtofl@arg+1)^0,f,c
  4413   001CFC  3243               	rrcf	___xxtofl@arg^0,f,c
  4414   001CFE                     l6510:
  4415   001CFE  0E00               	movlw	0
  4416   001D00  1443               	andwf	___xxtofl@arg^0,w,c
  4417   001D02  6E3D               	movwf	??___xxtofl^0,c
  4418   001D04  0E00               	movlw	0
  4419   001D06  1444               	andwf	(___xxtofl@arg+1)^0,w,c
  4420   001D08  6E3E               	movwf	(??___xxtofl+1)^0,c
  4421   001D0A  0E00               	movlw	0
  4422   001D0C  1445               	andwf	(___xxtofl@arg+2)^0,w,c
  4423   001D0E  6E3F               	movwf	(??___xxtofl+2)^0,c
  4424   001D10  0EFE               	movlw	254
  4425   001D12  1446               	andwf	(___xxtofl@arg+3)^0,w,c
  4426   001D14  6E40               	movwf	(??___xxtofl+3)^0,c
  4427   001D16  503D               	movf	??___xxtofl^0,w,c
  4428   001D18  103E               	iorwf	(??___xxtofl+1)^0,w,c
  4429   001D1A  103F               	iorwf	(??___xxtofl+2)^0,w,c
  4430   001D1C  1040               	iorwf	(??___xxtofl+3)^0,w,c
  4431   001D1E  A4D8               	btfss	status,2,c
  4432   001D20  EF94  F00E         	goto	u5241
  4433   001D24  EF96  F00E         	goto	u5240
  4434   001D28                     u5241:
  4435   001D28  EF79  F00E         	goto	l6508
  4436   001D2C                     u5240:
  4437   001D2C  EFA4  F00E         	goto	l2416
  4438   001D30                     l6512:
  4439   001D30  2A42               	incf	___xxtofl@exp^0,f,c
  4440   001D32  0E01               	movlw	1
  4441   001D34  2643               	addwf	___xxtofl@arg^0,f,c
  4442   001D36  0E00               	movlw	0
  4443   001D38  2244               	addwfc	(___xxtofl@arg+1)^0,f,c
  4444   001D3A  2245               	addwfc	(___xxtofl@arg+2)^0,f,c
  4445   001D3C  2246               	addwfc	(___xxtofl@arg+3)^0,f,c
  4446   001D3E  90D8               	bcf	status,0,c
  4447   001D40  3246               	rrcf	(___xxtofl@arg+3)^0,f,c
  4448   001D42  3245               	rrcf	(___xxtofl@arg+2)^0,f,c
  4449   001D44  3244               	rrcf	(___xxtofl@arg+1)^0,f,c
  4450   001D46  3243               	rrcf	___xxtofl@arg^0,f,c
  4451   001D48                     l2416:
  4452   001D48  0E00               	movlw	0
  4453   001D4A  1443               	andwf	___xxtofl@arg^0,w,c
  4454   001D4C  6E3D               	movwf	??___xxtofl^0,c
  4455   001D4E  0E00               	movlw	0
  4456   001D50  1444               	andwf	(___xxtofl@arg+1)^0,w,c
  4457   001D52  6E3E               	movwf	(??___xxtofl+1)^0,c
  4458   001D54  0E00               	movlw	0
  4459   001D56  1445               	andwf	(___xxtofl@arg+2)^0,w,c
  4460   001D58  6E3F               	movwf	(??___xxtofl+2)^0,c
  4461   001D5A  0EFF               	movlw	255
  4462   001D5C  1446               	andwf	(___xxtofl@arg+3)^0,w,c
  4463   001D5E  6E40               	movwf	(??___xxtofl+3)^0,c
  4464   001D60  503D               	movf	??___xxtofl^0,w,c
  4465   001D62  103E               	iorwf	(??___xxtofl+1)^0,w,c
  4466   001D64  103F               	iorwf	(??___xxtofl+2)^0,w,c
  4467   001D66  1040               	iorwf	(??___xxtofl+3)^0,w,c
  4468   001D68  A4D8               	btfss	status,2,c
  4469   001D6A  EFB9  F00E         	goto	u5251
  4470   001D6E  EFBB  F00E         	goto	u5250
  4471   001D72                     u5251:
  4472   001D72  EF98  F00E         	goto	l6512
  4473   001D76                     u5250:
  4474   001D76  EFC3  F00E         	goto	l6520
  4475   001D7A                     l6518:
  4476   001D7A  0642               	decf	___xxtofl@exp^0,f,c
  4477   001D7C  90D8               	bcf	status,0,c
  4478   001D7E  3643               	rlcf	___xxtofl@arg^0,f,c
  4479   001D80  3644               	rlcf	(___xxtofl@arg+1)^0,f,c
  4480   001D82  3645               	rlcf	(___xxtofl@arg+2)^0,f,c
  4481   001D84  3646               	rlcf	(___xxtofl@arg+3)^0,f,c
  4482   001D86                     l6520:
  4483   001D86  BE45               	btfsc	(___xxtofl@arg+2)^0,7,c
  4484   001D88  EFC8  F00E         	goto	u5261
  4485   001D8C  EFCA  F00E         	goto	u5260
  4486   001D90                     u5261:
  4487   001D90  EFD2  F00E         	goto	l2423
  4488   001D94                     u5260:
  4489   001D94  0E02               	movlw	2
  4490   001D96  6042               	cpfslt	___xxtofl@exp^0,c
  4491   001D98  EFD0  F00E         	goto	u5271
  4492   001D9C  EFD2  F00E         	goto	u5270
  4493   001DA0                     u5271:
  4494   001DA0  EFBD  F00E         	goto	l6518
  4495   001DA4                     u5270:
  4496   001DA4                     l2423:
  4497   001DA4  B042               	btfsc	___xxtofl@exp^0,0,c
  4498   001DA6  EFD7  F00E         	goto	u5281
  4499   001DAA  EFD9  F00E         	goto	u5280
  4500   001DAE                     u5281:
  4501   001DAE  EFDA  F00E         	goto	l6526
  4502   001DB2                     u5280:
  4503   001DB2  9E45               	bcf	(___xxtofl@arg+2)^0,7,c
  4504   001DB4                     l6526:
  4505   001DB4  90D8               	bcf	status,0,c
  4506   001DB6  3242               	rrcf	___xxtofl@exp^0,f,c
  4507   001DB8  C042  F03D         	movff	___xxtofl@exp,??___xxtofl
  4508   001DBC  6A3E               	clrf	(??___xxtofl+1)^0,c
  4509   001DBE  6A3F               	clrf	(??___xxtofl+2)^0,c
  4510   001DC0  6A40               	clrf	(??___xxtofl+3)^0,c
  4511   001DC2  C03D  F040         	movff	??___xxtofl,??___xxtofl+3
  4512   001DC6  6A3F               	clrf	(??___xxtofl+2)^0,c
  4513   001DC8  6A3E               	clrf	(??___xxtofl+1)^0,c
  4514   001DCA  6A3D               	clrf	??___xxtofl^0,c
  4515   001DCC  503D               	movf	??___xxtofl^0,w,c
  4516   001DCE  1243               	iorwf	___xxtofl@arg^0,f,c
  4517   001DD0  503E               	movf	(??___xxtofl+1)^0,w,c
  4518   001DD2  1244               	iorwf	(___xxtofl@arg+1)^0,f,c
  4519   001DD4  503F               	movf	(??___xxtofl+2)^0,w,c
  4520   001DD6  1245               	iorwf	(___xxtofl@arg+2)^0,f,c
  4521   001DD8  5040               	movf	(??___xxtofl+3)^0,w,c
  4522   001DDA  1246               	iorwf	(___xxtofl@arg+3)^0,f,c
  4523   001DDC  5041               	movf	___xxtofl@sign^0,w,c
  4524   001DDE  B4D8               	btfsc	status,2,c
  4525   001DE0  EFF4  F00E         	goto	u5291
  4526   001DE4  EFF6  F00E         	goto	u5290
  4527   001DE8                     u5291:
  4528   001DE8  EFFE  F00E         	goto	l6536
  4529   001DEC                     u5290:
  4530   001DEC  BE3C               	btfsc	(___xxtofl@val+3)^0,7,c
  4531   001DEE  EFFD  F00E         	goto	u5300
  4532   001DF2  EFFB  F00E         	goto	u5301
  4533   001DF6                     u5301:
  4534   001DF6  EFFE  F00E         	goto	l6536
  4535   001DFA                     u5300:
  4536   001DFA  8E46               	bsf	(___xxtofl@arg+3)^0,7,c
  4537   001DFC                     l6536:
  4538   001DFC  C043  F039         	movff	___xxtofl@arg,?___xxtofl
  4539   001E00  C044  F03A         	movff	___xxtofl@arg+1,?___xxtofl+1
  4540   001E04  C045  F03B         	movff	___xxtofl@arg+2,?___xxtofl+2
  4541   001E08  C046  F03C         	movff	___xxtofl@arg+3,?___xxtofl+3
  4542   001E0C                     l2412:
  4543   001E0C  0012               	return		;funcret
  4544   001E0E                     __end_of___xxtofl:
  4545                           	callstack 0
  4546                           
  4547 ;; *************** function ___lwdiv *****************
  4548 ;; Defined at:
  4549 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  dividend        2    1[COMRAM] unsigned int 
  4552 ;;  divisor         2    3[COMRAM] unsigned int 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  quotient        2    5[COMRAM] unsigned int 
  4555 ;;  counter         1    7[COMRAM] unsigned char 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  2    1[COMRAM] unsigned int 
  4558 ;; Registers used:
  4559 ;;		wreg, status,2, status,0
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4565 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;Total ram usage:        7 bytes
  4570 ;; Hardware stack levels used: 1
  4571 ;; Hardware stack levels required when called: 2
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_main
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text29
  4580   00284E                     __ptext29:
  4581                           	callstack 0
  4582   00284E                     ___lwdiv:
  4583                           	callstack 28
  4584   00284E  0E00               	movlw	0
  4585   002850  6E3E               	movwf	(___lwdiv@quotient+1)^0,c
  4586   002852  0E00               	movlw	0
  4587   002854  6E3D               	movwf	___lwdiv@quotient^0,c
  4588   002856  503B               	movf	___lwdiv@divisor^0,w,c
  4589   002858  103C               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4590   00285A  B4D8               	btfsc	status,2,c
  4591   00285C  EF32  F014         	goto	u5181
  4592   002860  EF34  F014         	goto	u5180
  4593   002864                     u5181:
  4594   002864  EF5C  F014         	goto	l2245
  4595   002868                     u5180:
  4596   002868  0E01               	movlw	1
  4597   00286A  6E3F               	movwf	___lwdiv@counter^0,c
  4598   00286C  EF3C  F014         	goto	l6480
  4599   002870                     l6478:
  4600   002870  90D8               	bcf	status,0,c
  4601   002872  363B               	rlcf	___lwdiv@divisor^0,f,c
  4602   002874  363C               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4603   002876  2A3F               	incf	___lwdiv@counter^0,f,c
  4604   002878                     l6480:
  4605   002878  AE3C               	btfss	(___lwdiv@divisor+1)^0,7,c
  4606   00287A  EF41  F014         	goto	u5191
  4607   00287E  EF43  F014         	goto	u5190
  4608   002882                     u5191:
  4609   002882  EF38  F014         	goto	l6478
  4610   002886                     u5190:
  4611   002886                     l6482:
  4612   002886  90D8               	bcf	status,0,c
  4613   002888  363D               	rlcf	___lwdiv@quotient^0,f,c
  4614   00288A  363E               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4615   00288C  503B               	movf	___lwdiv@divisor^0,w,c
  4616   00288E  5C39               	subwf	___lwdiv@dividend^0,w,c
  4617   002890  503C               	movf	(___lwdiv@divisor+1)^0,w,c
  4618   002892  583A               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4619   002894  A0D8               	btfss	status,0,c
  4620   002896  EF4F  F014         	goto	u5201
  4621   00289A  EF51  F014         	goto	u5200
  4622   00289E                     u5201:
  4623   00289E  EF56  F014         	goto	l6490
  4624   0028A2                     u5200:
  4625   0028A2  503B               	movf	___lwdiv@divisor^0,w,c
  4626   0028A4  5E39               	subwf	___lwdiv@dividend^0,f,c
  4627   0028A6  503C               	movf	(___lwdiv@divisor+1)^0,w,c
  4628   0028A8  5A3A               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4629   0028AA  803D               	bsf	___lwdiv@quotient^0,0,c
  4630   0028AC                     l6490:
  4631   0028AC  90D8               	bcf	status,0,c
  4632   0028AE  323C               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4633   0028B0  323B               	rrcf	___lwdiv@divisor^0,f,c
  4634   0028B2  2E3F               	decfsz	___lwdiv@counter^0,f,c
  4635   0028B4  EF43  F014         	goto	l6482
  4636   0028B8                     l2245:
  4637   0028B8  C03D  F039         	movff	___lwdiv@quotient,?___lwdiv
  4638   0028BC  C03E  F03A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4639   0028C0  0012               	return		;funcret
  4640   0028C2                     __end_of___lwdiv:
  4641                           	callstack 0
  4642                           
  4643 ;; *************** function ___fltol *****************
  4644 ;; Defined at:
  4645 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  f1              4   40[COMRAM] unsigned int 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;  exp1            1   49[COMRAM] unsigned char 
  4650 ;;  sign1           1   48[COMRAM] unsigned char 
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  4   40[COMRAM] long 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2, status,0
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;Total ram usage:       10 bytes
  4665 ;; Hardware stack levels used: 1
  4666 ;; Hardware stack levels required when called: 2
  4667 ;; This function calls:
  4668 ;;		Nothing
  4669 ;; This function is called by:
  4670 ;;		_main
  4671 ;;		_Ultrasonic_Calculate_Distance
  4672 ;;		_CCP_PWM_Set_Duty
  4673 ;;		_CCP_PWM_Mode_Config
  4674 ;;		_I2C_Master_Mode_Clock_Configurations
  4675 ;;		_EUSART_Baud_Rate_Calculation
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text30
  4680   002030                     __ptext30:
  4681                           	callstack 0
  4682   002030                     ___fltol:
  4683                           	callstack 28
  4684   002030  3462               	rlcf	(___fltol@f1+2)^0,w,c
  4685   002032  3463               	rlcf	(___fltol@f1+3)^0,w,c
  4686   002034  6E69               	movwf	___fltol@exp1^0,c
  4687   002036  5069               	movf	___fltol@exp1^0,w,c
  4688   002038  A4D8               	btfss	status,2,c
  4689   00203A  EF21  F010         	goto	u5111
  4690   00203E  EF23  F010         	goto	u5110
  4691   002042                     u5111:
  4692   002042  EF2D  F010         	goto	l6434
  4693   002046                     u5110:
  4694   002046                     l6430:
  4695   002046  0E00               	movlw	0
  4696   002048  6E60               	movwf	?___fltol^0,c
  4697   00204A  0E00               	movlw	0
  4698   00204C  6E61               	movwf	(?___fltol+1)^0,c
  4699   00204E  0E00               	movlw	0
  4700   002050  6E62               	movwf	(?___fltol+2)^0,c
  4701   002052  0E00               	movlw	0
  4702   002054  6E63               	movwf	(?___fltol+3)^0,c
  4703   002056  EF9A  F010         	goto	l2051
  4704   00205A                     l6434:
  4705   00205A  C060  F064         	movff	___fltol@f1,??___fltol
  4706   00205E  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  4707   002062  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  4708   002066  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  4709   00206A  0E20               	movlw	32
  4710   00206C  EF3D  F010         	goto	u5120
  4711   002070                     u5125:
  4712   002070  90D8               	bcf	status,0,c
  4713   002072  3267               	rrcf	(??___fltol+3)^0,f,c
  4714   002074  3266               	rrcf	(??___fltol+2)^0,f,c
  4715   002076  3265               	rrcf	(??___fltol+1)^0,f,c
  4716   002078  3264               	rrcf	??___fltol^0,f,c
  4717   00207A                     u5120:
  4718   00207A  2EE8               	decfsz	wreg,f,c
  4719   00207C  EF38  F010         	goto	u5125
  4720   002080  5064               	movf	??___fltol^0,w,c
  4721   002082  6E68               	movwf	___fltol@sign1^0,c
  4722   002084  8E62               	bsf	(___fltol@f1+2)^0,7,c
  4723   002086  0EFF               	movlw	255
  4724   002088  1660               	andwf	___fltol@f1^0,f,c
  4725   00208A  0EFF               	movlw	255
  4726   00208C  1661               	andwf	(___fltol@f1+1)^0,f,c
  4727   00208E  0EFF               	movlw	255
  4728   002090  1662               	andwf	(___fltol@f1+2)^0,f,c
  4729   002092  0E00               	movlw	0
  4730   002094  1663               	andwf	(___fltol@f1+3)^0,f,c
  4731   002096  0E96               	movlw	150
  4732   002098  5E69               	subwf	___fltol@exp1^0,f,c
  4733   00209A  BE69               	btfsc	___fltol@exp1^0,7,c
  4734   00209C  EF54  F010         	goto	u5130
  4735   0020A0  EF52  F010         	goto	u5131
  4736   0020A4                     u5131:
  4737   0020A4  EF6A  F010         	goto	l6454
  4738   0020A8                     u5130:
  4739   0020A8  5069               	movf	___fltol@exp1^0,w,c
  4740   0020AA  0A80               	xorlw	128
  4741   0020AC  0F97               	addlw	151
  4742   0020AE  B0D8               	btfsc	status,0,c
  4743   0020B0  EF5C  F010         	goto	u5141
  4744   0020B4  EF5E  F010         	goto	u5140
  4745   0020B8                     u5141:
  4746   0020B8  EF60  F010         	goto	l6450
  4747   0020BC                     u5140:
  4748   0020BC  EF23  F010         	goto	l6430
  4749   0020C0                     l6450:
  4750   0020C0  90D8               	bcf	status,0,c
  4751   0020C2  3263               	rrcf	(___fltol@f1+3)^0,f,c
  4752   0020C4  3262               	rrcf	(___fltol@f1+2)^0,f,c
  4753   0020C6  3261               	rrcf	(___fltol@f1+1)^0,f,c
  4754   0020C8  3260               	rrcf	___fltol@f1^0,f,c
  4755   0020CA  3E69               	incfsz	___fltol@exp1^0,f,c
  4756   0020CC  EF60  F010         	goto	l6450
  4757   0020D0  EF82  F010         	goto	l6464
  4758   0020D4                     l6454:
  4759   0020D4  0E1F               	movlw	31
  4760   0020D6  6469               	cpfsgt	___fltol@exp1^0,c
  4761   0020D8  EF70  F010         	goto	u5151
  4762   0020DC  EF72  F010         	goto	u5150
  4763   0020E0                     u5151:
  4764   0020E0  EF7A  F010         	goto	l6462
  4765   0020E4                     u5150:
  4766   0020E4  EF23  F010         	goto	l6430
  4767   0020E8                     l6460:
  4768   0020E8  90D8               	bcf	status,0,c
  4769   0020EA  3660               	rlcf	___fltol@f1^0,f,c
  4770   0020EC  3661               	rlcf	(___fltol@f1+1)^0,f,c
  4771   0020EE  3662               	rlcf	(___fltol@f1+2)^0,f,c
  4772   0020F0  3663               	rlcf	(___fltol@f1+3)^0,f,c
  4773   0020F2  0669               	decf	___fltol@exp1^0,f,c
  4774   0020F4                     l6462:
  4775   0020F4  5069               	movf	___fltol@exp1^0,w,c
  4776   0020F6  A4D8               	btfss	status,2,c
  4777   0020F8  EF80  F010         	goto	u5161
  4778   0020FC  EF82  F010         	goto	u5160
  4779   002100                     u5161:
  4780   002100  EF74  F010         	goto	l6460
  4781   002104                     u5160:
  4782   002104                     l6464:
  4783   002104  5068               	movf	___fltol@sign1^0,w,c
  4784   002106  B4D8               	btfsc	status,2,c
  4785   002108  EF88  F010         	goto	u5171
  4786   00210C  EF8A  F010         	goto	u5170
  4787   002110                     u5171:
  4788   002110  EF92  F010         	goto	l6468
  4789   002114                     u5170:
  4790   002114  1E63               	comf	(___fltol@f1+3)^0,f,c
  4791   002116  1E62               	comf	(___fltol@f1+2)^0,f,c
  4792   002118  1E61               	comf	(___fltol@f1+1)^0,f,c
  4793   00211A  6C60               	negf	___fltol@f1^0,c
  4794   00211C  0E00               	movlw	0
  4795   00211E  2261               	addwfc	(___fltol@f1+1)^0,f,c
  4796   002120  2262               	addwfc	(___fltol@f1+2)^0,f,c
  4797   002122  2263               	addwfc	(___fltol@f1+3)^0,f,c
  4798   002124                     l6468:
  4799   002124  C060  F060         	movff	___fltol@f1,?___fltol
  4800   002128  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  4801   00212C  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  4802   002130  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  4803   002134                     l2051:
  4804   002134  0012               	return		;funcret
  4805   002136                     __end_of___fltol:
  4806                           	callstack 0
  4807                           
  4808 ;; *************** function ___flmul *****************
  4809 ;; Defined at:
  4810 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;  b               4   15[COMRAM] long 
  4813 ;;  a               4   19[COMRAM] long 
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;  prod            4   34[COMRAM] struct .
  4816 ;;  grs             4   28[COMRAM] unsigned long 
  4817 ;;  temp            2   38[COMRAM] struct .
  4818 ;;  bexp            1   33[COMRAM] unsigned char 
  4819 ;;  aexp            1   32[COMRAM] unsigned char 
  4820 ;;  sign            1   27[COMRAM] unsigned char 
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  4   15[COMRAM] unsigned char 
  4823 ;; Registers used:
  4824 ;;		wreg, status,2, status,0, prodl, prodh
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4830 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;Total ram usage:       25 bytes
  4835 ;; Hardware stack levels used: 1
  4836 ;; Hardware stack levels required when called: 2
  4837 ;; This function calls:
  4838 ;;		Nothing
  4839 ;; This function is called by:
  4840 ;;		_main
  4841 ;;		_CCP_PWM_Set_Duty
  4842 ;;		_CCP_PWM_Mode_Config
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text31
  4847   001034                     __ptext31:
  4848                           	callstack 0
  4849   001034                     ___flmul:
  4850                           	callstack 28
  4851   001034  504A               	movf	(___flmul@b+3)^0,w,c
  4852   001036  0B80               	andlw	128
  4853   001038  6E53               	movwf	___flmul@sign^0,c
  4854   00103A  504A               	movf	(___flmul@b+3)^0,w,c
  4855   00103C  244A               	addwf	(___flmul@b+3)^0,w,c
  4856   00103E  6E59               	movwf	___flmul@bexp^0,c
  4857   001040  AE49               	btfss	(___flmul@b+2)^0,7,c
  4858   001042  EF25  F008         	goto	u4921
  4859   001046  EF27  F008         	goto	u4920
  4860   00104A                     u4921:
  4861   00104A  EF28  F008         	goto	l6304
  4862   00104E                     u4920:
  4863   00104E  8059               	bsf	___flmul@bexp^0,0,c
  4864   001050                     l6304:
  4865   001050  5059               	movf	___flmul@bexp^0,w,c
  4866   001052  B4D8               	btfsc	status,2,c
  4867   001054  EF2E  F008         	goto	u4931
  4868   001058  EF30  F008         	goto	u4930
  4869   00105C                     u4931:
  4870   00105C  EF43  F008         	goto	l6312
  4871   001060                     u4930:
  4872   001060  2859               	incf	___flmul@bexp^0,w,c
  4873   001062  A4D8               	btfss	status,2,c
  4874   001064  EF36  F008         	goto	u4941
  4875   001068  EF38  F008         	goto	u4940
  4876   00106C                     u4941:
  4877   00106C  EF40  F008         	goto	l6310
  4878   001070                     u4940:
  4879   001070  0E00               	movlw	0
  4880   001072  6E47               	movwf	___flmul@b^0,c
  4881   001074  0E00               	movlw	0
  4882   001076  6E48               	movwf	(___flmul@b+1)^0,c
  4883   001078  0E00               	movlw	0
  4884   00107A  6E49               	movwf	(___flmul@b+2)^0,c
  4885   00107C  0E00               	movlw	0
  4886   00107E  6E4A               	movwf	(___flmul@b+3)^0,c
  4887   001080                     l6310:
  4888   001080  8E49               	bsf	(___flmul@b+2)^0,7,c
  4889   001082  EF4B  F008         	goto	l6314
  4890   001086                     l6312:
  4891   001086  0E00               	movlw	0
  4892   001088  6E47               	movwf	___flmul@b^0,c
  4893   00108A  0E00               	movlw	0
  4894   00108C  6E48               	movwf	(___flmul@b+1)^0,c
  4895   00108E  0E00               	movlw	0
  4896   001090  6E49               	movwf	(___flmul@b+2)^0,c
  4897   001092  0E00               	movlw	0
  4898   001094  6E4A               	movwf	(___flmul@b+3)^0,c
  4899   001096                     l6314:
  4900   001096  504E               	movf	(___flmul@a+3)^0,w,c
  4901   001098  0B80               	andlw	128
  4902   00109A  1A53               	xorwf	___flmul@sign^0,f,c
  4903   00109C  504E               	movf	(___flmul@a+3)^0,w,c
  4904   00109E  244E               	addwf	(___flmul@a+3)^0,w,c
  4905   0010A0  6E58               	movwf	___flmul@aexp^0,c
  4906   0010A2  AE4D               	btfss	(___flmul@a+2)^0,7,c
  4907   0010A4  EF56  F008         	goto	u4951
  4908   0010A8  EF58  F008         	goto	u4950
  4909   0010AC                     u4951:
  4910   0010AC  EF59  F008         	goto	l6322
  4911   0010B0                     u4950:
  4912   0010B0  8058               	bsf	___flmul@aexp^0,0,c
  4913   0010B2                     l6322:
  4914   0010B2  5058               	movf	___flmul@aexp^0,w,c
  4915   0010B4  B4D8               	btfsc	status,2,c
  4916   0010B6  EF5F  F008         	goto	u4961
  4917   0010BA  EF61  F008         	goto	u4960
  4918   0010BE                     u4961:
  4919   0010BE  EF74  F008         	goto	l6330
  4920   0010C2                     u4960:
  4921   0010C2  2858               	incf	___flmul@aexp^0,w,c
  4922   0010C4  A4D8               	btfss	status,2,c
  4923   0010C6  EF67  F008         	goto	u4971
  4924   0010CA  EF69  F008         	goto	u4970
  4925   0010CE                     u4971:
  4926   0010CE  EF71  F008         	goto	l6328
  4927   0010D2                     u4970:
  4928   0010D2  0E00               	movlw	0
  4929   0010D4  6E4B               	movwf	___flmul@a^0,c
  4930   0010D6  0E00               	movlw	0
  4931   0010D8  6E4C               	movwf	(___flmul@a+1)^0,c
  4932   0010DA  0E00               	movlw	0
  4933   0010DC  6E4D               	movwf	(___flmul@a+2)^0,c
  4934   0010DE  0E00               	movlw	0
  4935   0010E0  6E4E               	movwf	(___flmul@a+3)^0,c
  4936   0010E2                     l6328:
  4937   0010E2  8E4D               	bsf	(___flmul@a+2)^0,7,c
  4938   0010E4  EF7C  F008         	goto	l2368
  4939   0010E8                     l6330:
  4940   0010E8  0E00               	movlw	0
  4941   0010EA  6E4B               	movwf	___flmul@a^0,c
  4942   0010EC  0E00               	movlw	0
  4943   0010EE  6E4C               	movwf	(___flmul@a+1)^0,c
  4944   0010F0  0E00               	movlw	0
  4945   0010F2  6E4D               	movwf	(___flmul@a+2)^0,c
  4946   0010F4  0E00               	movlw	0
  4947   0010F6  6E4E               	movwf	(___flmul@a+3)^0,c
  4948   0010F8                     l2368:
  4949   0010F8  5058               	movf	___flmul@aexp^0,w,c
  4950   0010FA  B4D8               	btfsc	status,2,c
  4951   0010FC  EF82  F008         	goto	u4981
  4952   001100  EF84  F008         	goto	u4980
  4953   001104                     u4981:
  4954   001104  EF8C  F008         	goto	l6334
  4955   001108                     u4980:
  4956   001108  5059               	movf	___flmul@bexp^0,w,c
  4957   00110A  A4D8               	btfss	status,2,c
  4958   00110C  EF8A  F008         	goto	u4991
  4959   001110  EF8C  F008         	goto	u4990
  4960   001114                     u4991:
  4961   001114  EF96  F008         	goto	l6338
  4962   001118                     u4990:
  4963   001118                     l6334:
  4964   001118  0E00               	movlw	0
  4965   00111A  6E47               	movwf	?___flmul^0,c
  4966   00111C  0E00               	movlw	0
  4967   00111E  6E48               	movwf	(?___flmul+1)^0,c
  4968   001120  0E00               	movlw	0
  4969   001122  6E49               	movwf	(?___flmul+2)^0,c
  4970   001124  0E00               	movlw	0
  4971   001126  6E4A               	movwf	(?___flmul+3)^0,c
  4972   001128  EF2E  F00A         	goto	l2372
  4973   00112C                     l6338:
  4974   00112C  504D               	movf	(___flmul@a+2)^0,w,c
  4975   00112E  0247               	mulwf	___flmul@b^0,c
  4976   001130  CFF3 F05E          	movff	prodl,___flmul@temp
  4977   001134  CFF4 F05F          	movff	prodh,___flmul@temp+1
  4978   001138  505E               	movf	___flmul@temp^0,w,c
  4979   00113A  6E54               	movwf	___flmul@grs^0,c
  4980   00113C  6A55               	clrf	(___flmul@grs+1)^0,c
  4981   00113E  6A56               	clrf	(___flmul@grs+2)^0,c
  4982   001140  6A57               	clrf	(___flmul@grs+3)^0,c
  4983   001142  505F               	movf	(___flmul@temp+1)^0,w,c
  4984   001144  6E5A               	movwf	___flmul@prod^0,c
  4985   001146  6A5B               	clrf	(___flmul@prod+1)^0,c
  4986   001148  6A5C               	clrf	(___flmul@prod+2)^0,c
  4987   00114A  6A5D               	clrf	(___flmul@prod+3)^0,c
  4988   00114C  504C               	movf	(___flmul@a+1)^0,w,c
  4989   00114E  0248               	mulwf	(___flmul@b+1)^0,c
  4990   001150  CFF3 F05E          	movff	prodl,___flmul@temp
  4991   001154  CFF4 F05F          	movff	prodh,___flmul@temp+1
  4992   001158  505E               	movf	___flmul@temp^0,w,c
  4993   00115A  2654               	addwf	___flmul@grs^0,f,c
  4994   00115C  0E00               	movlw	0
  4995   00115E  2255               	addwfc	(___flmul@grs+1)^0,f,c
  4996   001160  2256               	addwfc	(___flmul@grs+2)^0,f,c
  4997   001162  2257               	addwfc	(___flmul@grs+3)^0,f,c
  4998   001164  505F               	movf	(___flmul@temp+1)^0,w,c
  4999   001166  265A               	addwf	___flmul@prod^0,f,c
  5000   001168  0E00               	movlw	0
  5001   00116A  225B               	addwfc	(___flmul@prod+1)^0,f,c
  5002   00116C  225C               	addwfc	(___flmul@prod+2)^0,f,c
  5003   00116E  225D               	addwfc	(___flmul@prod+3)^0,f,c
  5004   001170  504B               	movf	___flmul@a^0,w,c
  5005   001172  0249               	mulwf	(___flmul@b+2)^0,c
  5006   001174  CFF3 F05E          	movff	prodl,___flmul@temp
  5007   001178  CFF4 F05F          	movff	prodh,___flmul@temp+1
  5008   00117C  505E               	movf	___flmul@temp^0,w,c
  5009   00117E  2654               	addwf	___flmul@grs^0,f,c
  5010   001180  0E00               	movlw	0
  5011   001182  2255               	addwfc	(___flmul@grs+1)^0,f,c
  5012   001184  2256               	addwfc	(___flmul@grs+2)^0,f,c
  5013   001186  2257               	addwfc	(___flmul@grs+3)^0,f,c
  5014   001188  505F               	movf	(___flmul@temp+1)^0,w,c
  5015   00118A  265A               	addwf	___flmul@prod^0,f,c
  5016   00118C  0E00               	movlw	0
  5017   00118E  225B               	addwfc	(___flmul@prod+1)^0,f,c
  5018   001190  225C               	addwfc	(___flmul@prod+2)^0,f,c
  5019   001192  225D               	addwfc	(___flmul@prod+3)^0,f,c
  5020   001194  C056  F057         	movff	___flmul@grs+2,___flmul@grs+3
  5021   001198  C055  F056         	movff	___flmul@grs+1,___flmul@grs+2
  5022   00119C  C054  F055         	movff	___flmul@grs,___flmul@grs+1
  5023   0011A0  6A54               	clrf	___flmul@grs^0,c
  5024   0011A2  504B               	movf	___flmul@a^0,w,c
  5025   0011A4  0248               	mulwf	(___flmul@b+1)^0,c
  5026   0011A6  CFF3 F05E          	movff	prodl,___flmul@temp
  5027   0011AA  CFF4 F05F          	movff	prodh,___flmul@temp+1
  5028   0011AE  505E               	movf	___flmul@temp^0,w,c
  5029   0011B0  2654               	addwf	___flmul@grs^0,f,c
  5030   0011B2  505F               	movf	(___flmul@temp+1)^0,w,c
  5031   0011B4  2255               	addwfc	(___flmul@grs+1)^0,f,c
  5032   0011B6  0E00               	movlw	0
  5033   0011B8  2256               	addwfc	(___flmul@grs+2)^0,f,c
  5034   0011BA  0E00               	movlw	0
  5035   0011BC  2257               	addwfc	(___flmul@grs+3)^0,f,c
  5036   0011BE  504C               	movf	(___flmul@a+1)^0,w,c
  5037   0011C0  0247               	mulwf	___flmul@b^0,c
  5038   0011C2  CFF3 F05E          	movff	prodl,___flmul@temp
  5039   0011C6  CFF4 F05F          	movff	prodh,___flmul@temp+1
  5040   0011CA  505E               	movf	___flmul@temp^0,w,c
  5041   0011CC  2654               	addwf	___flmul@grs^0,f,c
  5042   0011CE  505F               	movf	(___flmul@temp+1)^0,w,c
  5043   0011D0  2255               	addwfc	(___flmul@grs+1)^0,f,c
  5044   0011D2  0E00               	movlw	0
  5045   0011D4  2256               	addwfc	(___flmul@grs+2)^0,f,c
  5046   0011D6  0E00               	movlw	0
  5047   0011D8  2257               	addwfc	(___flmul@grs+3)^0,f,c
  5048   0011DA  C056  F057         	movff	___flmul@grs+2,___flmul@grs+3
  5049   0011DE  C055  F056         	movff	___flmul@grs+1,___flmul@grs+2
  5050   0011E2  C054  F055         	movff	___flmul@grs,___flmul@grs+1
  5051   0011E6  6A54               	clrf	___flmul@grs^0,c
  5052   0011E8  504B               	movf	___flmul@a^0,w,c
  5053   0011EA  0247               	mulwf	___flmul@b^0,c
  5054   0011EC  CFF3 F05E          	movff	prodl,___flmul@temp
  5055   0011F0  CFF4 F05F          	movff	prodh,___flmul@temp+1
  5056   0011F4  505E               	movf	___flmul@temp^0,w,c
  5057   0011F6  2654               	addwf	___flmul@grs^0,f,c
  5058   0011F8  505F               	movf	(___flmul@temp+1)^0,w,c
  5059   0011FA  2255               	addwfc	(___flmul@grs+1)^0,f,c
  5060   0011FC  0E00               	movlw	0
  5061   0011FE  2256               	addwfc	(___flmul@grs+2)^0,f,c
  5062   001200  0E00               	movlw	0
  5063   001202  2257               	addwfc	(___flmul@grs+3)^0,f,c
  5064   001204  504D               	movf	(___flmul@a+2)^0,w,c
  5065   001206  0248               	mulwf	(___flmul@b+1)^0,c
  5066   001208  CFF3 F05E          	movff	prodl,___flmul@temp
  5067   00120C  CFF4 F05F          	movff	prodh,___flmul@temp+1
  5068   001210  505E               	movf	___flmul@temp^0,w,c
  5069   001212  265A               	addwf	___flmul@prod^0,f,c
  5070   001214  505F               	movf	(___flmul@temp+1)^0,w,c
  5071   001216  225B               	addwfc	(___flmul@prod+1)^0,f,c
  5072   001218  0E00               	movlw	0
  5073   00121A  225C               	addwfc	(___flmul@prod+2)^0,f,c
  5074   00121C  0E00               	movlw	0
  5075   00121E  225D               	addwfc	(___flmul@prod+3)^0,f,c
  5076   001220  504C               	movf	(___flmul@a+1)^0,w,c
  5077   001222  0249               	mulwf	(___flmul@b+2)^0,c
  5078   001224  CFF3 F05E          	movff	prodl,___flmul@temp
  5079   001228  CFF4 F05F          	movff	prodh,___flmul@temp+1
  5080   00122C  505E               	movf	___flmul@temp^0,w,c
  5081   00122E  265A               	addwf	___flmul@prod^0,f,c
  5082   001230  505F               	movf	(___flmul@temp+1)^0,w,c
  5083   001232  225B               	addwfc	(___flmul@prod+1)^0,f,c
  5084   001234  0E00               	movlw	0
  5085   001236  225C               	addwfc	(___flmul@prod+2)^0,f,c
  5086   001238  0E00               	movlw	0
  5087   00123A  225D               	addwfc	(___flmul@prod+3)^0,f,c
  5088   00123C  504D               	movf	(___flmul@a+2)^0,w,c
  5089   00123E  0249               	mulwf	(___flmul@b+2)^0,c
  5090   001240  CFF3 F05E          	movff	prodl,___flmul@temp
  5091   001244  CFF4 F05F          	movff	prodh,___flmul@temp+1
  5092   001248  505E               	movf	___flmul@temp^0,w,c
  5093   00124A  6E4F               	movwf	??___flmul^0,c
  5094   00124C  505F               	movf	(___flmul@temp+1)^0,w,c
  5095   00124E  6E50               	movwf	(??___flmul+1)^0,c
  5096   001250  6A51               	clrf	(??___flmul+2)^0,c
  5097   001252  6A52               	clrf	(??___flmul+3)^0,c
  5098   001254  C051  F052         	movff	??___flmul+2,??___flmul+3
  5099   001258  C050  F051         	movff	??___flmul+1,??___flmul+2
  5100   00125C  C04F  F050         	movff	??___flmul,??___flmul+1
  5101   001260  6A4F               	clrf	??___flmul^0,c
  5102   001262  504F               	movf	??___flmul^0,w,c
  5103   001264  265A               	addwf	___flmul@prod^0,f,c
  5104   001266  5050               	movf	(??___flmul+1)^0,w,c
  5105   001268  225B               	addwfc	(___flmul@prod+1)^0,f,c
  5106   00126A  5051               	movf	(??___flmul+2)^0,w,c
  5107   00126C  225C               	addwfc	(___flmul@prod+2)^0,f,c
  5108   00126E  5052               	movf	(??___flmul+3)^0,w,c
  5109   001270  225D               	addwfc	(___flmul@prod+3)^0,f,c
  5110   001272  C054  F04F         	movff	___flmul@grs,??___flmul
  5111   001276  C055  F050         	movff	___flmul@grs+1,??___flmul+1
  5112   00127A  C056  F051         	movff	___flmul@grs+2,??___flmul+2
  5113   00127E  C057  F052         	movff	___flmul@grs+3,??___flmul+3
  5114   001282  0E19               	movlw	25
  5115   001284  EF49  F009         	goto	u5000
  5116   001288                     u5005:
  5117   001288  90D8               	bcf	status,0,c
  5118   00128A  3252               	rrcf	(??___flmul+3)^0,f,c
  5119   00128C  3251               	rrcf	(??___flmul+2)^0,f,c
  5120   00128E  3250               	rrcf	(??___flmul+1)^0,f,c
  5121   001290  324F               	rrcf	??___flmul^0,f,c
  5122   001292                     u5000:
  5123   001292  2EE8               	decfsz	wreg,f,c
  5124   001294  EF44  F009         	goto	u5005
  5125   001298  504F               	movf	??___flmul^0,w,c
  5126   00129A  265A               	addwf	___flmul@prod^0,f,c
  5127   00129C  5050               	movf	(??___flmul+1)^0,w,c
  5128   00129E  225B               	addwfc	(___flmul@prod+1)^0,f,c
  5129   0012A0  5051               	movf	(??___flmul+2)^0,w,c
  5130   0012A2  225C               	addwfc	(___flmul@prod+2)^0,f,c
  5131   0012A4  5052               	movf	(??___flmul+3)^0,w,c
  5132   0012A6  225D               	addwfc	(___flmul@prod+3)^0,f,c
  5133   0012A8  C056  F057         	movff	___flmul@grs+2,___flmul@grs+3
  5134   0012AC  C055  F056         	movff	___flmul@grs+1,___flmul@grs+2
  5135   0012B0  C054  F055         	movff	___flmul@grs,___flmul@grs+1
  5136   0012B4  6A54               	clrf	___flmul@grs^0,c
  5137   0012B6  5058               	movf	___flmul@aexp^0,w,c
  5138   0012B8  C059  F04F         	movff	___flmul@bexp,??___flmul
  5139   0012BC  6A50               	clrf	(??___flmul+1)^0,c
  5140   0012BE  264F               	addwf	??___flmul^0,f,c
  5141   0012C0  0E00               	movlw	0
  5142   0012C2  2250               	addwfc	(??___flmul+1)^0,f,c
  5143   0012C4  0E82               	movlw	130
  5144   0012C6  244F               	addwf	??___flmul^0,w,c
  5145   0012C8  6E5E               	movwf	___flmul@temp^0,c
  5146   0012CA  0EFF               	movlw	255
  5147   0012CC  2050               	addwfc	(??___flmul+1)^0,w,c
  5148   0012CE  6E5F               	movwf	(___flmul@temp+1)^0,c
  5149   0012D0  EF7F  F009         	goto	l6386
  5150   0012D4                     l6380:
  5151   0012D4  90D8               	bcf	status,0,c
  5152   0012D6  365A               	rlcf	___flmul@prod^0,f,c
  5153   0012D8  365B               	rlcf	(___flmul@prod+1)^0,f,c
  5154   0012DA  365C               	rlcf	(___flmul@prod+2)^0,f,c
  5155   0012DC  365D               	rlcf	(___flmul@prod+3)^0,f,c
  5156   0012DE  AE57               	btfss	(___flmul@grs+3)^0,7,c
  5157   0012E0  EF74  F009         	goto	u5011
  5158   0012E4  EF76  F009         	goto	u5010
  5159   0012E8                     u5011:
  5160   0012E8  EF77  F009         	goto	l2375
  5161   0012EC                     u5010:
  5162   0012EC  805A               	bsf	___flmul@prod^0,0,c
  5163   0012EE                     l2375:
  5164   0012EE  90D8               	bcf	status,0,c
  5165   0012F0  3654               	rlcf	___flmul@grs^0,f,c
  5166   0012F2  3655               	rlcf	(___flmul@grs+1)^0,f,c
  5167   0012F4  3656               	rlcf	(___flmul@grs+2)^0,f,c
  5168   0012F6  3657               	rlcf	(___flmul@grs+3)^0,f,c
  5169   0012F8  065E               	decf	___flmul@temp^0,f,c
  5170   0012FA  A0D8               	btfss	status,0,c
  5171   0012FC  065F               	decf	(___flmul@temp+1)^0,f,c
  5172   0012FE                     l6386:
  5173   0012FE  AE5C               	btfss	(___flmul@prod+2)^0,7,c
  5174   001300  EF84  F009         	goto	u5021
  5175   001304  EF86  F009         	goto	u5020
  5176   001308                     u5021:
  5177   001308  EF6A  F009         	goto	l6380
  5178   00130C                     u5020:
  5179   00130C  0E00               	movlw	0
  5180   00130E  6E58               	movwf	___flmul@aexp^0,c
  5181   001310  AE57               	btfss	(___flmul@grs+3)^0,7,c
  5182   001312  EF8D  F009         	goto	u5031
  5183   001316  EF8F  F009         	goto	u5030
  5184   00131A                     u5031:
  5185   00131A  EFB3  F009         	goto	l2377
  5186   00131E                     u5030:
  5187   00131E  0EFF               	movlw	255
  5188   001320  1454               	andwf	___flmul@grs^0,w,c
  5189   001322  6E4F               	movwf	??___flmul^0,c
  5190   001324  0EFF               	movlw	255
  5191   001326  1455               	andwf	(___flmul@grs+1)^0,w,c
  5192   001328  6E50               	movwf	(??___flmul+1)^0,c
  5193   00132A  0EFF               	movlw	255
  5194   00132C  1456               	andwf	(___flmul@grs+2)^0,w,c
  5195   00132E  6E51               	movwf	(??___flmul+2)^0,c
  5196   001330  0E7F               	movlw	127
  5197   001332  1457               	andwf	(___flmul@grs+3)^0,w,c
  5198   001334  6E52               	movwf	(??___flmul+3)^0,c
  5199   001336  504F               	movf	??___flmul^0,w,c
  5200   001338  1050               	iorwf	(??___flmul+1)^0,w,c
  5201   00133A  1051               	iorwf	(??___flmul+2)^0,w,c
  5202   00133C  1052               	iorwf	(??___flmul+3)^0,w,c
  5203   00133E  B4D8               	btfsc	status,2,c
  5204   001340  EFA4  F009         	goto	u5041
  5205   001344  EFA6  F009         	goto	u5040
  5206   001348                     u5041:
  5207   001348  EFAA  F009         	goto	l2378
  5208   00134C                     u5040:
  5209   00134C                     l6394:
  5210   00134C  0E01               	movlw	1
  5211   00134E  6E58               	movwf	___flmul@aexp^0,c
  5212   001350  EFB3  F009         	goto	l2377
  5213   001354                     l2378:
  5214   001354  A05A               	btfss	___flmul@prod^0,0,c
  5215   001356  EFAF  F009         	goto	u5051
  5216   00135A  EFB1  F009         	goto	u5050
  5217   00135E                     u5051:
  5218   00135E  EFB3  F009         	goto	l2377
  5219   001362                     u5050:
  5220   001362  EFA6  F009         	goto	l6394
  5221   001366                     l2377:
  5222   001366  5058               	movf	___flmul@aexp^0,w,c
  5223   001368  B4D8               	btfsc	status,2,c
  5224   00136A  EFB9  F009         	goto	u5061
  5225   00136E  EFBB  F009         	goto	u5060
  5226   001372                     u5061:
  5227   001372  EFDF  F009         	goto	l6406
  5228   001376                     u5060:
  5229   001376  0E01               	movlw	1
  5230   001378  265A               	addwf	___flmul@prod^0,f,c
  5231   00137A  0E00               	movlw	0
  5232   00137C  225B               	addwfc	(___flmul@prod+1)^0,f,c
  5233   00137E  225C               	addwfc	(___flmul@prod+2)^0,f,c
  5234   001380  225D               	addwfc	(___flmul@prod+3)^0,f,c
  5235   001382  A05D               	btfss	(___flmul@prod+3)^0,0,c
  5236   001384  EFC6  F009         	goto	u5071
  5237   001388  EFC8  F009         	goto	u5070
  5238   00138C                     u5071:
  5239   00138C  EFDF  F009         	goto	l6406
  5240   001390                     u5070:
  5241   001390  C05A  F04F         	movff	___flmul@prod,??___flmul
  5242   001394  C05B  F050         	movff	___flmul@prod+1,??___flmul+1
  5243   001398  C05C  F051         	movff	___flmul@prod+2,??___flmul+2
  5244   00139C  C05D  F052         	movff	___flmul@prod+3,??___flmul+3
  5245   0013A0  3452               	rlcf	(??___flmul+3)^0,w,c
  5246   0013A2  3252               	rrcf	(??___flmul+3)^0,f,c
  5247   0013A4  3251               	rrcf	(??___flmul+2)^0,f,c
  5248   0013A6  3250               	rrcf	(??___flmul+1)^0,f,c
  5249   0013A8  324F               	rrcf	??___flmul^0,f,c
  5250   0013AA  C04F  F05A         	movff	??___flmul,___flmul@prod
  5251   0013AE  C050  F05B         	movff	??___flmul+1,___flmul@prod+1
  5252   0013B2  C051  F05C         	movff	??___flmul+2,___flmul@prod+2
  5253   0013B6  C052  F05D         	movff	??___flmul+3,___flmul@prod+3
  5254   0013BA  4A5E               	infsnz	___flmul@temp^0,f,c
  5255   0013BC  2A5F               	incf	(___flmul@temp+1)^0,f,c
  5256   0013BE                     l6406:
  5257   0013BE  BE5F               	btfsc	(___flmul@temp+1)^0,7,c
  5258   0013C0  EFEA  F009         	goto	u5081
  5259   0013C4  505F               	movf	(___flmul@temp+1)^0,w,c
  5260   0013C6  E108               	bnz	u5080
  5261   0013C8  285E               	incf	___flmul@temp^0,w,c
  5262   0013CA  A0D8               	btfss	status,0,c
  5263   0013CC  EFEA  F009         	goto	u5081
  5264   0013D0  EFEC  F009         	goto	u5080
  5265   0013D4                     u5081:
  5266   0013D4  EFF6  F009         	goto	l6410
  5267   0013D8                     u5080:
  5268   0013D8  0E00               	movlw	0
  5269   0013DA  6E5A               	movwf	___flmul@prod^0,c
  5270   0013DC  0E00               	movlw	0
  5271   0013DE  6E5B               	movwf	(___flmul@prod+1)^0,c
  5272   0013E0  0E80               	movlw	128
  5273   0013E2  6E5C               	movwf	(___flmul@prod+2)^0,c
  5274   0013E4  0E7F               	movlw	127
  5275   0013E6  6E5D               	movwf	(___flmul@prod+3)^0,c
  5276   0013E8  EF24  F00A         	goto	l6422
  5277   0013EC                     l6410:
  5278   0013EC  BE5F               	btfsc	(___flmul@temp+1)^0,7,c
  5279   0013EE  EF03  F00A         	goto	u5090
  5280   0013F2  505F               	movf	(___flmul@temp+1)^0,w,c
  5281   0013F4  E106               	bnz	u5091
  5282   0013F6  045E               	decf	___flmul@temp^0,w,c
  5283   0013F8  B0D8               	btfsc	status,0,c
  5284   0013FA  EF01  F00A         	goto	u5091
  5285   0013FE  EF03  F00A         	goto	u5090
  5286   001402                     u5091:
  5287   001402  EF0F  F00A         	goto	l2385
  5288   001406                     u5090:
  5289   001406  0E00               	movlw	0
  5290   001408  6E5A               	movwf	___flmul@prod^0,c
  5291   00140A  0E00               	movlw	0
  5292   00140C  6E5B               	movwf	(___flmul@prod+1)^0,c
  5293   00140E  0E00               	movlw	0
  5294   001410  6E5C               	movwf	(___flmul@prod+2)^0,c
  5295   001412  0E00               	movlw	0
  5296   001414  6E5D               	movwf	(___flmul@prod+3)^0,c
  5297   001416  0E00               	movlw	0
  5298   001418  6E53               	movwf	___flmul@sign^0,c
  5299   00141A  EF24  F00A         	goto	l6422
  5300   00141E                     l2385:
  5301   00141E  C05E  F059         	movff	___flmul@temp,___flmul@bexp
  5302   001422  0EFF               	movlw	255
  5303   001424  165A               	andwf	___flmul@prod^0,f,c
  5304   001426  0EFF               	movlw	255
  5305   001428  165B               	andwf	(___flmul@prod+1)^0,f,c
  5306   00142A  0E7F               	movlw	127
  5307   00142C  165C               	andwf	(___flmul@prod+2)^0,f,c
  5308   00142E  0E00               	movlw	0
  5309   001430  165D               	andwf	(___flmul@prod+3)^0,f,c
  5310   001432  A059               	btfss	___flmul@bexp^0,0,c
  5311   001434  EF1E  F00A         	goto	u5101
  5312   001438  EF20  F00A         	goto	u5100
  5313   00143C                     u5101:
  5314   00143C  EF21  F00A         	goto	l6420
  5315   001440                     u5100:
  5316   001440  8E5C               	bsf	(___flmul@prod+2)^0,7,c
  5317   001442                     l6420:
  5318   001442  90D8               	bcf	status,0,c
  5319   001444  3059               	rrcf	___flmul@bexp^0,w,c
  5320   001446  6E5D               	movwf	(___flmul@prod+3)^0,c
  5321   001448                     l6422:
  5322   001448  5053               	movf	___flmul@sign^0,w,c
  5323   00144A  125D               	iorwf	(___flmul@prod+3)^0,f,c
  5324   00144C  C05A  F047         	movff	___flmul@prod,?___flmul
  5325   001450  C05B  F048         	movff	___flmul@prod+1,?___flmul+1
  5326   001454  C05C  F049         	movff	___flmul@prod+2,?___flmul+2
  5327   001458  C05D  F04A         	movff	___flmul@prod+3,?___flmul+3
  5328   00145C                     l2372:
  5329   00145C  0012               	return		;funcret
  5330   00145E                     __end_of___flmul:
  5331                           	callstack 0
  5332                           
  5333 ;; *************** function _ADC_Init *****************
  5334 ;; Defined at:
  5335 ;;		line 29 in file "MCAL_Layer/ADC/hal_adc.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;  _adc            1    4[COMRAM] PTR const struct .
  5338 ;;		 -> adc_1(7), 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  ret             1    6[COMRAM] unsigned char 
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      unsigned char 
  5343 ;; Registers used:
  5344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5350 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;Total ram usage:        3 bytes
  5355 ;; Hardware stack levels used: 1
  5356 ;; Hardware stack levels required when called: 3
  5357 ;; This function calls:
  5358 ;;		_adc_input_channel_port_configure
  5359 ;;		_configure_voltage_reference
  5360 ;;		_select_result_format
  5361 ;; This function is called by:
  5362 ;;		_main
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text32
  5367   0025DE                     __ptext32:
  5368                           	callstack 0
  5369   0025DE                     _ADC_Init:
  5370                           	callstack 27
  5371   0025DE                     
  5372                           ;MCAL_Layer/ADC/hal_adc.c: 31:     if(((void*)0) == _adc){
  5373   0025DE  503C               	movf	ADC_Init@_adc^0,w,c
  5374   0025E0  A4D8               	btfss	status,2,c
  5375   0025E2  EFF5  F012         	goto	u4881
  5376   0025E6  EFF7  F012         	goto	u4880
  5377   0025EA                     u4881:
  5378   0025EA  EFFB  F012         	goto	l380
  5379   0025EE                     u4880:
  5380   0025EE                     
  5381                           ;MCAL_Layer/ADC/hal_adc.c: 32:         ret = (Std_ReturnType)0x00;
  5382   0025EE  0E00               	movlw	0
  5383   0025F0  6E3E               	movwf	ADC_Init@ret^0,c
  5384                           
  5385                           ;MCAL_Layer/ADC/hal_adc.c: 33:     }
  5386   0025F2  EF43  F013         	goto	l6246
  5387   0025F6                     l380:
  5388                           
  5389                           ;MCAL_Layer/ADC/hal_adc.c: 36:         (ADCON0bits.ADON = 0);
  5390   0025F6  90C2               	bcf	194,0,c	;volatile
  5391   0025F8                     
  5392                           ;MCAL_Layer/ADC/hal_adc.c: 38:         ADCON2bits.ACQT = _adc->acquisition_time;
  5393   0025F8  503C               	movf	ADC_Init@_adc^0,w,c
  5394   0025FA  6ED9               	movwf	fsr2l,c
  5395   0025FC  6ADA               	clrf	fsr2h,c
  5396   0025FE  0E03               	movlw	3
  5397   002600  26D9               	addwf	fsr2l,f,c
  5398   002602  50DF               	movf	indf2,w,c
  5399   002604  6E3D               	movwf	??_ADC_Init^0,c
  5400   002606  463D               	rlncf	??_ADC_Init^0,f,c
  5401   002608  463D               	rlncf	??_ADC_Init^0,f,c
  5402   00260A  463D               	rlncf	??_ADC_Init^0,f,c
  5403   00260C  50C0               	movf	192,w,c	;volatile
  5404   00260E  183D               	xorwf	??_ADC_Init^0,w,c
  5405   002610  0BC7               	andlw	-57
  5406   002612  183D               	xorwf	??_ADC_Init^0,w,c
  5407   002614  6EC0               	movwf	192,c	;volatile
  5408                           
  5409                           ;MCAL_Layer/ADC/hal_adc.c: 40:         ADCON2bits.ADCS = _adc->conversion_clock;
  5410   002616  503C               	movf	ADC_Init@_adc^0,w,c
  5411   002618  6ED9               	movwf	fsr2l,c
  5412   00261A  6ADA               	clrf	fsr2h,c
  5413   00261C  0E04               	movlw	4
  5414   00261E  26D9               	addwf	fsr2l,f,c
  5415   002620  50DF               	movf	indf2,w,c
  5416   002622  6E3D               	movwf	??_ADC_Init^0,c
  5417   002624  50C0               	movf	192,w,c	;volatile
  5418   002626  183D               	xorwf	??_ADC_Init^0,w,c
  5419   002628  0BF8               	andlw	-8
  5420   00262A  183D               	xorwf	??_ADC_Init^0,w,c
  5421   00262C  6EC0               	movwf	192,c	;volatile
  5422                           
  5423                           ;MCAL_Layer/ADC/hal_adc.c: 42:         ADCON0bits.CHS = _adc->adc_channel;
  5424   00262E  503C               	movf	ADC_Init@_adc^0,w,c
  5425   002630  6ED9               	movwf	fsr2l,c
  5426   002632  6ADA               	clrf	fsr2h,c
  5427   002634  0E05               	movlw	5
  5428   002636  26D9               	addwf	fsr2l,f,c
  5429   002638  50DF               	movf	indf2,w,c
  5430   00263A  6E3D               	movwf	??_ADC_Init^0,c
  5431   00263C  463D               	rlncf	??_ADC_Init^0,f,c
  5432   00263E  463D               	rlncf	??_ADC_Init^0,f,c
  5433   002640  50C2               	movf	194,w,c	;volatile
  5434   002642  183D               	xorwf	??_ADC_Init^0,w,c
  5435   002644  0BC3               	andlw	-61
  5436   002646  183D               	xorwf	??_ADC_Init^0,w,c
  5437   002648  6EC2               	movwf	194,c	;volatile
  5438   00264A                     
  5439                           ;MCAL_Layer/ADC/hal_adc.c: 43:         adc_input_channel_port_configure(_adc->adc_channe
      +                          l);
  5440   00264A  503C               	movf	ADC_Init@_adc^0,w,c
  5441   00264C  6ED9               	movwf	fsr2l,c
  5442   00264E  6ADA               	clrf	fsr2h,c
  5443   002650  0E05               	movlw	5
  5444   002652  26D9               	addwf	fsr2l,f,c
  5445   002654  50DF               	movf	indf2,w,c
  5446   002656  EC10  F011         	call	_adc_input_channel_port_configure
  5447   00265A                     
  5448                           ;MCAL_Layer/ADC/hal_adc.c: 46:         (INTCONbits.GIE = 1);
  5449   00265A  8EF2               	bsf	242,7,c	;volatile
  5450   00265C                     
  5451                           ;MCAL_Layer/ADC/hal_adc.c: 47:         (INTCONbits.PEIE = 1);
  5452   00265C  8CF2               	bsf	242,6,c	;volatile
  5453   00265E                     
  5454                           ;MCAL_Layer/ADC/hal_adc.c: 48:         (PIE1bits.ADIE = 1);
  5455   00265E  8C9D               	bsf	157,6,c	;volatile
  5456   002660                     
  5457                           ;MCAL_Layer/ADC/hal_adc.c: 49:         (PIR1bits.ADIF = 0);
  5458   002660  9C9E               	bcf	158,6,c	;volatile
  5459   002662                     
  5460                           ;MCAL_Layer/ADC/hal_adc.c: 61:         ADC_InterruptHandler = _adc->ADC_InterruptHandler
      +                          ;
  5461   002662  503C               	movf	ADC_Init@_adc^0,w,c
  5462   002664  6ED9               	movwf	fsr2l,c
  5463   002666  6ADA               	clrf	fsr2h,c
  5464   002668  CFDE F029          	movff	postinc2,_ADC_InterruptHandler
  5465   00266C  CFDD F02A          	movff	postdec2,_ADC_InterruptHandler+1
  5466   002670                     
  5467                           ;MCAL_Layer/ADC/hal_adc.c: 64:         select_result_format(_adc);
  5468   002670  C03C  F039         	movff	ADC_Init@_adc,select_result_format@_adc
  5469   002674  ECF1  F015         	call	_select_result_format	;wreg free
  5470   002678                     
  5471                           ;MCAL_Layer/ADC/hal_adc.c: 66:         configure_voltage_reference(_adc);
  5472   002678  C03C  F039         	movff	ADC_Init@_adc,configure_voltage_reference@_adc
  5473   00267C  ECAE  F015         	call	_configure_voltage_reference	;wreg free
  5474   002680                     
  5475                           ;MCAL_Layer/ADC/hal_adc.c: 68:         (ADCON0bits.ADON = 1);
  5476   002680  80C2               	bsf	194,0,c	;volatile
  5477   002682                     
  5478                           ;MCAL_Layer/ADC/hal_adc.c: 69:         ret = (Std_ReturnType)0x01;
  5479   002682  0E01               	movlw	1
  5480   002684  6E3E               	movwf	ADC_Init@ret^0,c
  5481   002686                     l6246:
  5482                           
  5483                           ;MCAL_Layer/ADC/hal_adc.c: 71:     return ret;
  5484   002686  503E               	movf	ADC_Init@ret^0,w,c
  5485   002688  0012               	return		;funcret
  5486   00268A                     __end_of_ADC_Init:
  5487                           	callstack 0
  5488                           
  5489 ;; *************** function _select_result_format *****************
  5490 ;; Defined at:
  5491 ;;		line 272 in file "MCAL_Layer/ADC/hal_adc.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  _adc            1    1[COMRAM] PTR const struct .
  5494 ;;		 -> adc_1(7), 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  1    wreg      void 
  5499 ;; Registers used:
  5500 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5506 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5510 ;;Total ram usage:        1 bytes
  5511 ;; Hardware stack levels used: 1
  5512 ;; Hardware stack levels required when called: 2
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_ADC_Init
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text33
  5521   002BE2                     __ptext33:
  5522                           	callstack 0
  5523   002BE2                     _select_result_format:
  5524                           	callstack 27
  5525   002BE2                     
  5526                           ;MCAL_Layer/ADC/hal_adc.c: 273:     if(0x01U == _adc->result_format){
  5527   002BE2  5039               	movf	select_result_format@_adc^0,w,c
  5528   002BE4  6ED9               	movwf	fsr2l,c
  5529   002BE6  6ADA               	clrf	fsr2h,c
  5530   002BE8  0E06               	movlw	6
  5531   002BEA  26D9               	addwf	fsr2l,f,c
  5532   002BEC  A2DF               	btfss	indf2,1,c
  5533   002BEE  EFFB  F015         	goto	u4571
  5534   002BF2  EFFD  F015         	goto	u4570
  5535   002BF6                     u4571:
  5536   002BF6  EF00  F016         	goto	l5974
  5537   002BFA                     u4570:
  5538   002BFA                     
  5539                           ;MCAL_Layer/ADC/hal_adc.c: 274:         (ADCON2bits.ADFM = 1);
  5540   002BFA  8EC0               	bsf	192,7,c	;volatile
  5541                           
  5542                           ;MCAL_Layer/ADC/hal_adc.c: 275:     }
  5543   002BFC  EF10  F016         	goto	l456
  5544   002C00                     l5974:
  5545   002C00  5039               	movf	select_result_format@_adc^0,w,c
  5546   002C02  6ED9               	movwf	fsr2l,c
  5547   002C04  6ADA               	clrf	fsr2h,c
  5548   002C06  0E06               	movlw	6
  5549   002C08  26D9               	addwf	fsr2l,f,c
  5550   002C0A  B2DF               	btfsc	indf2,1,c
  5551   002C0C  EF0A  F016         	goto	u4581
  5552   002C10  EF0C  F016         	goto	u4580
  5553   002C14                     u4581:
  5554   002C14  EF0F  F016         	goto	l454
  5555   002C18                     u4580:
  5556   002C18                     
  5557                           ;MCAL_Layer/ADC/hal_adc.c: 277:         (ADCON2bits.ADFM = 0);
  5558   002C18  9EC0               	bcf	192,7,c	;volatile
  5559                           
  5560                           ;MCAL_Layer/ADC/hal_adc.c: 278:     }
  5561   002C1A  EF10  F016         	goto	l456
  5562   002C1E                     l454:
  5563                           
  5564                           ;MCAL_Layer/ADC/hal_adc.c: 280:         (ADCON2bits.ADFM = 1);
  5565   002C1E  8EC0               	bsf	192,7,c	;volatile
  5566   002C20                     l456:
  5567   002C20  0012               	return		;funcret
  5568   002C22                     __end_of_select_result_format:
  5569                           	callstack 0
  5570                           
  5571 ;; *************** function _configure_voltage_reference *****************
  5572 ;; Defined at:
  5573 ;;		line 284 in file "MCAL_Layer/ADC/hal_adc.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  _adc            1    1[COMRAM] PTR const struct .
  5576 ;;		 -> adc_1(7), 
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;		None
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  1    wreg      void 
  5581 ;; Registers used:
  5582 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5588 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5591 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5592 ;;Total ram usage:        1 bytes
  5593 ;; Hardware stack levels used: 1
  5594 ;; Hardware stack levels required when called: 2
  5595 ;; This function calls:
  5596 ;;		Nothing
  5597 ;; This function is called by:
  5598 ;;		_ADC_Init
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           	psect	text34
  5603   002B5C                     __ptext34:
  5604                           	callstack 0
  5605   002B5C                     _configure_voltage_reference:
  5606                           	callstack 27
  5607   002B5C                     
  5608                           ;MCAL_Layer/ADC/hal_adc.c: 285:     if(0x01U == _adc->voltage_reference){
  5609   002B5C  5039               	movf	configure_voltage_reference@_adc^0,w,c
  5610   002B5E  6ED9               	movwf	fsr2l,c
  5611   002B60  6ADA               	clrf	fsr2h,c
  5612   002B62  0E06               	movlw	6
  5613   002B64  26D9               	addwf	fsr2l,f,c
  5614   002B66  A0DF               	btfss	indf2,0,c
  5615   002B68  EFB8  F015         	goto	u4591
  5616   002B6C  EFBA  F015         	goto	u4590
  5617   002B70                     u4591:
  5618   002B70  EFBE  F015         	goto	l5980
  5619   002B74                     u4590:
  5620   002B74  8AC1               	bsf	193,5,c	;volatile
  5621   002B76  88C1               	bsf	193,4,c	;volatile
  5622   002B78  EFD0  F015         	goto	l469
  5623   002B7C                     l5980:
  5624   002B7C  5039               	movf	configure_voltage_reference@_adc^0,w,c
  5625   002B7E  6ED9               	movwf	fsr2l,c
  5626   002B80  6ADA               	clrf	fsr2h,c
  5627   002B82  0E06               	movlw	6
  5628   002B84  26D9               	addwf	fsr2l,f,c
  5629   002B86  B0DF               	btfsc	indf2,0,c
  5630   002B88  EFC8  F015         	goto	u4601
  5631   002B8C  EFCA  F015         	goto	u4600
  5632   002B90                     u4601:
  5633   002B90  EFCE  F015         	goto	l467
  5634   002B94                     u4600:
  5635   002B94  9AC1               	bcf	193,5,c	;volatile
  5636   002B96  98C1               	bcf	193,4,c	;volatile
  5637   002B98  EFD0  F015         	goto	l469
  5638   002B9C                     l467:
  5639   002B9C  9AC1               	bcf	193,5,c	;volatile
  5640   002B9E  98C1               	bcf	193,4,c	;volatile
  5641   002BA0                     l469:
  5642   002BA0  0012               	return		;funcret
  5643   002BA2                     __end_of_configure_voltage_reference:
  5644                           	callstack 0
  5645                           
  5646 ;; *************** function _ADC_GetConversion_Blocking *****************
  5647 ;; Defined at:
  5648 ;;		line 213 in file "MCAL_Layer/ADC/hal_adc.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  _adc            1    8[COMRAM] PTR const struct .
  5651 ;;		 -> adc_1(7), 
  5652 ;;  channel         1    9[COMRAM] enum E3045
  5653 ;;  conversion_r    1   10[COMRAM] PTR unsigned short 
  5654 ;;		 -> lm35_res_2(2), lm35_res_1(2), 
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;  ret             1   11[COMRAM] unsigned char 
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  1    wreg      unsigned char 
  5659 ;; Registers used:
  5660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5666 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5667 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5669 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;Total ram usage:        4 bytes
  5671 ;; Hardware stack levels used: 1
  5672 ;; Hardware stack levels required when called: 4
  5673 ;; This function calls:
  5674 ;;		_ADC_GetConversionResult
  5675 ;;		_ADC_SelectChannel
  5676 ;;		_ADC_StartConversion
  5677 ;; This function is called by:
  5678 ;;		_main
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           	psect	text35
  5683   002996                     __ptext35:
  5684                           	callstack 0
  5685   002996                     _ADC_GetConversion_Blocking:
  5686                           	callstack 26
  5687   002996                     
  5688                           ;MCAL_Layer/ADC/hal_adc.c: 216:     if((((void*)0) == _adc) || (((void*)0) == conversion
      +                          _result)){
  5689   002996  5040               	movf	ADC_GetConversion_Blocking@_adc^0,w,c
  5690   002998  B4D8               	btfsc	status,2,c
  5691   00299A  EFD1  F014         	goto	u4891
  5692   00299E  EFD3  F014         	goto	u4890
  5693   0029A2                     u4891:
  5694   0029A2  EFDB  F014         	goto	l6254
  5695   0029A6                     u4890:
  5696   0029A6  5042               	movf	ADC_GetConversion_Blocking@conversion_result^0,w,c
  5697   0029A8  A4D8               	btfss	status,2,c
  5698   0029AA  EFD9  F014         	goto	u4901
  5699   0029AE  EFDB  F014         	goto	u4900
  5700   0029B2                     u4901:
  5701   0029B2  EFDF  F014         	goto	l6256
  5702   0029B6                     u4900:
  5703   0029B6                     l6254:
  5704                           
  5705                           ;MCAL_Layer/ADC/hal_adc.c: 217:         ret = (Std_ReturnType)0x00;
  5706   0029B6  0E00               	movlw	0
  5707   0029B8  6E43               	movwf	ADC_GetConversion_Blocking@ret^0,c
  5708                           
  5709                           ;MCAL_Layer/ADC/hal_adc.c: 218:     }
  5710   0029BA  EFF9  F014         	goto	l6260
  5711   0029BE                     l6256:
  5712                           
  5713                           ;MCAL_Layer/ADC/hal_adc.c: 221:         ret = ADC_SelectChannel(_adc, channel);
  5714   0029BE  C040  F03C         	movff	ADC_GetConversion_Blocking@_adc,ADC_SelectChannel@_adc
  5715   0029C2  C041  F03D         	movff	ADC_GetConversion_Blocking@channel,ADC_SelectChannel@channel
  5716   0029C6  EC85  F016         	call	_ADC_SelectChannel	;wreg free
  5717   0029CA  6E43               	movwf	ADC_GetConversion_Blocking@ret^0,c
  5718                           
  5719                           ;MCAL_Layer/ADC/hal_adc.c: 223:         ret = ADC_StartConversion(_adc);
  5720   0029CC  C040  F039         	movff	ADC_GetConversion_Blocking@_adc,ADC_StartConversion@_adc
  5721   0029D0  EC17  F017         	call	_ADC_StartConversion	;wreg free
  5722   0029D4  6E43               	movwf	ADC_GetConversion_Blocking@ret^0,c
  5723   0029D6                     l422:
  5724   0029D6  B2C2               	btfsc	194,1,c	;volatile
  5725   0029D8  EFF0  F014         	goto	u4911
  5726   0029DC  EFF2  F014         	goto	u4910
  5727   0029E0                     u4911:
  5728   0029E0  EFEB  F014         	goto	l422
  5729   0029E4                     u4910:
  5730   0029E4                     
  5731                           ;MCAL_Layer/ADC/hal_adc.c: 226:         ret = ADC_GetConversionResult(_adc, conversion_r
      +                          esult);
  5732   0029E4  C040  F039         	movff	ADC_GetConversion_Blocking@_adc,ADC_GetConversionResult@_adc
  5733   0029E8  C042  F03A         	movff	ADC_GetConversion_Blocking@conversion_result,ADC_GetConversionResult@conversion_r
      +                          esult
  5734   0029EC  EC3B  F012         	call	_ADC_GetConversionResult	;wreg free
  5735   0029F0  6E43               	movwf	ADC_GetConversion_Blocking@ret^0,c
  5736   0029F2                     l6260:
  5737                           
  5738                           ;MCAL_Layer/ADC/hal_adc.c: 228:     return ret;
  5739   0029F2  5043               	movf	ADC_GetConversion_Blocking@ret^0,w,c
  5740   0029F4  0012               	return		;funcret
  5741   0029F6                     __end_of_ADC_GetConversion_Blocking:
  5742                           	callstack 0
  5743                           
  5744 ;; *************** function _ADC_StartConversion *****************
  5745 ;; Defined at:
  5746 ;;		line 131 in file "MCAL_Layer/ADC/hal_adc.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  _adc            1    1[COMRAM] PTR const struct .
  5749 ;;		 -> adc_1(7), 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  ret             1    2[COMRAM] unsigned char 
  5752 ;; Return value:  Size  Location     Type
  5753 ;;                  1    wreg      unsigned char 
  5754 ;; Registers used:
  5755 ;;		wreg, status,2
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5761 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5765 ;;Total ram usage:        2 bytes
  5766 ;; Hardware stack levels used: 1
  5767 ;; Hardware stack levels required when called: 2
  5768 ;; This function calls:
  5769 ;;		Nothing
  5770 ;; This function is called by:
  5771 ;;		_ADC_GetConversion_Blocking
  5772 ;;		_ADC_StartConversion_Interrupt
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           	psect	text36
  5777   002E2E                     __ptext36:
  5778                           	callstack 0
  5779   002E2E                     _ADC_StartConversion:
  5780                           	callstack 27
  5781   002E2E                     
  5782                           ;MCAL_Layer/ADC/hal_adc.c: 133:     if(((void*)0) == _adc){
  5783   002E2E  5039               	movf	ADC_StartConversion@_adc^0,w,c
  5784   002E30  A4D8               	btfss	status,2,c
  5785   002E32  EF1D  F017         	goto	u4621
  5786   002E36  EF1F  F017         	goto	u4620
  5787   002E3A                     u4621:
  5788   002E3A  EF23  F017         	goto	l395
  5789   002E3E                     u4620:
  5790   002E3E                     
  5791                           ;MCAL_Layer/ADC/hal_adc.c: 134:         ret = (Std_ReturnType)0x00;
  5792   002E3E  0E00               	movlw	0
  5793   002E40  6E3A               	movwf	ADC_StartConversion@ret^0,c
  5794                           
  5795                           ;MCAL_Layer/ADC/hal_adc.c: 135:     }
  5796   002E42  EF26  F017         	goto	l396
  5797   002E46                     l395:
  5798                           
  5799                           ;MCAL_Layer/ADC/hal_adc.c: 137:         (ADCON0bits.GODONE = 1);
  5800   002E46  82C2               	bsf	194,1,c	;volatile
  5801   002E48                     
  5802                           ;MCAL_Layer/ADC/hal_adc.c: 138:         ret = (Std_ReturnType)0x01;
  5803   002E48  0E01               	movlw	1
  5804   002E4A  6E3A               	movwf	ADC_StartConversion@ret^0,c
  5805   002E4C                     l396:
  5806                           
  5807                           ;MCAL_Layer/ADC/hal_adc.c: 140:     return ret;
  5808   002E4C  503A               	movf	ADC_StartConversion@ret^0,w,c
  5809   002E4E  0012               	return		;funcret
  5810   002E50                     __end_of_ADC_StartConversion:
  5811                           	callstack 0
  5812                           
  5813 ;; *************** function _ADC_SelectChannel *****************
  5814 ;; Defined at:
  5815 ;;		line 108 in file "MCAL_Layer/ADC/hal_adc.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  _adc            1    4[COMRAM] PTR const struct .
  5818 ;;		 -> adc_1(7), 
  5819 ;;  channel         1    5[COMRAM] enum E3045
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  ret             1    7[COMRAM] unsigned char 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  1    wreg      unsigned char 
  5824 ;; Registers used:
  5825 ;;		wreg, status,2, status,0, cstack
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5833 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5834 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5835 ;;Total ram usage:        4 bytes
  5836 ;; Hardware stack levels used: 1
  5837 ;; Hardware stack levels required when called: 3
  5838 ;; This function calls:
  5839 ;;		_adc_input_channel_port_configure
  5840 ;; This function is called by:
  5841 ;;		_ADC_GetConversion_Blocking
  5842 ;;		_ADC_StartConversion_Interrupt
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           	psect	text37
  5847   002D0A                     __ptext37:
  5848                           	callstack 0
  5849   002D0A                     _ADC_SelectChannel:
  5850                           	callstack 26
  5851   002D0A                     
  5852                           ;MCAL_Layer/ADC/hal_adc.c: 110:     if(((void*)0) == _adc){
  5853   002D0A  503C               	movf	ADC_SelectChannel@_adc^0,w,c
  5854   002D0C  A4D8               	btfss	status,2,c
  5855   002D0E  EF8B  F016         	goto	u4611
  5856   002D12  EF8D  F016         	goto	u4610
  5857   002D16                     u4611:
  5858   002D16  EF91  F016         	goto	l5986
  5859   002D1A                     u4610:
  5860   002D1A                     
  5861                           ;MCAL_Layer/ADC/hal_adc.c: 111:         ret = (Std_ReturnType)0x00;
  5862   002D1A  0E00               	movlw	0
  5863   002D1C  6E3F               	movwf	ADC_SelectChannel@ret^0,c
  5864                           
  5865                           ;MCAL_Layer/ADC/hal_adc.c: 112:     }
  5866   002D1E  EF9F  F016         	goto	l5992
  5867   002D22                     l5986:
  5868                           
  5869                           ;MCAL_Layer/ADC/hal_adc.c: 115:         ADCON0bits.CHS = channel;
  5870   002D22  C03D  F03E         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  5871   002D26  463E               	rlncf	??_ADC_SelectChannel^0,f,c
  5872   002D28  463E               	rlncf	??_ADC_SelectChannel^0,f,c
  5873   002D2A  50C2               	movf	194,w,c	;volatile
  5874   002D2C  183E               	xorwf	??_ADC_SelectChannel^0,w,c
  5875   002D2E  0BC3               	andlw	-61
  5876   002D30  183E               	xorwf	??_ADC_SelectChannel^0,w,c
  5877   002D32  6EC2               	movwf	194,c	;volatile
  5878   002D34                     
  5879                           ;MCAL_Layer/ADC/hal_adc.c: 116:         adc_input_channel_port_configure(channel);
  5880   002D34  503D               	movf	ADC_SelectChannel@channel^0,w,c
  5881   002D36  EC10  F011         	call	_adc_input_channel_port_configure
  5882   002D3A                     
  5883                           ;MCAL_Layer/ADC/hal_adc.c: 117:         ret = (Std_ReturnType)0x01;
  5884   002D3A  0E01               	movlw	1
  5885   002D3C  6E3F               	movwf	ADC_SelectChannel@ret^0,c
  5886   002D3E                     l5992:
  5887                           
  5888                           ;MCAL_Layer/ADC/hal_adc.c: 119:     return ret;
  5889   002D3E  503F               	movf	ADC_SelectChannel@ret^0,w,c
  5890   002D40  0012               	return		;funcret
  5891   002D42                     __end_of_ADC_SelectChannel:
  5892                           	callstack 0
  5893                           
  5894 ;; *************** function _adc_input_channel_port_configure *****************
  5895 ;; Defined at:
  5896 ;;		line 253 in file "MCAL_Layer/ADC/hal_adc.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;  channel         1    wreg     enum E3045
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;  channel         1    3[COMRAM] enum E3045
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      void 
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;Total ram usage:        3 bytes
  5915 ;; Hardware stack levels used: 1
  5916 ;; Hardware stack levels required when called: 2
  5917 ;; This function calls:
  5918 ;;		Nothing
  5919 ;; This function is called by:
  5920 ;;		_ADC_Init
  5921 ;;		_ADC_SelectChannel
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           	psect	text38
  5926   002220                     __ptext38:
  5927                           	callstack 0
  5928   002220                     _adc_input_channel_port_configure:
  5929                           	callstack 27
  5930                           
  5931                           ;incstack = 0
  5932                           ;adc_input_channel_port_configure@channel stored from wreg
  5933   002220  6E3B               	movwf	adc_input_channel_port_configure@channel^0,c
  5934   002222                     
  5935                           ;MCAL_Layer/ADC/hal_adc.c: 254:     switch(channel){
  5936   002222  EF3A  F011         	goto	l5874
  5937   002226                     l5848:
  5938   002226  8092               	bsf	146,0,c	;volatile
  5939   002228  EF7B  F011         	goto	l449
  5940   00222C                     l5850:
  5941   00222C  8292               	bsf	146,1,c	;volatile
  5942   00222E  EF7B  F011         	goto	l449
  5943   002232                     l5852:
  5944   002232  8492               	bsf	146,2,c	;volatile
  5945   002234  EF7B  F011         	goto	l449
  5946   002238                     l5854:
  5947   002238  8692               	bsf	146,3,c	;volatile
  5948   00223A  EF7B  F011         	goto	l449
  5949   00223E                     l5856:
  5950   00223E  8A92               	bsf	146,5,c	;volatile
  5951   002240  EF7B  F011         	goto	l449
  5952   002244                     l5858:
  5953   002244  8096               	bsf	150,0,c	;volatile
  5954   002246  EF7B  F011         	goto	l449
  5955   00224A                     l5860:
  5956   00224A  8296               	bsf	150,1,c	;volatile
  5957   00224C  EF7B  F011         	goto	l449
  5958   002250                     l5862:
  5959   002250  8496               	bsf	150,2,c	;volatile
  5960   002252  EF7B  F011         	goto	l449
  5961   002256                     l5864:
  5962   002256  8493               	bsf	147,2,c	;volatile
  5963   002258  EF7B  F011         	goto	l449
  5964   00225C                     l5866:
  5965   00225C  8693               	bsf	147,3,c	;volatile
  5966   00225E  EF7B  F011         	goto	l449
  5967   002262                     l5868:
  5968   002262  8293               	bsf	147,1,c	;volatile
  5969   002264  EF7B  F011         	goto	l449
  5970   002268                     l5870:
  5971   002268  8893               	bsf	147,4,c	;volatile
  5972   00226A  EF7B  F011         	goto	l449
  5973   00226E                     l5872:
  5974   00226E  8093               	bsf	147,0,c	;volatile
  5975   002270  EF7B  F011         	goto	l449
  5976   002274                     l5874:
  5977   002274  503B               	movf	adc_input_channel_port_configure@channel^0,w,c
  5978   002276  6E39               	movwf	??_adc_input_channel_port_configure^0,c
  5979   002278  6A3A               	clrf	(??_adc_input_channel_port_configure+1)^0,c
  5980                           
  5981                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5982                           ; Switch size 1, requested type "simple"
  5983                           ; Number of cases is 1, Range of values is 0 to 0
  5984                           ; switch strategies available:
  5985                           ; Name         Instructions Cycles
  5986                           ; simple_byte            4     3 (average)
  5987                           ;	Chosen strategy is simple_byte
  5988   00227A  503A               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
  5989   00227C  0A00               	xorlw	0	; case 0
  5990   00227E  B4D8               	btfsc	status,2,c
  5991   002280  EF44  F011         	goto	l8054
  5992   002284  EF7B  F011         	goto	l449
  5993   002288                     l8054:
  5994                           
  5995                           ; Switch size 1, requested type "simple"
  5996                           ; Number of cases is 13, Range of values is 0 to 12
  5997                           ; switch strategies available:
  5998                           ; Name         Instructions Cycles
  5999                           ; simple_byte           40    21 (average)
  6000                           ;	Chosen strategy is simple_byte
  6001   002288  5039               	movf	??_adc_input_channel_port_configure^0,w,c
  6002   00228A  0A00               	xorlw	0	; case 0
  6003   00228C  B4D8               	btfsc	status,2,c
  6004   00228E  EF13  F011         	goto	l5848
  6005   002292  0A01               	xorlw	1	; case 1
  6006   002294  B4D8               	btfsc	status,2,c
  6007   002296  EF16  F011         	goto	l5850
  6008   00229A  0A03               	xorlw	3	; case 2
  6009   00229C  B4D8               	btfsc	status,2,c
  6010   00229E  EF19  F011         	goto	l5852
  6011   0022A2  0A01               	xorlw	1	; case 3
  6012   0022A4  B4D8               	btfsc	status,2,c
  6013   0022A6  EF1C  F011         	goto	l5854
  6014   0022AA  0A07               	xorlw	7	; case 4
  6015   0022AC  B4D8               	btfsc	status,2,c
  6016   0022AE  EF1F  F011         	goto	l5856
  6017   0022B2  0A01               	xorlw	1	; case 5
  6018   0022B4  B4D8               	btfsc	status,2,c
  6019   0022B6  EF22  F011         	goto	l5858
  6020   0022BA  0A03               	xorlw	3	; case 6
  6021   0022BC  B4D8               	btfsc	status,2,c
  6022   0022BE  EF25  F011         	goto	l5860
  6023   0022C2  0A01               	xorlw	1	; case 7
  6024   0022C4  B4D8               	btfsc	status,2,c
  6025   0022C6  EF28  F011         	goto	l5862
  6026   0022CA  0A0F               	xorlw	15	; case 8
  6027   0022CC  B4D8               	btfsc	status,2,c
  6028   0022CE  EF2B  F011         	goto	l5864
  6029   0022D2  0A01               	xorlw	1	; case 9
  6030   0022D4  B4D8               	btfsc	status,2,c
  6031   0022D6  EF2E  F011         	goto	l5866
  6032   0022DA  0A03               	xorlw	3	; case 10
  6033   0022DC  B4D8               	btfsc	status,2,c
  6034   0022DE  EF31  F011         	goto	l5868
  6035   0022E2  0A01               	xorlw	1	; case 11
  6036   0022E4  B4D8               	btfsc	status,2,c
  6037   0022E6  EF34  F011         	goto	l5870
  6038   0022EA  0A07               	xorlw	7	; case 12
  6039   0022EC  B4D8               	btfsc	status,2,c
  6040   0022EE  EF37  F011         	goto	l5872
  6041   0022F2  EF7B  F011         	goto	l449
  6042   0022F6                     l449:
  6043   0022F6  0012               	return		;funcret
  6044   0022F8                     __end_of_adc_input_channel_port_configure:
  6045                           	callstack 0
  6046                           
  6047 ;; *************** function _ADC_GetConversionResult *****************
  6048 ;; Defined at:
  6049 ;;		line 181 in file "MCAL_Layer/ADC/hal_adc.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;  _adc            1    1[COMRAM] PTR const struct .
  6052 ;;		 -> adc_1(7), 
  6053 ;;  conversion_r    1    2[COMRAM] PTR unsigned short 
  6054 ;;		 -> lm35_res_2(2), lm35_res_1(2), 
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;  ret             1    6[COMRAM] unsigned char 
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      unsigned char 
  6059 ;; Registers used:
  6060 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6067 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6068 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6069 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6070 ;;Total ram usage:        6 bytes
  6071 ;; Hardware stack levels used: 1
  6072 ;; Hardware stack levels required when called: 2
  6073 ;; This function calls:
  6074 ;;		Nothing
  6075 ;; This function is called by:
  6076 ;;		_ADC_GetConversion_Blocking
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           	psect	text39
  6081   002476                     __ptext39:
  6082                           	callstack 0
  6083   002476                     _ADC_GetConversionResult:
  6084                           	callstack 27
  6085   002476                     
  6086                           ;MCAL_Layer/ADC/hal_adc.c: 183:     if((((void*)0) == _adc) || (((void*)0) == conversion
      +                          _result)){
  6087   002476  5039               	movf	ADC_GetConversionResult@_adc^0,w,c
  6088   002478  B4D8               	btfsc	status,2,c
  6089   00247A  EF41  F012         	goto	u4631
  6090   00247E  EF43  F012         	goto	u4630
  6091   002482                     u4631:
  6092   002482  EF4B  F012         	goto	l6008
  6093   002486                     u4630:
  6094   002486  503A               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  6095   002488  A4D8               	btfss	status,2,c
  6096   00248A  EF49  F012         	goto	u4641
  6097   00248E  EF4B  F012         	goto	u4640
  6098   002492                     u4641:
  6099   002492  EF4F  F012         	goto	l6010
  6100   002496                     u4640:
  6101   002496                     l6008:
  6102                           
  6103                           ;MCAL_Layer/ADC/hal_adc.c: 184:         ret = (Std_ReturnType)0x00;
  6104   002496  0E00               	movlw	0
  6105   002498  6E3E               	movwf	ADC_GetConversionResult@ret^0,c
  6106                           
  6107                           ;MCAL_Layer/ADC/hal_adc.c: 185:     }
  6108   00249A  EF95  F012         	goto	l6022
  6109   00249E                     l6010:
  6110                           
  6111                           ;MCAL_Layer/ADC/hal_adc.c: 187:         if(0x01U == _adc->result_format){
  6112   00249E  5039               	movf	ADC_GetConversionResult@_adc^0,w,c
  6113   0024A0  6ED9               	movwf	fsr2l,c
  6114   0024A2  6ADA               	clrf	fsr2h,c
  6115   0024A4  0E06               	movlw	6
  6116   0024A6  26D9               	addwf	fsr2l,f,c
  6117   0024A8  A2DF               	btfss	indf2,1,c
  6118   0024AA  EF59  F012         	goto	u4651
  6119   0024AE  EF5B  F012         	goto	u4650
  6120   0024B2                     u4651:
  6121   0024B2  EF6E  F012         	goto	l6014
  6122   0024B6                     u4650:
  6123   0024B6                     l6012:
  6124                           
  6125                           ;MCAL_Layer/ADC/hal_adc.c: 188:             *conversion_result = (adc_result_t)((ADRESH 
      +                          << 8) + ADRESL);
  6126   0024B6  50C3               	movf	195,w,c	;volatile
  6127   0024B8  CFC4 F03B          	movff	4036,??_ADC_GetConversionResult	;volatile
  6128   0024BC  6A3C               	clrf	(??_ADC_GetConversionResult+1)^0,c
  6129   0024BE  C03B  F03C         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  6130   0024C2  6A3B               	clrf	??_ADC_GetConversionResult^0,c
  6131   0024C4  263B               	addwf	??_ADC_GetConversionResult^0,f,c
  6132   0024C6  0E00               	movlw	0
  6133   0024C8  223C               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  6134   0024CA  503A               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  6135   0024CC  6ED9               	movwf	fsr2l,c
  6136   0024CE  6ADA               	clrf	fsr2h,c
  6137   0024D0  C03B  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  6138   0024D4  C03C  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  6139                           
  6140                           ;MCAL_Layer/ADC/hal_adc.c: 189:         }
  6141   0024D8  EF93  F012         	goto	l6020
  6142   0024DC                     l6014:
  6143   0024DC  5039               	movf	ADC_GetConversionResult@_adc^0,w,c
  6144   0024DE  6ED9               	movwf	fsr2l,c
  6145   0024E0  6ADA               	clrf	fsr2h,c
  6146   0024E2  0E06               	movlw	6
  6147   0024E4  26D9               	addwf	fsr2l,f,c
  6148   0024E6  B2DF               	btfsc	indf2,1,c
  6149   0024E8  EF78  F012         	goto	u4661
  6150   0024EC  EF7A  F012         	goto	u4660
  6151   0024F0                     u4661:
  6152   0024F0  EF5B  F012         	goto	l6012
  6153   0024F4                     u4660:
  6154   0024F4                     
  6155                           ;MCAL_Layer/ADC/hal_adc.c: 191:             *conversion_result = (adc_result_t)(((ADRESH
      +                           << 8) + ADRESL) >> 6);
  6156   0024F4  50C3               	movf	195,w,c	;volatile
  6157   0024F6  CFC4 F03B          	movff	4036,??_ADC_GetConversionResult	;volatile
  6158   0024FA  6A3C               	clrf	(??_ADC_GetConversionResult+1)^0,c
  6159   0024FC  C03B  F03C         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  6160   002500  6A3B               	clrf	??_ADC_GetConversionResult^0,c
  6161   002502  263B               	addwf	??_ADC_GetConversionResult^0,f,c
  6162   002504  0E00               	movlw	0
  6163   002506  223C               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  6164   002508  0E06               	movlw	6
  6165   00250A  6E3D               	movwf	(??_ADC_GetConversionResult+2)^0,c
  6166   00250C                     u4675:
  6167   00250C  343C               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
  6168   00250E  323C               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
  6169   002510  323B               	rrcf	??_ADC_GetConversionResult^0,f,c
  6170   002512  2E3D               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
  6171   002514  EF86  F012         	goto	u4675
  6172   002518  503A               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  6173   00251A  6ED9               	movwf	fsr2l,c
  6174   00251C  6ADA               	clrf	fsr2h,c
  6175   00251E  C03B  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  6176   002522  C03C  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  6177   002526                     l6020:
  6178                           
  6179                           ;MCAL_Layer/ADC/hal_adc.c: 196:         ret = (Std_ReturnType)0x01;
  6180   002526  0E01               	movlw	1
  6181   002528  6E3E               	movwf	ADC_GetConversionResult@ret^0,c
  6182   00252A                     l6022:
  6183                           
  6184                           ;MCAL_Layer/ADC/hal_adc.c: 198:     return ret;
  6185   00252A  503E               	movf	ADC_GetConversionResult@ret^0,w,c
  6186   00252C  0012               	return		;funcret
  6187   00252E                     __end_of_ADC_GetConversionResult:
  6188                           	callstack 0
  6189                           
  6190 ;; *************** function _InterruptManager *****************
  6191 ;; Defined at:
  6192 ;;		line 32 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  6193 ;; Parameters:    Size  Location     Type
  6194 ;;		None
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;		None
  6197 ;; Return value:  Size  Location     Type
  6198 ;;                  1    wreg      void 
  6199 ;; Registers used:
  6200 ;;		wreg, status,2, status,0, cstack
  6201 ;; Tracked objects:
  6202 ;;		On entry : 0/0
  6203 ;;		On exit  : 0/0
  6204 ;;		Unchanged: 0/0
  6205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6210 ;;Total ram usage:        0 bytes
  6211 ;; Hardware stack levels used: 1
  6212 ;; Hardware stack levels required when called: 1
  6213 ;; This function calls:
  6214 ;;		_ADC_ISR
  6215 ;;		_CCP1_ISR
  6216 ;;		_CCP2_ISR
  6217 ;;		_EUSART_RX_ISR
  6218 ;;		_EUSART_TX_ISR
  6219 ;;		_INT0_ISR
  6220 ;;		_INT1_ISR
  6221 ;;		_INT2_ISR
  6222 ;;		_MSSP_I2C_BC_ISR
  6223 ;;		_MSSP_I2C_ISR
  6224 ;;		_MSSP_SPI_ISR
  6225 ;;		_RB4_ISR
  6226 ;;		_RB5_ISR
  6227 ;;		_RB6_ISR
  6228 ;;		_RB7_ISR
  6229 ;;		_TMR0_ISR
  6230 ;;		_TMR1_ISR
  6231 ;;		_TMR2_ISR
  6232 ;;		_TMR3_ISR
  6233 ;; This function is called by:
  6234 ;;		Interrupt level 2
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           	psect	intcode
  6239   000008                     __pintcode:
  6240                           	callstack 0
  6241   000008                     _InterruptManager:
  6242                           	callstack 23
  6243                           
  6244                           ;incstack = 0
  6245   000008  8279               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6246   00000A  ED2F  F00A         	call	int_func,f	;refresh shadow registers
  6247                           
  6248                           	psect	intcode_body
  6249   00145E                     __pintcode_body:
  6250                           	callstack 23
  6251   00145E                     int_func:
  6252                           	callstack 23
  6253   00145E  0006               	pop		; remove dummy address from shadow register refresh
  6254   001460                     
  6255                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 34:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF)){
  6256   001460  A8F2               	btfss	242,4,c	;volatile
  6257   001462  EF35  F00A         	goto	i2u624_41
  6258   001466  EF37  F00A         	goto	i2u624_40
  6259   00146A                     i2u624_41:
  6260   00146A  EF40  F00A         	goto	i2l1216
  6261   00146E                     i2u624_40:
  6262   00146E  A2F2               	btfss	242,1,c	;volatile
  6263   001470  EF3C  F00A         	goto	i2u625_41
  6264   001474  EF3E  F00A         	goto	i2u625_40
  6265   001478                     i2u625_41:
  6266   001478  EF40  F00A         	goto	i2l1216
  6267   00147C                     i2u625_40:
  6268   00147C                     
  6269                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 35:         INT0_ISR();
  6270   00147C  EC85  F017         	call	_INT0_ISR	;wreg free
  6271   001480                     i2l1216:
  6272                           
  6273                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 38:     if((1 == INTCON3bits.INT1E) && (
      +                          1 == INTCON3bits.INT1F)){
  6274   001480  A6F0               	btfss	240,3,c	;volatile
  6275   001482  EF45  F00A         	goto	i2u626_41
  6276   001486  EF47  F00A         	goto	i2u626_40
  6277   00148A                     i2u626_41:
  6278   00148A  EF50  F00A         	goto	i2l1218
  6279   00148E                     i2u626_40:
  6280   00148E  A0F0               	btfss	240,0,c	;volatile
  6281   001490  EF4C  F00A         	goto	i2u627_41
  6282   001494  EF4E  F00A         	goto	i2u627_40
  6283   001498                     i2u627_41:
  6284   001498  EF50  F00A         	goto	i2l1218
  6285   00149C                     i2u627_40:
  6286   00149C                     
  6287                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 39:         INT1_ISR();
  6288   00149C  EC83  F017         	call	_INT1_ISR	;wreg free
  6289   0014A0                     i2l1218:
  6290                           
  6291                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 42:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF)){
  6292   0014A0  A8F0               	btfss	240,4,c	;volatile
  6293   0014A2  EF55  F00A         	goto	i2u628_41
  6294   0014A6  EF57  F00A         	goto	i2u628_40
  6295   0014AA                     i2u628_41:
  6296   0014AA  EF60  F00A         	goto	i2l1220
  6297   0014AE                     i2u628_40:
  6298   0014AE  A2F0               	btfss	240,1,c	;volatile
  6299   0014B0  EF5C  F00A         	goto	i2u629_41
  6300   0014B4  EF5E  F00A         	goto	i2u629_40
  6301   0014B8                     i2u629_41:
  6302   0014B8  EF60  F00A         	goto	i2l1220
  6303   0014BC                     i2u629_40:
  6304   0014BC                     
  6305                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 43:         INT2_ISR();
  6306   0014BC  EC81  F017         	call	_INT2_ISR	;wreg free
  6307   0014C0                     i2l1220:
  6308                           
  6309                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 49:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6310   0014C0  A6F2               	btfss	242,3,c	;volatile
  6311   0014C2  EF65  F00A         	goto	i2u630_41
  6312   0014C6  EF67  F00A         	goto	i2u630_40
  6313   0014CA                     i2u630_41:
  6314   0014CA  EF82  F00A         	goto	i2l1222
  6315   0014CE                     i2u630_40:
  6316   0014CE  A0F2               	btfss	242,0,c	;volatile
  6317   0014D0  EF6C  F00A         	goto	i2u631_41
  6318   0014D4  EF6E  F00A         	goto	i2u631_40
  6319   0014D8                     i2u631_41:
  6320   0014D8  EF82  F00A         	goto	i2l1222
  6321   0014DC                     i2u631_40:
  6322   0014DC  A881               	btfss	129,4,c	;volatile
  6323   0014DE  EF73  F00A         	goto	i2u632_41
  6324   0014E2  EF75  F00A         	goto	i2u632_40
  6325   0014E6                     i2u632_41:
  6326   0014E6  EF82  F00A         	goto	i2l1222
  6327   0014EA                     i2u632_40:
  6328   0014EA  0474               	decf	_RB4_Flag^0,w,c	;volatile
  6329   0014EC  A4D8               	btfss	status,2,c
  6330   0014EE  EF7B  F00A         	goto	i2u633_41
  6331   0014F2  EF7D  F00A         	goto	i2u633_40
  6332   0014F6                     i2u633_41:
  6333   0014F6  EF82  F00A         	goto	i2l1222
  6334   0014FA                     i2u633_40:
  6335   0014FA                     
  6336                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 50:        (PORTBbits.RB4 == GPIO_HIGH) 
      +                          && (RB4_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 51:         RB4_Flag
      +                           = 0;
  6337   0014FA  0E00               	movlw	0
  6338   0014FC  6E74               	movwf	_RB4_Flag^0,c	;volatile
  6339   0014FE                     
  6340                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 52:         RB4_ISR(0);
  6341   0014FE  0E00               	movlw	0
  6342   001500  EC4F  F017         	call	_RB4_ISR
  6343   001504                     i2l1222:
  6344                           
  6345                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 55:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6346   001504  A6F2               	btfss	242,3,c	;volatile
  6347   001506  EF87  F00A         	goto	i2u634_41
  6348   00150A  EF89  F00A         	goto	i2u634_40
  6349   00150E                     i2u634_41:
  6350   00150E  EFA4  F00A         	goto	i2l1224
  6351   001512                     i2u634_40:
  6352   001512  A0F2               	btfss	242,0,c	;volatile
  6353   001514  EF8E  F00A         	goto	i2u635_41
  6354   001518  EF90  F00A         	goto	i2u635_40
  6355   00151C                     i2u635_41:
  6356   00151C  EFA4  F00A         	goto	i2l1224
  6357   001520                     i2u635_40:
  6358   001520  B881               	btfsc	129,4,c	;volatile
  6359   001522  EF95  F00A         	goto	i2u636_41
  6360   001526  EF97  F00A         	goto	i2u636_40
  6361   00152A                     i2u636_41:
  6362   00152A  EFA4  F00A         	goto	i2l1224
  6363   00152E                     i2u636_40:
  6364   00152E  5074               	movf	_RB4_Flag^0,w,c	;volatile
  6365   001530  A4D8               	btfss	status,2,c
  6366   001532  EF9D  F00A         	goto	i2u637_41
  6367   001536  EF9F  F00A         	goto	i2u637_40
  6368   00153A                     i2u637_41:
  6369   00153A  EFA4  F00A         	goto	i2l1224
  6370   00153E                     i2u637_40:
  6371   00153E                     
  6372                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 56:        (PORTBbits.RB4 == GPIO_LOW) &
      +                          & (RB4_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 57:         RB4_Flag 
      +                          = 1;
  6373   00153E  0E01               	movlw	1
  6374   001540  6E74               	movwf	_RB4_Flag^0,c	;volatile
  6375   001542                     
  6376                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 58:         RB4_ISR(1);
  6377   001542  0E01               	movlw	1
  6378   001544  EC4F  F017         	call	_RB4_ISR
  6379   001548                     i2l1224:
  6380                           
  6381                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 61:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6382   001548  A6F2               	btfss	242,3,c	;volatile
  6383   00154A  EFA9  F00A         	goto	i2u638_41
  6384   00154E  EFAB  F00A         	goto	i2u638_40
  6385   001552                     i2u638_41:
  6386   001552  EFC6  F00A         	goto	i2l1226
  6387   001556                     i2u638_40:
  6388   001556  A0F2               	btfss	242,0,c	;volatile
  6389   001558  EFB0  F00A         	goto	i2u639_41
  6390   00155C  EFB2  F00A         	goto	i2u639_40
  6391   001560                     i2u639_41:
  6392   001560  EFC6  F00A         	goto	i2l1226
  6393   001564                     i2u639_40:
  6394   001564  AA81               	btfss	129,5,c	;volatile
  6395   001566  EFB7  F00A         	goto	i2u640_41
  6396   00156A  EFB9  F00A         	goto	i2u640_40
  6397   00156E                     i2u640_41:
  6398   00156E  EFC6  F00A         	goto	i2l1226
  6399   001572                     i2u640_40:
  6400   001572  0473               	decf	_RB5_Flag^0,w,c	;volatile
  6401   001574  A4D8               	btfss	status,2,c
  6402   001576  EFBF  F00A         	goto	i2u641_41
  6403   00157A  EFC1  F00A         	goto	i2u641_40
  6404   00157E                     i2u641_41:
  6405   00157E  EFC6  F00A         	goto	i2l1226
  6406   001582                     i2u641_40:
  6407   001582                     
  6408                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 62:        (PORTBbits.RB5 == GPIO_HIGH) 
      +                          && (RB5_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 63:         RB5_Flag
      +                           = 0;
  6409   001582  0E00               	movlw	0
  6410   001584  6E73               	movwf	_RB5_Flag^0,c	;volatile
  6411   001586                     
  6412                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 64:         RB5_ISR(0);
  6413   001586  0E00               	movlw	0
  6414   001588  EC42  F017         	call	_RB5_ISR
  6415   00158C                     i2l1226:
  6416                           
  6417                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 67:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6418   00158C  A6F2               	btfss	242,3,c	;volatile
  6419   00158E  EFCB  F00A         	goto	i2u642_41
  6420   001592  EFCD  F00A         	goto	i2u642_40
  6421   001596                     i2u642_41:
  6422   001596  EFE8  F00A         	goto	i2l1228
  6423   00159A                     i2u642_40:
  6424   00159A  A0F2               	btfss	242,0,c	;volatile
  6425   00159C  EFD2  F00A         	goto	i2u643_41
  6426   0015A0  EFD4  F00A         	goto	i2u643_40
  6427   0015A4                     i2u643_41:
  6428   0015A4  EFE8  F00A         	goto	i2l1228
  6429   0015A8                     i2u643_40:
  6430   0015A8  BA81               	btfsc	129,5,c	;volatile
  6431   0015AA  EFD9  F00A         	goto	i2u644_41
  6432   0015AE  EFDB  F00A         	goto	i2u644_40
  6433   0015B2                     i2u644_41:
  6434   0015B2  EFE8  F00A         	goto	i2l1228
  6435   0015B6                     i2u644_40:
  6436   0015B6  5073               	movf	_RB5_Flag^0,w,c	;volatile
  6437   0015B8  A4D8               	btfss	status,2,c
  6438   0015BA  EFE1  F00A         	goto	i2u645_41
  6439   0015BE  EFE3  F00A         	goto	i2u645_40
  6440   0015C2                     i2u645_41:
  6441   0015C2  EFE8  F00A         	goto	i2l1228
  6442   0015C6                     i2u645_40:
  6443   0015C6                     
  6444                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 68:        (PORTBbits.RB5 == GPIO_LOW) &
      +                          & (RB5_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 69:         RB5_Flag 
      +                          = 1;
  6445   0015C6  0E01               	movlw	1
  6446   0015C8  6E73               	movwf	_RB5_Flag^0,c	;volatile
  6447   0015CA                     
  6448                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 70:         RB5_ISR(1);
  6449   0015CA  0E01               	movlw	1
  6450   0015CC  EC42  F017         	call	_RB5_ISR
  6451   0015D0                     i2l1228:
  6452                           
  6453                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 73:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6454   0015D0  A6F2               	btfss	242,3,c	;volatile
  6455   0015D2  EFED  F00A         	goto	i2u646_41
  6456   0015D6  EFEF  F00A         	goto	i2u646_40
  6457   0015DA                     i2u646_41:
  6458   0015DA  EF0A  F00B         	goto	i2l1230
  6459   0015DE                     i2u646_40:
  6460   0015DE  A0F2               	btfss	242,0,c	;volatile
  6461   0015E0  EFF4  F00A         	goto	i2u647_41
  6462   0015E4  EFF6  F00A         	goto	i2u647_40
  6463   0015E8                     i2u647_41:
  6464   0015E8  EF0A  F00B         	goto	i2l1230
  6465   0015EC                     i2u647_40:
  6466   0015EC  AC81               	btfss	129,6,c	;volatile
  6467   0015EE  EFFB  F00A         	goto	i2u648_41
  6468   0015F2  EFFD  F00A         	goto	i2u648_40
  6469   0015F6                     i2u648_41:
  6470   0015F6  EF0A  F00B         	goto	i2l1230
  6471   0015FA                     i2u648_40:
  6472   0015FA  0472               	decf	_RB6_Flag^0,w,c	;volatile
  6473   0015FC  A4D8               	btfss	status,2,c
  6474   0015FE  EF03  F00B         	goto	i2u649_41
  6475   001602  EF05  F00B         	goto	i2u649_40
  6476   001606                     i2u649_41:
  6477   001606  EF0A  F00B         	goto	i2l1230
  6478   00160A                     i2u649_40:
  6479   00160A                     
  6480                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 74:        (PORTBbits.RB6 == GPIO_HIGH) 
      +                          && (RB6_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 75:         RB6_Flag
      +                           = 0;
  6481   00160A  0E00               	movlw	0
  6482   00160C  6E72               	movwf	_RB6_Flag^0,c	;volatile
  6483   00160E                     
  6484                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 76:         RB6_ISR(0);
  6485   00160E  0E00               	movlw	0
  6486   001610  EC35  F017         	call	_RB6_ISR
  6487   001614                     i2l1230:
  6488                           
  6489                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 79:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6490   001614  A6F2               	btfss	242,3,c	;volatile
  6491   001616  EF0F  F00B         	goto	i2u650_41
  6492   00161A  EF11  F00B         	goto	i2u650_40
  6493   00161E                     i2u650_41:
  6494   00161E  EF2C  F00B         	goto	i2l1232
  6495   001622                     i2u650_40:
  6496   001622  A0F2               	btfss	242,0,c	;volatile
  6497   001624  EF16  F00B         	goto	i2u651_41
  6498   001628  EF18  F00B         	goto	i2u651_40
  6499   00162C                     i2u651_41:
  6500   00162C  EF2C  F00B         	goto	i2l1232
  6501   001630                     i2u651_40:
  6502   001630  BC81               	btfsc	129,6,c	;volatile
  6503   001632  EF1D  F00B         	goto	i2u652_41
  6504   001636  EF1F  F00B         	goto	i2u652_40
  6505   00163A                     i2u652_41:
  6506   00163A  EF2C  F00B         	goto	i2l1232
  6507   00163E                     i2u652_40:
  6508   00163E  5072               	movf	_RB6_Flag^0,w,c	;volatile
  6509   001640  A4D8               	btfss	status,2,c
  6510   001642  EF25  F00B         	goto	i2u653_41
  6511   001646  EF27  F00B         	goto	i2u653_40
  6512   00164A                     i2u653_41:
  6513   00164A  EF2C  F00B         	goto	i2l1232
  6514   00164E                     i2u653_40:
  6515   00164E                     
  6516                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 80:        (PORTBbits.RB6 == GPIO_LOW) &
      +                          & (RB6_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 81:         RB6_Flag 
      +                          = 1;
  6517   00164E  0E01               	movlw	1
  6518   001650  6E72               	movwf	_RB6_Flag^0,c	;volatile
  6519   001652                     
  6520                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 82:         RB6_ISR(1);
  6521   001652  0E01               	movlw	1
  6522   001654  EC35  F017         	call	_RB6_ISR
  6523   001658                     i2l1232:
  6524                           
  6525                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 85:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6526   001658  A6F2               	btfss	242,3,c	;volatile
  6527   00165A  EF31  F00B         	goto	i2u654_41
  6528   00165E  EF33  F00B         	goto	i2u654_40
  6529   001662                     i2u654_41:
  6530   001662  EF4E  F00B         	goto	i2l1234
  6531   001666                     i2u654_40:
  6532   001666  A0F2               	btfss	242,0,c	;volatile
  6533   001668  EF38  F00B         	goto	i2u655_41
  6534   00166C  EF3A  F00B         	goto	i2u655_40
  6535   001670                     i2u655_41:
  6536   001670  EF4E  F00B         	goto	i2l1234
  6537   001674                     i2u655_40:
  6538   001674  AE81               	btfss	129,7,c	;volatile
  6539   001676  EF3F  F00B         	goto	i2u656_41
  6540   00167A  EF41  F00B         	goto	i2u656_40
  6541   00167E                     i2u656_41:
  6542   00167E  EF4E  F00B         	goto	i2l1234
  6543   001682                     i2u656_40:
  6544   001682  0471               	decf	_RB7_Flag^0,w,c	;volatile
  6545   001684  A4D8               	btfss	status,2,c
  6546   001686  EF47  F00B         	goto	i2u657_41
  6547   00168A  EF49  F00B         	goto	i2u657_40
  6548   00168E                     i2u657_41:
  6549   00168E  EF4E  F00B         	goto	i2l1234
  6550   001692                     i2u657_40:
  6551   001692                     
  6552                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 86:        (PORTBbits.RB7 == GPIO_HIGH) 
      +                          && (RB7_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 87:         RB7_Flag
      +                           = 0;
  6553   001692  0E00               	movlw	0
  6554   001694  6E71               	movwf	_RB7_Flag^0,c	;volatile
  6555   001696                     
  6556                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 88:         RB7_ISR(0);
  6557   001696  0E00               	movlw	0
  6558   001698  EC28  F017         	call	_RB7_ISR
  6559   00169C                     i2l1234:
  6560                           
  6561                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 91:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6562   00169C  A6F2               	btfss	242,3,c	;volatile
  6563   00169E  EF53  F00B         	goto	i2u658_41
  6564   0016A2  EF55  F00B         	goto	i2u658_40
  6565   0016A6                     i2u658_41:
  6566   0016A6  EF70  F00B         	goto	i2l1236
  6567   0016AA                     i2u658_40:
  6568   0016AA  A0F2               	btfss	242,0,c	;volatile
  6569   0016AC  EF5A  F00B         	goto	i2u659_41
  6570   0016B0  EF5C  F00B         	goto	i2u659_40
  6571   0016B4                     i2u659_41:
  6572   0016B4  EF70  F00B         	goto	i2l1236
  6573   0016B8                     i2u659_40:
  6574   0016B8  BE81               	btfsc	129,7,c	;volatile
  6575   0016BA  EF61  F00B         	goto	i2u660_41
  6576   0016BE  EF63  F00B         	goto	i2u660_40
  6577   0016C2                     i2u660_41:
  6578   0016C2  EF70  F00B         	goto	i2l1236
  6579   0016C6                     i2u660_40:
  6580   0016C6  5071               	movf	_RB7_Flag^0,w,c	;volatile
  6581   0016C8  A4D8               	btfss	status,2,c
  6582   0016CA  EF69  F00B         	goto	i2u661_41
  6583   0016CE  EF6B  F00B         	goto	i2u661_40
  6584   0016D2                     i2u661_41:
  6585   0016D2  EF70  F00B         	goto	i2l1236
  6586   0016D6                     i2u661_40:
  6587   0016D6                     
  6588                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 92:        (PORTBbits.RB7 == GPIO_LOW) &
      +                          & (RB7_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 93:         RB7_Flag 
      +                          = 1;
  6589   0016D6  0E01               	movlw	1
  6590   0016D8  6E71               	movwf	_RB7_Flag^0,c	;volatile
  6591   0016DA                     
  6592                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 94:         RB7_ISR(1);
  6593   0016DA  0E01               	movlw	1
  6594   0016DC  EC28  F017         	call	_RB7_ISR
  6595   0016E0                     i2l1236:
  6596                           
  6597                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 99:     if((1 == PIE1bits.ADIE) && (1 ==
      +                           PIR1bits.ADIF)){
  6598   0016E0  AC9D               	btfss	157,6,c	;volatile
  6599   0016E2  EF75  F00B         	goto	i2u662_41
  6600   0016E6  EF77  F00B         	goto	i2u662_40
  6601   0016EA                     i2u662_41:
  6602   0016EA  EF80  F00B         	goto	i2l1238
  6603   0016EE                     i2u662_40:
  6604   0016EE  AC9E               	btfss	158,6,c	;volatile
  6605   0016F0  EF7C  F00B         	goto	i2u663_41
  6606   0016F4  EF7E  F00B         	goto	i2u663_40
  6607   0016F8                     i2u663_41:
  6608   0016F8  EF80  F00B         	goto	i2l1238
  6609   0016FC                     i2u663_40:
  6610   0016FC                     
  6611                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 100:         ADC_ISR();
  6612   0016FC  EC8D  F017         	call	_ADC_ISR	;wreg free
  6613   001700                     i2l1238:
  6614                           
  6615                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 104:     if((1 == INTCONbits.TMR0IE) && 
      +                          (1 == INTCONbits.TMR0IF)){
  6616   001700  AAF2               	btfss	242,5,c	;volatile
  6617   001702  EF85  F00B         	goto	i2u664_41
  6618   001706  EF87  F00B         	goto	i2u664_40
  6619   00170A                     i2u664_41:
  6620   00170A  EF90  F00B         	goto	i2l1240
  6621   00170E                     i2u664_40:
  6622   00170E  A4F2               	btfss	242,2,c	;volatile
  6623   001710  EF8C  F00B         	goto	i2u665_41
  6624   001714  EF8E  F00B         	goto	i2u665_40
  6625   001718                     i2u665_41:
  6626   001718  EF90  F00B         	goto	i2l1240
  6627   00171C                     i2u665_40:
  6628   00171C                     
  6629                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 105:         TMR0_ISR();
  6630   00171C  EC70  F017         	call	_TMR0_ISR	;wreg free
  6631   001720                     i2l1240:
  6632                           
  6633                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 108:     if((1 == PIE1bits.TMR1IE) && (1
      +                           == PIR1bits.TMR1IF)){
  6634   001720  A09D               	btfss	157,0,c	;volatile
  6635   001722  EF95  F00B         	goto	i2u666_41
  6636   001726  EF97  F00B         	goto	i2u666_40
  6637   00172A                     i2u666_41:
  6638   00172A  EFA0  F00B         	goto	i2l1242
  6639   00172E                     i2u666_40:
  6640   00172E  A09E               	btfss	158,0,c	;volatile
  6641   001730  EF9C  F00B         	goto	i2u667_41
  6642   001734  EF9E  F00B         	goto	i2u667_40
  6643   001738                     i2u667_41:
  6644   001738  EFA0  F00B         	goto	i2l1242
  6645   00173C                     i2u667_40:
  6646   00173C                     
  6647                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 109:         TMR1_ISR();
  6648   00173C  EC6A  F017         	call	_TMR1_ISR	;wreg free
  6649   001740                     i2l1242:
  6650                           
  6651                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 112:     if((1 == PIE1bits.TMR2IE) && (1
      +                           == PIR1bits.TMR2IF)){
  6652   001740  A29D               	btfss	157,1,c	;volatile
  6653   001742  EFA5  F00B         	goto	i2u668_41
  6654   001746  EFA7  F00B         	goto	i2u668_40
  6655   00174A                     i2u668_41:
  6656   00174A  EFB0  F00B         	goto	i2l1244
  6657   00174E                     i2u668_40:
  6658   00174E  A29E               	btfss	158,1,c	;volatile
  6659   001750  EFAC  F00B         	goto	i2u669_41
  6660   001754  EFAE  F00B         	goto	i2u669_40
  6661   001758                     i2u669_41:
  6662   001758  EFB0  F00B         	goto	i2l1244
  6663   00175C                     i2u669_40:
  6664   00175C                     
  6665                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 113:         TMR2_ISR();
  6666   00175C  EC76  F017         	call	_TMR2_ISR	;wreg free
  6667   001760                     i2l1244:
  6668                           
  6669                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 116:     if((1 == PIE2bits.TMR3IE) && (1
      +                           == PIR2bits.TMR3IF)){
  6670   001760  A2A0               	btfss	160,1,c	;volatile
  6671   001762  EFB5  F00B         	goto	i2u670_41
  6672   001766  EFB7  F00B         	goto	i2u670_40
  6673   00176A                     i2u670_41:
  6674   00176A  EFC0  F00B         	goto	i2l1246
  6675   00176E                     i2u670_40:
  6676   00176E  A2A1               	btfss	161,1,c	;volatile
  6677   001770  EFBC  F00B         	goto	i2u671_41
  6678   001774  EFBE  F00B         	goto	i2u671_40
  6679   001778                     i2u671_41:
  6680   001778  EFC0  F00B         	goto	i2l1246
  6681   00177C                     i2u671_40:
  6682   00177C                     
  6683                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 117:         TMR3_ISR();
  6684   00177C  EC64  F017         	call	_TMR3_ISR	;wreg free
  6685   001780                     i2l1246:
  6686                           
  6687                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 121:     if((1 == PIE1bits.TXIE) && (1 =
      +                          = PIR1bits.TXIF)){
  6688   001780  A89D               	btfss	157,4,c	;volatile
  6689   001782  EFC5  F00B         	goto	i2u672_41
  6690   001786  EFC7  F00B         	goto	i2u672_40
  6691   00178A                     i2u672_41:
  6692   00178A  EFD0  F00B         	goto	i2l1248
  6693   00178E                     i2u672_40:
  6694   00178E  A89E               	btfss	158,4,c	;volatile
  6695   001790  EFCC  F00B         	goto	i2u673_41
  6696   001794  EFCE  F00B         	goto	i2u673_40
  6697   001798                     i2u673_41:
  6698   001798  EFD0  F00B         	goto	i2l1248
  6699   00179C                     i2u673_40:
  6700   00179C                     
  6701                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 122:         EUSART_TX_ISR();
  6702   00179C  EC87  F017         	call	_EUSART_TX_ISR	;wreg free
  6703   0017A0                     i2l1248:
  6704                           
  6705                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 125:     if((1 == PIE1bits.RCIE) && (1 =
      +                          = PIR1bits.RCIF)){
  6706   0017A0  AA9D               	btfss	157,5,c	;volatile
  6707   0017A2  EFD5  F00B         	goto	i2u674_41
  6708   0017A6  EFD7  F00B         	goto	i2u674_40
  6709   0017AA                     i2u674_41:
  6710   0017AA  EFE0  F00B         	goto	i2l1250
  6711   0017AE                     i2u674_40:
  6712   0017AE  AA9E               	btfss	158,5,c	;volatile
  6713   0017B0  EFDC  F00B         	goto	i2u675_41
  6714   0017B4  EFDE  F00B         	goto	i2u675_40
  6715   0017B8                     i2u675_41:
  6716   0017B8  EFE0  F00B         	goto	i2l1250
  6717   0017BC                     i2u675_40:
  6718   0017BC                     
  6719                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 126:         EUSART_RX_ISR();
  6720   0017BC  EC92  F017         	call	_EUSART_RX_ISR	;wreg free
  6721   0017C0                     i2l1250:
  6722                           
  6723                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 131:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF)){
  6724   0017C0  A69D               	btfss	157,3,c	;volatile
  6725   0017C2  EFE5  F00B         	goto	i2u676_41
  6726   0017C6  EFE7  F00B         	goto	i2u676_40
  6727   0017CA                     i2u676_41:
  6728   0017CA  EFF0  F00B         	goto	i2l1252
  6729   0017CE                     i2u676_40:
  6730   0017CE  A69E               	btfss	158,3,c	;volatile
  6731   0017D0  EFEC  F00B         	goto	i2u677_41
  6732   0017D4  EFEE  F00B         	goto	i2u677_40
  6733   0017D8                     i2u677_41:
  6734   0017D8  EFF0  F00B         	goto	i2l1252
  6735   0017DC                     i2u677_40:
  6736   0017DC                     
  6737                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 132:         MSSP_I2C_ISR();
  6738   0017DC  EC7D  F017         	call	_MSSP_I2C_ISR	;wreg free
  6739   0017E0                     i2l1252:
  6740                           
  6741                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 135:     if((1 == PIE2bits.BCLIE) && (1 
      +                          == PIR2bits.BCLIF)){
  6742   0017E0  A6A0               	btfss	160,3,c	;volatile
  6743   0017E2  EFF5  F00B         	goto	i2u678_41
  6744   0017E6  EFF7  F00B         	goto	i2u678_40
  6745   0017EA                     i2u678_41:
  6746   0017EA  EF00  F00C         	goto	i2l1254
  6747   0017EE                     i2u678_40:
  6748   0017EE  A6A1               	btfss	161,3,c	;volatile
  6749   0017F0  EFFC  F00B         	goto	i2u679_41
  6750   0017F4  EFFE  F00B         	goto	i2u679_40
  6751   0017F8                     i2u679_41:
  6752   0017F8  EF00  F00C         	goto	i2l1254
  6753   0017FC                     i2u679_40:
  6754   0017FC                     
  6755                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 136:         MSSP_I2C_BC_ISR();
  6756   0017FC  EC7F  F017         	call	_MSSP_I2C_BC_ISR	;wreg free
  6757   001800                     i2l1254:
  6758                           
  6759                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 139:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF)){
  6760   001800  A69D               	btfss	157,3,c	;volatile
  6761   001802  EF05  F00C         	goto	i2u680_41
  6762   001806  EF07  F00C         	goto	i2u680_40
  6763   00180A                     i2u680_41:
  6764   00180A  EF10  F00C         	goto	i2l1256
  6765   00180E                     i2u680_40:
  6766   00180E  A69E               	btfss	158,3,c	;volatile
  6767   001810  EF0C  F00C         	goto	i2u681_41
  6768   001814  EF0E  F00C         	goto	i2u681_40
  6769   001818                     i2u681_41:
  6770   001818  EF10  F00C         	goto	i2l1256
  6771   00181C                     i2u681_40:
  6772   00181C                     
  6773                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 140:         MSSP_SPI_ISR();
  6774   00181C  EC91  F017         	call	_MSSP_SPI_ISR	;wreg free
  6775   001820                     i2l1256:
  6776                           
  6777                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 145:     if((1 == PIE1bits.CCP1IE) && (1
      +                           == PIR1bits.CCP1IF)){
  6778   001820  A49D               	btfss	157,2,c	;volatile
  6779   001822  EF15  F00C         	goto	i2u682_41
  6780   001826  EF17  F00C         	goto	i2u682_40
  6781   00182A                     i2u682_41:
  6782   00182A  EF20  F00C         	goto	i2l1258
  6783   00182E                     i2u682_40:
  6784   00182E  A49E               	btfss	158,2,c	;volatile
  6785   001830  EF1C  F00C         	goto	i2u683_41
  6786   001834  EF1E  F00C         	goto	i2u683_40
  6787   001838                     i2u683_41:
  6788   001838  EF20  F00C         	goto	i2l1258
  6789   00183C                     i2u683_40:
  6790   00183C                     
  6791                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 146:         CCP1_ISR();
  6792   00183C  EC8B  F017         	call	_CCP1_ISR	;wreg free
  6793   001840                     i2l1258:
  6794                           
  6795                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 149:     if((1 == PIE2bits.CCP2IE) && (1
      +                           == PIR2bits.CCP2IF)){
  6796   001840  A0A0               	btfss	160,0,c	;volatile
  6797   001842  EF25  F00C         	goto	i2u684_41
  6798   001846  EF27  F00C         	goto	i2u684_40
  6799   00184A                     i2u684_41:
  6800   00184A  EF30  F00C         	goto	i2l1261
  6801   00184E                     i2u684_40:
  6802   00184E  A0A1               	btfss	161,0,c	;volatile
  6803   001850  EF2C  F00C         	goto	i2u685_41
  6804   001854  EF2E  F00C         	goto	i2u685_40
  6805   001858                     i2u685_41:
  6806   001858  EF30  F00C         	goto	i2l1261
  6807   00185C                     i2u685_40:
  6808   00185C                     
  6809                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 150:         CCP2_ISR();
  6810   00185C  EC89  F017         	call	_CCP2_ISR	;wreg free
  6811   001860                     i2l1261:
  6812   001860  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6813   001862  0011               	retfie		f
  6814   001864                     __end_of_InterruptManager:
  6815                           	callstack 0
  6816                           
  6817 ;; *************** function _TMR3_ISR *****************
  6818 ;; Defined at:
  6819 ;;		line 102 in file "MCAL_Layer/Timer3/hal_timr3.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;		None
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;		None
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  1    wreg      void 
  6826 ;; Registers used:
  6827 ;;		wreg, status,2
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6837 ;;Total ram usage:        0 bytes
  6838 ;; Hardware stack levels used: 1
  6839 ;; This function calls:
  6840 ;;		Nothing
  6841 ;; This function is called by:
  6842 ;;		_InterruptManager
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           	psect	text41
  6847   002EC8                     __ptext41:
  6848                           	callstack 0
  6849   002EC8                     _TMR3_ISR:
  6850                           	callstack 23
  6851   002EC8                     
  6852                           ;MCAL_Layer/Timer3/hal_timr3.c: 103:     (PIR2bits.TMR3IF = 0);
  6853   002EC8  92A1               	bcf	161,1,c	;volatile
  6854   002ECA                     
  6855                           ;MCAL_Layer/Timer3/hal_timr3.c: 104:     TMR3H = (timer3_preload) >> 8;
  6856   002ECA  5002               	movf	(_timer3_preload+1)^0,w,c
  6857   002ECC  6EB3               	movwf	179,c	;volatile
  6858   002ECE                     
  6859                           ;MCAL_Layer/Timer3/hal_timr3.c: 105:     TMR3L = (uint8)(timer3_preload);
  6860   002ECE  C001  FFB2         	movff	_timer3_preload,4018	;volatile
  6861   002ED2  0012               	return		;funcret
  6862   002ED4                     __end_of_TMR3_ISR:
  6863                           	callstack 0
  6864                           
  6865 ;; *************** function _TMR2_ISR *****************
  6866 ;; Defined at:
  6867 ;;		line 95 in file "MCAL_Layer/Timer2/hal_timr2.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;		None
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;		None
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  1    wreg      void 
  6874 ;; Registers used:
  6875 ;;		None
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6885 ;;Total ram usage:        0 bytes
  6886 ;; Hardware stack levels used: 1
  6887 ;; This function calls:
  6888 ;;		Nothing
  6889 ;; This function is called by:
  6890 ;;		_InterruptManager
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           	psect	text42
  6895   002EEC                     __ptext42:
  6896                           	callstack 0
  6897   002EEC                     _TMR2_ISR:
  6898                           	callstack 23
  6899   002EEC                     
  6900                           ;MCAL_Layer/Timer2/hal_timr2.c: 96:     (PIR1bits.TMR2IF = 0);
  6901   002EEC  929E               	bcf	158,1,c	;volatile
  6902                           
  6903                           ;MCAL_Layer/Timer2/hal_timr2.c: 97:     TMR2 = timer2_preload;
  6904   002EEE  C02C  FFCC         	movff	_timer2_preload,4044	;volatile
  6905   002EF2  0012               	return		;funcret
  6906   002EF4                     __end_of_TMR2_ISR:
  6907                           	callstack 0
  6908                           
  6909 ;; *************** function _TMR1_ISR *****************
  6910 ;; Defined at:
  6911 ;;		line 102 in file "MCAL_Layer/Timer1/hal_timr1.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;		None
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;		None
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  1    wreg      void 
  6918 ;; Registers used:
  6919 ;;		wreg, status,2
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6929 ;;Total ram usage:        0 bytes
  6930 ;; Hardware stack levels used: 1
  6931 ;; This function calls:
  6932 ;;		Nothing
  6933 ;; This function is called by:
  6934 ;;		_InterruptManager
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938                           	psect	text43
  6939   002ED4                     __ptext43:
  6940                           	callstack 0
  6941   002ED4                     _TMR1_ISR:
  6942                           	callstack 23
  6943   002ED4                     
  6944                           ;MCAL_Layer/Timer1/hal_timr1.c: 103:     (PIR1bits.TMR1IF = 0);
  6945   002ED4  909E               	bcf	158,0,c	;volatile
  6946   002ED6                     
  6947                           ;MCAL_Layer/Timer1/hal_timr1.c: 104:     TMR1H = (timer1_preload) >> 8;
  6948   002ED6  5004               	movf	(_timer1_preload+1)^0,w,c	;volatile
  6949   002ED8  6ECF               	movwf	207,c	;volatile
  6950   002EDA                     
  6951                           ;MCAL_Layer/Timer1/hal_timr1.c: 105:     TMR1L = (uint8)(timer1_preload);
  6952   002EDA  C003  FFCE         	movff	_timer1_preload,4046	;volatile
  6953   002EDE  0012               	return		;funcret
  6954   002EE0                     __end_of_TMR1_ISR:
  6955                           	callstack 0
  6956                           
  6957 ;; *************** function _TMR0_ISR *****************
  6958 ;; Defined at:
  6959 ;;		line 107 in file "MCAL_Layer/Timer0/hal_timr0.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;		None
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;		None
  6964 ;; Return value:  Size  Location     Type
  6965 ;;                  1    wreg      void 
  6966 ;; Registers used:
  6967 ;;		wreg, status,2
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/0
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6977 ;;Total ram usage:        0 bytes
  6978 ;; Hardware stack levels used: 1
  6979 ;; This function calls:
  6980 ;;		Nothing
  6981 ;; This function is called by:
  6982 ;;		_InterruptManager
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           	psect	text44
  6987   002EE0                     __ptext44:
  6988                           	callstack 0
  6989   002EE0                     _TMR0_ISR:
  6990                           	callstack 23
  6991   002EE0                     
  6992                           ;MCAL_Layer/Timer0/hal_timr0.c: 108:     (INTCONbits.TMR0IF = 0);
  6993   002EE0  94F2               	bcf	242,2,c	;volatile
  6994   002EE2                     
  6995                           ;MCAL_Layer/Timer0/hal_timr0.c: 109:     TMR0H = (timer0_preload) >> 8;
  6996   002EE2  5008               	movf	(_timer0_preload+1)^0,w,c
  6997   002EE4  6ED7               	movwf	215,c	;volatile
  6998   002EE6                     
  6999                           ;MCAL_Layer/Timer0/hal_timr0.c: 110:     TMR0L = (uint8)(timer0_preload);
  7000   002EE6  C007  FFD6         	movff	_timer0_preload,4054	;volatile
  7001   002EEA  0012               	return		;funcret
  7002   002EEC                     __end_of_TMR0_ISR:
  7003                           	callstack 0
  7004                           
  7005 ;; *************** function _RB7_ISR *****************
  7006 ;; Defined at:
  7007 ;;		line 164 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;  RB7_Source      1    wreg     unsigned char 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;  RB7_Source      1    0[COMRAM] unsigned char 
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  1    wreg      void 
  7014 ;; Registers used:
  7015 ;;		wreg, status,2, status,0
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7024 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;Total ram usage:        1 bytes
  7026 ;; Hardware stack levels used: 1
  7027 ;; This function calls:
  7028 ;;		Nothing
  7029 ;; This function is called by:
  7030 ;;		_InterruptManager
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text45
  7035   002E50                     __ptext45:
  7036                           	callstack 0
  7037   002E50                     _RB7_ISR:
  7038                           	callstack 23
  7039                           
  7040                           ;incstack = 0
  7041                           ;RB7_ISR@RB7_Source stored from wreg
  7042   002E50  6E38               	movwf	RB7_ISR@RB7_Source^0,c
  7043   002E52                     
  7044                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:     (INTCONbits.RBIF = 0);
  7045   002E52  90F2               	bcf	242,0,c	;volatile
  7046   002E54                     
  7047                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 169:     if(0 == RB7_Source){
  7048   002E54  5038               	movf	RB7_ISR@RB7_Source^0,w,c
  7049   002E56  A4D8               	btfss	status,2,c
  7050   002E58  EF30  F017         	goto	i2u88_41
  7051   002E5C  EF32  F017         	goto	i2u88_40
  7052   002E60                     i2u88_41:
  7053   002E60  EF34  F017         	goto	i2l3286
  7054   002E64                     i2u88_40:
  7055   002E64  EF34  F017         	goto	i2l1041
  7056   002E68                     i2l3286:
  7057   002E68                     i2l1041:
  7058   002E68  0012               	return		;funcret
  7059   002E6A                     __end_of_RB7_ISR:
  7060                           	callstack 0
  7061                           
  7062 ;; *************** function _RB6_ISR *****************
  7063 ;; Defined at:
  7064 ;;		line 145 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7065 ;; Parameters:    Size  Location     Type
  7066 ;;  RB6_Source      1    wreg     unsigned char 
  7067 ;; Auto vars:     Size  Location     Type
  7068 ;;  RB6_Source      1    0[COMRAM] unsigned char 
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  1    wreg      void 
  7071 ;; Registers used:
  7072 ;;		wreg, status,2, status,0
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7082 ;;Total ram usage:        1 bytes
  7083 ;; Hardware stack levels used: 1
  7084 ;; This function calls:
  7085 ;;		Nothing
  7086 ;; This function is called by:
  7087 ;;		_InterruptManager
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091                           	psect	text46
  7092   002E6A                     __ptext46:
  7093                           	callstack 0
  7094   002E6A                     _RB6_ISR:
  7095                           	callstack 23
  7096                           
  7097                           ;incstack = 0
  7098                           ;RB6_ISR@RB6_Source stored from wreg
  7099   002E6A  6E38               	movwf	RB6_ISR@RB6_Source^0,c
  7100   002E6C                     
  7101                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 147:     (INTCONbits.RBIF = 0);
  7102   002E6C  90F2               	bcf	242,0,c	;volatile
  7103   002E6E                     
  7104                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 150:     if(0 == RB6_Source){
  7105   002E6E  5038               	movf	RB6_ISR@RB6_Source^0,w,c
  7106   002E70  A4D8               	btfss	status,2,c
  7107   002E72  EF3D  F017         	goto	i2u87_41
  7108   002E76  EF3F  F017         	goto	i2u87_40
  7109   002E7A                     i2u87_41:
  7110   002E7A  EF41  F017         	goto	i2l3272
  7111   002E7E                     i2u87_40:
  7112   002E7E  EF41  F017         	goto	i2l1030
  7113   002E82                     i2l3272:
  7114   002E82                     i2l1030:
  7115   002E82  0012               	return		;funcret
  7116   002E84                     __end_of_RB6_ISR:
  7117                           	callstack 0
  7118                           
  7119 ;; *************** function _RB5_ISR *****************
  7120 ;; Defined at:
  7121 ;;		line 126 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;  RB5_Source      1    wreg     unsigned char 
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;  RB5_Source      1    0[COMRAM] unsigned char 
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  1    wreg      void 
  7128 ;; Registers used:
  7129 ;;		wreg, status,2, status,0
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7136 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7138 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7139 ;;Total ram usage:        1 bytes
  7140 ;; Hardware stack levels used: 1
  7141 ;; This function calls:
  7142 ;;		Nothing
  7143 ;; This function is called by:
  7144 ;;		_InterruptManager
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           	psect	text47
  7149   002E84                     __ptext47:
  7150                           	callstack 0
  7151   002E84                     _RB5_ISR:
  7152                           	callstack 23
  7153                           
  7154                           ;incstack = 0
  7155                           ;RB5_ISR@RB5_Source stored from wreg
  7156   002E84  6E38               	movwf	RB5_ISR@RB5_Source^0,c
  7157   002E86                     
  7158                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 128:     (INTCONbits.RBIF = 0);
  7159   002E86  90F2               	bcf	242,0,c	;volatile
  7160   002E88                     
  7161                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 131:     if(0 == RB5_Source){
  7162   002E88  5038               	movf	RB5_ISR@RB5_Source^0,w,c
  7163   002E8A  A4D8               	btfss	status,2,c
  7164   002E8C  EF4A  F017         	goto	i2u86_41
  7165   002E90  EF4C  F017         	goto	i2u86_40
  7166   002E94                     i2u86_41:
  7167   002E94  EF4E  F017         	goto	i2l3258
  7168   002E98                     i2u86_40:
  7169   002E98  EF4E  F017         	goto	i2l1019
  7170   002E9C                     i2l3258:
  7171   002E9C                     i2l1019:
  7172   002E9C  0012               	return		;funcret
  7173   002E9E                     __end_of_RB5_ISR:
  7174                           	callstack 0
  7175                           
  7176 ;; *************** function _RB4_ISR *****************
  7177 ;; Defined at:
  7178 ;;		line 107 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;  RB4_Source      1    wreg     unsigned char 
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;  RB4_Source      1    0[COMRAM] unsigned char 
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  1    wreg      void 
  7185 ;; Registers used:
  7186 ;;		wreg, status,2, status,0
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7195 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7196 ;;Total ram usage:        1 bytes
  7197 ;; Hardware stack levels used: 1
  7198 ;; This function calls:
  7199 ;;		Nothing
  7200 ;; This function is called by:
  7201 ;;		_InterruptManager
  7202 ;; This function uses a non-reentrant model
  7203 ;;
  7204                           
  7205                           	psect	text48
  7206   002E9E                     __ptext48:
  7207                           	callstack 0
  7208   002E9E                     _RB4_ISR:
  7209                           	callstack 23
  7210                           
  7211                           ;incstack = 0
  7212                           ;RB4_ISR@RB4_Source stored from wreg
  7213   002E9E  6E38               	movwf	RB4_ISR@RB4_Source^0,c
  7214   002EA0                     
  7215                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 109:     (INTCONbits.RBIF = 0);
  7216   002EA0  90F2               	bcf	242,0,c	;volatile
  7217   002EA2                     
  7218                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 112:     if(0 == RB4_Source){
  7219   002EA2  5038               	movf	RB4_ISR@RB4_Source^0,w,c
  7220   002EA4  A4D8               	btfss	status,2,c
  7221   002EA6  EF57  F017         	goto	i2u85_41
  7222   002EAA  EF59  F017         	goto	i2u85_40
  7223   002EAE                     i2u85_41:
  7224   002EAE  EF5B  F017         	goto	i2l3244
  7225   002EB2                     i2u85_40:
  7226   002EB2  EF5B  F017         	goto	i2l1008
  7227   002EB6                     i2l3244:
  7228   002EB6                     i2l1008:
  7229   002EB6  0012               	return		;funcret
  7230   002EB8                     __end_of_RB4_ISR:
  7231                           	callstack 0
  7232                           
  7233 ;; *************** function _MSSP_SPI_ISR *****************
  7234 ;; Defined at:
  7235 ;;		line 105 in file "MCAL_Layer/SPI/hal_spi.c"
  7236 ;; Parameters:    Size  Location     Type
  7237 ;;		None
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;		None
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  1    wreg      void 
  7242 ;; Registers used:
  7243 ;;		None
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7253 ;;Total ram usage:        0 bytes
  7254 ;; Hardware stack levels used: 1
  7255 ;; This function calls:
  7256 ;;		Nothing
  7257 ;; This function is called by:
  7258 ;;		_InterruptManager
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           	psect	text49
  7263   002F22                     __ptext49:
  7264                           	callstack 0
  7265   002F22                     _MSSP_SPI_ISR:
  7266                           	callstack 23
  7267   002F22  0012               	return		;funcret
  7268   002F24                     __end_of_MSSP_SPI_ISR:
  7269                           	callstack 0
  7270                           
  7271 ;; *************** function _MSSP_I2C_ISR *****************
  7272 ;; Defined at:
  7273 ;;		line 242 in file "MCAL_Layer/I2C/hal_i2c.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;		None
  7276 ;; Auto vars:     Size  Location     Type
  7277 ;;		None
  7278 ;; Return value:  Size  Location     Type
  7279 ;;                  1    wreg      void 
  7280 ;; Registers used:
  7281 ;;		None
  7282 ;; Tracked objects:
  7283 ;;		On entry : 0/0
  7284 ;;		On exit  : 0/0
  7285 ;;		Unchanged: 0/0
  7286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7291 ;;Total ram usage:        0 bytes
  7292 ;; Hardware stack levels used: 1
  7293 ;; This function calls:
  7294 ;;		Nothing
  7295 ;; This function is called by:
  7296 ;;		_InterruptManager
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           
  7300                           	psect	text50
  7301   002EFA                     __ptext50:
  7302                           	callstack 0
  7303   002EFA                     _MSSP_I2C_ISR:
  7304                           	callstack 23
  7305   002EFA                     
  7306                           ;MCAL_Layer/I2C/hal_i2c.c: 244:     (PIR1bits.SSPIF = 0);
  7307   002EFA  969E               	bcf	158,3,c	;volatile
  7308   002EFC  0012               	return		;funcret
  7309   002EFE                     __end_of_MSSP_I2C_ISR:
  7310                           	callstack 0
  7311                           
  7312 ;; *************** function _MSSP_I2C_BC_ISR *****************
  7313 ;; Defined at:
  7314 ;;		line 251 in file "MCAL_Layer/I2C/hal_i2c.c"
  7315 ;; Parameters:    Size  Location     Type
  7316 ;;		None
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;		None
  7319 ;; Return value:  Size  Location     Type
  7320 ;;                  1    wreg      void 
  7321 ;; Registers used:
  7322 ;;		None
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7332 ;;Total ram usage:        0 bytes
  7333 ;; Hardware stack levels used: 1
  7334 ;; This function calls:
  7335 ;;		Nothing
  7336 ;; This function is called by:
  7337 ;;		_InterruptManager
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341                           	psect	text51
  7342   002EFE                     __ptext51:
  7343                           	callstack 0
  7344   002EFE                     _MSSP_I2C_BC_ISR:
  7345                           	callstack 23
  7346   002EFE                     
  7347                           ;MCAL_Layer/I2C/hal_i2c.c: 253:     (PIR2bits.BCLIF = 0);
  7348   002EFE  96A1               	bcf	161,3,c	;volatile
  7349   002F00  0012               	return		;funcret
  7350   002F02                     __end_of_MSSP_I2C_BC_ISR:
  7351                           	callstack 0
  7352                           
  7353 ;; *************** function _INT2_ISR *****************
  7354 ;; Defined at:
  7355 ;;		line 95 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7356 ;; Parameters:    Size  Location     Type
  7357 ;;		None
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;		None
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  1    wreg      void 
  7362 ;; Registers used:
  7363 ;;		None
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7373 ;;Total ram usage:        0 bytes
  7374 ;; Hardware stack levels used: 1
  7375 ;; This function calls:
  7376 ;;		Nothing
  7377 ;; This function is called by:
  7378 ;;		_InterruptManager
  7379 ;; This function uses a non-reentrant model
  7380 ;;
  7381                           
  7382                           	psect	text52
  7383   002F02                     __ptext52:
  7384                           	callstack 0
  7385   002F02                     _INT2_ISR:
  7386                           	callstack 23
  7387   002F02                     
  7388                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 97:     (INTCON3bits.INT2IF = 0);
  7389   002F02  92F0               	bcf	240,1,c	;volatile
  7390   002F04  0012               	return		;funcret
  7391   002F06                     __end_of_INT2_ISR:
  7392                           	callstack 0
  7393                           
  7394 ;; *************** function _INT1_ISR *****************
  7395 ;; Defined at:
  7396 ;;		line 86 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;		None
  7399 ;; Auto vars:     Size  Location     Type
  7400 ;;		None
  7401 ;; Return value:  Size  Location     Type
  7402 ;;                  1    wreg      void 
  7403 ;; Registers used:
  7404 ;;		None
  7405 ;; Tracked objects:
  7406 ;;		On entry : 0/0
  7407 ;;		On exit  : 0/0
  7408 ;;		Unchanged: 0/0
  7409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7414 ;;Total ram usage:        0 bytes
  7415 ;; Hardware stack levels used: 1
  7416 ;; This function calls:
  7417 ;;		Nothing
  7418 ;; This function is called by:
  7419 ;;		_InterruptManager
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text53
  7424   002F06                     __ptext53:
  7425                           	callstack 0
  7426   002F06                     _INT1_ISR:
  7427                           	callstack 23
  7428   002F06                     
  7429                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 88:     (INTCON3bits.INT1IF = 0);
  7430   002F06  90F0               	bcf	240,0,c	;volatile
  7431   002F08  0012               	return		;funcret
  7432   002F0A                     __end_of_INT1_ISR:
  7433                           	callstack 0
  7434                           
  7435 ;; *************** function _INT0_ISR *****************
  7436 ;; Defined at:
  7437 ;;		line 74 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;		None
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;		None
  7442 ;; Return value:  Size  Location     Type
  7443 ;;                  1    wreg      void 
  7444 ;; Registers used:
  7445 ;;		None
  7446 ;; Tracked objects:
  7447 ;;		On entry : 0/0
  7448 ;;		On exit  : 0/0
  7449 ;;		Unchanged: 0/0
  7450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7455 ;;Total ram usage:        0 bytes
  7456 ;; Hardware stack levels used: 1
  7457 ;; This function calls:
  7458 ;;		Nothing
  7459 ;; This function is called by:
  7460 ;;		_InterruptManager
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           
  7464                           	psect	text54
  7465   002F0A                     __ptext54:
  7466                           	callstack 0
  7467   002F0A                     _INT0_ISR:
  7468                           	callstack 23
  7469   002F0A                     
  7470                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 76:     (INTCONbits.INT0IF = 0);
  7471   002F0A  92F2               	bcf	242,1,c	;volatile
  7472   002F0C  0012               	return		;funcret
  7473   002F0E                     __end_of_INT0_ISR:
  7474                           	callstack 0
  7475                           
  7476 ;; *************** function _EUSART_TX_ISR *****************
  7477 ;; Defined at:
  7478 ;;		line 243 in file "MCAL_Layer/usart/hal_usart.c"
  7479 ;; Parameters:    Size  Location     Type
  7480 ;;		None
  7481 ;; Auto vars:     Size  Location     Type
  7482 ;;		None
  7483 ;; Return value:  Size  Location     Type
  7484 ;;                  1    wreg      void 
  7485 ;; Registers used:
  7486 ;;		None
  7487 ;; Tracked objects:
  7488 ;;		On entry : 0/0
  7489 ;;		On exit  : 0/0
  7490 ;;		Unchanged: 0/0
  7491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7496 ;;Total ram usage:        0 bytes
  7497 ;; Hardware stack levels used: 1
  7498 ;; This function calls:
  7499 ;;		Nothing
  7500 ;; This function is called by:
  7501 ;;		_InterruptManager
  7502 ;; This function uses a non-reentrant model
  7503 ;;
  7504                           
  7505                           	psect	text55
  7506   002F0E                     __ptext55:
  7507                           	callstack 0
  7508   002F0E                     _EUSART_TX_ISR:
  7509                           	callstack 23
  7510   002F0E                     
  7511                           ;MCAL_Layer/usart/hal_usart.c: 244:     (PIE1bits.TXIE = 0);
  7512   002F0E  989D               	bcf	157,4,c	;volatile
  7513   002F10  0012               	return		;funcret
  7514   002F12                     __end_of_EUSART_TX_ISR:
  7515                           	callstack 0
  7516                           
  7517 ;; *************** function _EUSART_RX_ISR *****************
  7518 ;; Defined at:
  7519 ;;		line 250 in file "MCAL_Layer/usart/hal_usart.c"
  7520 ;; Parameters:    Size  Location     Type
  7521 ;;		None
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;		None
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  1    wreg      void 
  7526 ;; Registers used:
  7527 ;;		wreg, status,2, status,0
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7537 ;;Total ram usage:        0 bytes
  7538 ;; Hardware stack levels used: 1
  7539 ;; This function calls:
  7540 ;;		Nothing
  7541 ;; This function is called by:
  7542 ;;		_InterruptManager
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           	psect	text56
  7547   002F24                     __ptext56:
  7548                           	callstack 0
  7549   002F24                     _EUSART_RX_ISR:
  7550                           	callstack 23
  7551   002F24  0012               	return		;funcret
  7552   002F26                     __end_of_EUSART_RX_ISR:
  7553                           	callstack 0
  7554                           
  7555 ;; *************** function _CCP2_ISR *****************
  7556 ;; Defined at:
  7557 ;;		line 260 in file "MCAL_Layer/CCP/hal_ccp.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;		None
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;		None
  7562 ;; Return value:  Size  Location     Type
  7563 ;;                  1    wreg      void 
  7564 ;; Registers used:
  7565 ;;		None
  7566 ;; Tracked objects:
  7567 ;;		On entry : 0/0
  7568 ;;		On exit  : 0/0
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7575 ;;Total ram usage:        0 bytes
  7576 ;; Hardware stack levels used: 1
  7577 ;; This function calls:
  7578 ;;		Nothing
  7579 ;; This function is called by:
  7580 ;;		_InterruptManager
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           	psect	text57
  7585   002F12                     __ptext57:
  7586                           	callstack 0
  7587   002F12                     _CCP2_ISR:
  7588                           	callstack 23
  7589   002F12                     
  7590                           ;MCAL_Layer/CCP/hal_ccp.c: 261:     (PIR2bits.CCP2IF = 0);
  7591   002F12  90A1               	bcf	161,0,c	;volatile
  7592   002F14  0012               	return		;funcret
  7593   002F16                     __end_of_CCP2_ISR:
  7594                           	callstack 0
  7595                           
  7596 ;; *************** function _CCP1_ISR *****************
  7597 ;; Defined at:
  7598 ;;		line 252 in file "MCAL_Layer/CCP/hal_ccp.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;		None
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;		None
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  1    wreg      void 
  7605 ;; Registers used:
  7606 ;;		None
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7616 ;;Total ram usage:        0 bytes
  7617 ;; Hardware stack levels used: 1
  7618 ;; This function calls:
  7619 ;;		Nothing
  7620 ;; This function is called by:
  7621 ;;		_InterruptManager
  7622 ;; This function uses a non-reentrant model
  7623 ;;
  7624                           
  7625                           	psect	text58
  7626   002F16                     __ptext58:
  7627                           	callstack 0
  7628   002F16                     _CCP1_ISR:
  7629                           	callstack 23
  7630   002F16                     
  7631                           ;MCAL_Layer/CCP/hal_ccp.c: 253:     (PIR1bits.CCP1IF = 0);
  7632   002F16  949E               	bcf	158,2,c	;volatile
  7633   002F18  0012               	return		;funcret
  7634   002F1A                     __end_of_CCP1_ISR:
  7635                           	callstack 0
  7636                           
  7637 ;; *************** function _ADC_ISR *****************
  7638 ;; Defined at:
  7639 ;;		line 296 in file "MCAL_Layer/ADC/hal_adc.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;		None
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;		None
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  1    wreg      void 
  7646 ;; Registers used:
  7647 ;;		None
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7657 ;;Total ram usage:        0 bytes
  7658 ;; Hardware stack levels used: 1
  7659 ;; This function calls:
  7660 ;;		Nothing
  7661 ;; This function is called by:
  7662 ;;		_InterruptManager
  7663 ;; This function uses a non-reentrant model
  7664 ;;
  7665                           
  7666                           	psect	text59
  7667   002F1A                     __ptext59:
  7668                           	callstack 0
  7669   002F1A                     _ADC_ISR:
  7670                           	callstack 23
  7671   002F1A                     
  7672                           ;MCAL_Layer/ADC/hal_adc.c: 297:     (PIR1bits.ADIF = 0);
  7673   002F1A  9C9E               	bcf	158,6,c	;volatile
  7674   002F1C  0012               	return		;funcret
  7675   002F1E                     __end_of_ADC_ISR:
  7676                           	callstack 0
  7677                           
  7678                           	psect	rparam
  7679   000000                     
  7680                           	psect	temp
  7681   000079                     btemp:
  7682                           	callstack 0
  7683   000079                     	ds	1
  7684   000000                     int$flags	set	btemp
  7685   000000                     wtemp8	set	btemp+1
  7686   000000                     ttemp5	set	btemp+1
  7687   000000                     ttemp6	set	btemp+4
  7688   000000                     ttemp7	set	btemp+8
  7689                           
  7690                           	psect	idloc
  7691                           
  7692                           ;Config register IDLOC0 @ 0x200000
  7693                           ;	unspecified, using default values
  7694   200000                     	org	2097152
  7695   200000  FF                 	db	255
  7696                           
  7697                           ;Config register IDLOC1 @ 0x200001
  7698                           ;	unspecified, using default values
  7699   200001                     	org	2097153
  7700   200001  FF                 	db	255
  7701                           
  7702                           ;Config register IDLOC2 @ 0x200002
  7703                           ;	unspecified, using default values
  7704   200002                     	org	2097154
  7705   200002  FF                 	db	255
  7706                           
  7707                           ;Config register IDLOC3 @ 0x200003
  7708                           ;	unspecified, using default values
  7709   200003                     	org	2097155
  7710   200003  FF                 	db	255
  7711                           
  7712                           ;Config register IDLOC4 @ 0x200004
  7713                           ;	unspecified, using default values
  7714   200004                     	org	2097156
  7715   200004  FF                 	db	255
  7716                           
  7717                           ;Config register IDLOC5 @ 0x200005
  7718                           ;	unspecified, using default values
  7719   200005                     	org	2097157
  7720   200005  FF                 	db	255
  7721                           
  7722                           ;Config register IDLOC6 @ 0x200006
  7723                           ;	unspecified, using default values
  7724   200006                     	org	2097158
  7725   200006  FF                 	db	255
  7726                           
  7727                           ;Config register IDLOC7 @ 0x200007
  7728                           ;	unspecified, using default values
  7729   200007                     	org	2097159
  7730   200007  FF                 	db	255
  7731                           
  7732                           	psect	config
  7733                           
  7734                           ; Padding undefined space
  7735   300000                     	org	3145728
  7736   300000  FF                 	db	255
  7737                           
  7738                           ;Config register CONFIG1H @ 0x300001
  7739                           ;	Oscillator Selection bits
  7740                           ;	OSC = HS, HS oscillator
  7741                           ;	Fail-Safe Clock Monitor Enable bit
  7742                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7743                           ;	Internal/External Oscillator Switchover bit
  7744                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7745   300001                     	org	3145729
  7746   300001  02                 	db	2
  7747                           
  7748                           ;Config register CONFIG2L @ 0x300002
  7749                           ;	Power-up Timer Enable bit
  7750                           ;	PWRT = OFF, PWRT disabled
  7751                           ;	Brown-out Reset Enable bits
  7752                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  7753                           ;	Brown Out Reset Voltage bits
  7754                           ;	BORV = 1, 
  7755   300002                     	org	3145730
  7756   300002  09                 	db	9
  7757                           
  7758                           ;Config register CONFIG2H @ 0x300003
  7759                           ;	Watchdog Timer Enable bit
  7760                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7761                           ;	Watchdog Timer Postscale Select bits
  7762                           ;	WDTPS = 512, 1:512
  7763   300003                     	org	3145731
  7764   300003  12                 	db	18
  7765                           
  7766                           ; Padding undefined space
  7767   300004                     	org	3145732
  7768   300004  FF                 	db	255
  7769                           
  7770                           ;Config register CONFIG3H @ 0x300005
  7771                           ;	CCP2 MUX bit
  7772                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7773                           ;	PORTB A/D Enable bit
  7774                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7775                           ;	Low-Power Timer1 Oscillator Enable bit
  7776                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7777                           ;	MCLR Pin Enable bit
  7778                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7779   300005                     	org	3145733
  7780   300005  81                 	db	129
  7781                           
  7782                           ;Config register CONFIG4L @ 0x300006
  7783                           ;	Stack Full/Underflow Reset Enable bit
  7784                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7785                           ;	Single-Supply ICSP Enable bit
  7786                           ;	LVP = OFF, Single-Supply ICSP disabled
  7787                           ;	Extended Instruction Set Enable bit
  7788                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7789                           ;	Background Debugger Enable bit
  7790                           ;	DEBUG = 0x1, unprogrammed default
  7791   300006                     	org	3145734
  7792   300006  81                 	db	129
  7793                           
  7794                           ; Padding undefined space
  7795   300007                     	org	3145735
  7796   300007  FF                 	db	255
  7797                           
  7798                           ;Config register CONFIG5L @ 0x300008
  7799                           ;	Code Protection bit
  7800                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7801                           ;	Code Protection bit
  7802                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7803                           ;	Code Protection bit
  7804                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7805                           ;	Code Protection bit
  7806                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7807   300008                     	org	3145736
  7808   300008  0F                 	db	15
  7809                           
  7810                           ;Config register CONFIG5H @ 0x300009
  7811                           ;	Boot Block Code Protection bit
  7812                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7813                           ;	Data EEPROM Code Protection bit
  7814                           ;	CPD = OFF, Data EEPROM not code-protected
  7815   300009                     	org	3145737
  7816   300009  C0                 	db	192
  7817                           
  7818                           ;Config register CONFIG6L @ 0x30000A
  7819                           ;	Write Protection bit
  7820                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7821                           ;	Write Protection bit
  7822                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7823                           ;	Write Protection bit
  7824                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7825                           ;	Write Protection bit
  7826                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7827   30000A                     	org	3145738
  7828   30000A  0F                 	db	15
  7829                           
  7830                           ;Config register CONFIG6H @ 0x30000B
  7831                           ;	Configuration Register Write Protection bit
  7832                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7833                           ;	Boot Block Write Protection bit
  7834                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7835                           ;	Data EEPROM Write Protection bit
  7836                           ;	WRTD = OFF, Data EEPROM not write-protected
  7837   30000B                     	org	3145739
  7838   30000B  E0                 	db	224
  7839                           
  7840                           ;Config register CONFIG7L @ 0x30000C
  7841                           ;	Table Read Protection bit
  7842                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7843                           ;	Table Read Protection bit
  7844                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7845                           ;	Table Read Protection bit
  7846                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7847                           ;	Table Read Protection bit
  7848                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7849   30000C                     	org	3145740
  7850   30000C  0F                 	db	15
  7851                           
  7852                           ;Config register CONFIG7H @ 0x30000D
  7853                           ;	Boot Block Table Read Protection bit
  7854                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7855   30000D                     	org	3145741
  7856   30000D  40                 	db	64
  7857                           tosu	equ	0xFFF
  7858                           tosh	equ	0xFFE
  7859                           tosl	equ	0xFFD
  7860                           stkptr	equ	0xFFC
  7861                           pclatu	equ	0xFFB
  7862                           pclath	equ	0xFFA
  7863                           pcl	equ	0xFF9
  7864                           tblptru	equ	0xFF8
  7865                           tblptrh	equ	0xFF7
  7866                           tblptrl	equ	0xFF6
  7867                           tablat	equ	0xFF5
  7868                           prodh	equ	0xFF4
  7869                           prodl	equ	0xFF3
  7870                           indf0	equ	0xFEF
  7871                           postinc0	equ	0xFEE
  7872                           postdec0	equ	0xFED
  7873                           preinc0	equ	0xFEC
  7874                           plusw0	equ	0xFEB
  7875                           fsr0h	equ	0xFEA
  7876                           fsr0l	equ	0xFE9
  7877                           wreg	equ	0xFE8
  7878                           indf1	equ	0xFE7
  7879                           postinc1	equ	0xFE6
  7880                           postdec1	equ	0xFE5
  7881                           preinc1	equ	0xFE4
  7882                           plusw1	equ	0xFE3
  7883                           fsr1h	equ	0xFE2
  7884                           fsr1l	equ	0xFE1
  7885                           bsr	equ	0xFE0
  7886                           indf2	equ	0xFDF
  7887                           postinc2	equ	0xFDE
  7888                           postdec2	equ	0xFDD
  7889                           preinc2	equ	0xFDC
  7890                           plusw2	equ	0xFDB
  7891                           fsr2h	equ	0xFDA
  7892                           fsr2l	equ	0xFD9
  7893                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    16
    Data        66
    BSS         125
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     50     120
    BANK0           128      0     125
    BANK1           256      8       8
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    adc_1$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_GetConversion_Blocking@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_GetConversion_Blocking@conversion_result	PTR unsigned short  size(1) Largest target is 2
		 -> lm35_res_1(COMRAM[2]), lm35_res_2(COMRAM[2]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_GetConversionResult@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned short  size(1) Largest target is 2
		 -> lm35_res_1(COMRAM[2]), lm35_res_2(COMRAM[2]), 

    ADC_Init@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_Init@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_SelectChannel@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_StartConversion@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Capture_Mode_Config@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Config@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Config@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Mode_Config@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Mode_Config@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Set_Duty@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Set_Duty@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Start@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Start@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Stop@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Stop@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    configure_voltage_reference@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    configure_voltage_reference@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    convert_uint16_to_string@str	PTR unsigned char  size(1) Largest target is 7
		 -> lm35_res_1_txt(BANK0[7]), lm35_res_2_txt(BANK0[7]), 

    dc_motor_initialize@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_move_right@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_stop@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    EUSART_ASYNC_RX_Init@_eusart$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pin(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pin(COMRAM[2]), 
		 -> lcd_1(BANK0[6]), lcd_1$lcd_data(BANK0[4]), led_initialize@pin_obj(COMRAM[1]), MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_CLK(COMRAM[1]), 
		 -> MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDI(COMRAM[1]), MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDO(COMRAM[1]), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_CLK(COMRAM[1]), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI(COMRAM[1]), 
		 -> MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO(COMRAM[1]), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pin(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pin(COMRAM[2]), 
		 -> lcd_1(BANK0[6]), lcd_1$lcd_data(BANK0[4]), led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pin(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pin(COMRAM[2]), 
		 -> lcd_1(BANK0[6]), lcd_1$lcd_data(BANK0[4]), led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    I2C_DefaultInterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Receive_Overflow_InterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Report_Write_Collision_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_custom_char@_chr	PTR const unsigned char  size(1) Largest target is 8
		 -> Celsius(BANK0[8]), 

    lcd_4bit_send_custom_char@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 15
		 -> lm35_res_1_txt(BANK0[7]), lm35_res_2_txt(BANK0[7]), STR_4(CODE[15]), STR_5(CODE[15]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    memset@dest	PTR void  size(1) Largest target is 7
		 -> lm35_res_1_txt(BANK0[7]), lm35_res_2_txt(BANK0[7]), 

    memset@p	PTR unsigned char  size(1) Largest target is 7
		 -> lm35_res_1_txt(BANK0[7]), lm35_res_2_txt(BANK0[7]), 

    MSSP_I2C_Init@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1124$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1124$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1835$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1835$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S1835$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    S2356$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2472$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S2472$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S3230$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3395$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3585$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3714$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3908$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3908$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3908$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3908$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S4903$buffer	PTR unsigned char  size(2) Largest target is 0

    S4903$source	PTR const unsigned char  size(2) Largest target is 0

    S706$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    select_result_format@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    select_result_format@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    sp__memset	PTR void  size(1) Largest target is 7
		 -> lm35_res_1_txt(BANK0[7]), lm35_res_2_txt(BANK0[7]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> convert_uint16_to_string@Temp_String(BANK1[6]), 

    Timer0_Init@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Select@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Register_Size_Config@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Mode_Select@_timer$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Init@_timer$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Init@_timer$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Mode_Select@_timer$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR1_InterruptHandler	PTR FTN()volatile void  size(2) Largest target is 1
		 -> NULL(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_send_custom_char->_lcd_4bit_send_char_data_pos
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _dc_motor_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    ___fltol->___flmul
    ___flmul->___xxtofl
    _ADC_Init->_adc_input_channel_port_configure
    _ADC_GetConversion_Blocking->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_configure

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->_RB4_ISR
    _InterruptManager->_RB5_ISR
    _InterruptManager->_RB6_ISR
    _InterruptManager->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_convert_uint16_to_string

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  174626
         _ADC_GetConversion_Blocking
                           _ADC_Init
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
              _application_intialize
           _convert_uint16_to_string
                _dc_motor_initialize
                _dc_motor_move_right
                      _dc_motor_stop
                 _lcd_4bit_intialize
          _lcd_4bit_send_custom_char
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             6     1      5   38763
                                             19 COMRAM     6     1      5
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_custom_char                            7     2      5   75566
                                             24 COMRAM     7     2      5
            _lcd_4bit_send_char_data
        _lcd_4bit_send_char_data_pos
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data_pos                          5     1      4   37828
                                             19 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  4     1      3   19784
                                             15 COMRAM     4     1      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              3     1      2   17582
                                             12 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_intialize                                   4     3      1   27359
                                             15 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   19102
                                             12 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       3     1      2    6006
                                              9 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          2     1      1    5568
                                              9 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        2     1      1    5437
                                              9 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  2     1      1    5437
                                              9 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_initialize                                  2     1      1    8032
                                             12 COMRAM     2     1      1
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_intialize                                   3     2      1    7790
                                              9 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    5195
                                              1 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_intialize                         7     6      1    1091
                                              1 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                            11     8      3    6429
                                             46 COMRAM     3     0      3
                                              0 BANK1      8     8      0
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    15      7    4717
                                             26 COMRAM    20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3871
                                             22 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    3410
                                             11 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              1 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     947
                                              1 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0       2
                _ecu_layer_intialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_intialize                                  1     1      0       1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4    1462
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     466
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     837
                                             40 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2656
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             3     2      1     539
                                              4 COMRAM     3     2      1
   _adc_input_channel_port_configure
        _configure_voltage_reference
               _select_result_format
 ---------------------------------------------------------------------------------
 (2) _select_result_format                                 1     0      1     120
                                              1 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _configure_voltage_reference                          1     0      1     120
                                              1 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion_Blocking                           4     1      3    1584
                                              8 COMRAM     4     1      3
            _ADC_GetConversionResult
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  2     1      1     199
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    4     2      2     417
                                              4 COMRAM     4     2      2
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (2) _adc_input_channel_port_configure                     3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversionResult                              6     4      2     331
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManager                                     0     0      0     120
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                      _EUSART_RX_ISR
                      _EUSART_TX_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _MSSP_I2C_BC_ISR
                       _MSSP_I2C_ISR
                       _MSSP_SPI_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR3_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _MSSP_SPI_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MSSP_I2C_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MSSP_I2C_BC_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_TX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_RX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CCP2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion_Blocking
     _ADC_GetConversionResult
     _ADC_SelectChannel
       _adc_input_channel_port_configure
     _ADC_StartConversion
   _ADC_Init
     _adc_input_channel_port_configure
     _configure_voltage_reference
     _select_result_format
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___xxtofl
   _application_intialize
     _ecu_layer_intialize
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _dc_motor_initialize
     _gpio_pin_intialize
       _gpio_pin_direction_intialize
       _gpio_pin_write_logic
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic
   _lcd_4bit_intialize
     _gpio_pin_intialize
     _lcd_4bit_send_command
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
         _gpio_pin_write_logic
       _lcd_send_4bits
         _gpio_pin_write_logic
   _lcd_4bit_send_custom_char
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_send_char_data_pos
       _lcd_4bit_send_char_data
       _lcd_4bit_set_cursor
         _lcd_4bit_send_command
     _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
     _lcd_4bit_set_cursor

 _InterruptManager (ROOT)
   _ADC_ISR
   _CCP1_ISR
   _CCP2_ISR
   _EUSART_RX_ISR
   _EUSART_TX_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _MSSP_I2C_BC_ISR
   _MSSP_I2C_ISR
   _MSSP_SPI_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      8       8       7        3.1%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      7D       5       97.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     32      78       1       95.2%
BITBIGSFRhlhhlh     18      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlllhh       6      0       0      46        0.0%
BITBIGSFRhlhhll      5      0       0      39        0.0%
BITBIGSFRllhllh      4      0       0      43        0.0%
BITBIGSFRllllh       4      0       0      47        0.0%
BITBIGSFRllhllh      4      0       0      44        0.0%
BITBIGSFRlllll       4      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      42        0.0%
BITBIGSFRllhlh       1      0       0      41        0.0%
BITBIGSFRllhh        1      0       0      40        0.0%
BITBIGSFRllhlll      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FD      12        0.0%
DATA                 0      0      FD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Sep 11 22:27:48 2024

                               ??_InterruptManager 0039                                    ?_lcd_send_4bits 0041  
                                      _SSPSTATbits 0FC7                                                 l74 2B0A  
                                               l84 2C5C                                                 l69 221E  
                                               l79 2AAE                                       ___awdiv@sign 003E  
                                              l100 27C8                                                l202 284C  
                                              l211 2DD8                                                l107 2932  
                                              l216 2D08                                                l226 2CD0  
                                              l422 29D6                                                l415 252C  
                                              l168 2732                                                l176 2B5A  
                                              l425 29F4                                                l347 2F20  
                                              l179 2E2C                                                l460 2B74  
                                              l380 25F6                                                l454 2C1E  
                                              l382 2688                                                l392 2D40  
                                              l464 2B94                                                l456 2C20  
                                              l449 22F6                                                l714 1F1E  
                                              l395 2E46                                                l467 2B9C  
                                              l396 2E4C                                                l397 2E4E  
                                              l469 2BA0                                                l733 202E  
                                              l754 2A52                __end_of_configure_voltage_reference 2BA2  
                      _configure_voltage_reference 2B5C                                                _PR2 0FCB  
                                              _abs 2D42                          _RB5_InterruptHandler_HIGH 0015  
                                  __end_of_ADC_ISR 2F1E                __end_of_lcd_4bit_send_enable_signal 2E2E  
                      _lcd_4bit_send_enable_signal 2E0A                                       ___awmod@sign 003E  
                              led_initialize@F3061 0033                                                wreg 0FE8  
                            relay_initialize@F3055 002F                                       ___flmul@aexp 0058  
                                     ___flmul@bexp 0059                        lcd_send_4bits@_data_command 0042  
                                     ___flmul@sign 0053                                       ___flmul@temp 005E  
                                     ___flmul@prod 005A                          ?_convert_uint16_to_string 0066  
                                  __end_of_RB4_ISR 2EB8                                    __end_of_RB5_ISR 2E9E  
                                  __end_of_RB6_ISR 2E84                                    __end_of_RB7_ISR 2E6A  
                                     ___fltol@exp1 0069                                               ?_abs 003F  
                                             l2051 2134                                               l2252 28C0  
                                             l2412 1E0C                                               l2245 28B8  
                                             l2501 2474                                               l2423 1DA4  
                                             l2431 2E08                                               l2416 1D48  
                                             l2512 2F1E                                               l2409 1CB0  
                                             l2372 145C                                               l2438 2C98  
                                             l2375 12EE                                               l1751 2EF8  
                                             l6000 2E48                                               l2368 10F8  
                                             l2385 141E                                               l2377 1366  
                                             l6010 249E                                               l2378 1354  
                                             l2482 2BE0                                               l6020 2526  
                                             l6012 24B6                                               l6004 2476  
                                             l2476 1C58                                               l6100 2908  
                                             l6014 24DC                                               l6022 252A  
                                             l6006 2486                                               l2486 2D5C  
                                             l6030 2152                                               l6102 290A  
                                             l6016 24F4                                               l6008 2496  
                                             l6200 2CD2                                               l6040 2176  
                                             l6032 2166                                               l6104 291A  
                                             l2489 2D74                                               l6202 2CE6  
                                             l6210 2C9A                                               l6050 21C0  
                                             l6042 2178                                               l6026 2136  
                                             l6106 2930                                               l6220 25DE  
                                             l6300 1040                                               l6204 2CEE  
                                             l6212 2CAE                                               l6060 21F6  
                                             l6052 21C6                                               l6044 2188  
                                             l6028 214A                                               l6230 265C  
                                             l6222 25EE                                               l6310 1080  
                                             l6302 104E                                               l6206 2D06  
                                             l6214 2CB6                                               l6062 2202  
                                             l6054 21D2                                               l6046 2198  
                                             l6038 216A                                               l6070 2734  
                                             l6240 2678                                               l6232 265E  
                                             l6224 25F8                                               l6400 1382  
                                             l6320 10B0                                               l6312 1086  
                                             l6304 1050                                               l5600 1F34  
                                             l6216 2CCE                                               l6064 220E  
                                             l6056 21DE                                               l6048 21A4  
                                             l6080 2794                                               l6072 2744  
                                             l8000 1A38                                               l1985 23BA  
                                             l6250 2996                                               l6242 2680  
                                             l6234 2660                                               l6226 264A  
                                             l6410 13EC                                               l6402 1390  
                                             l6330 10E8                                               l6322 10B2  
                                             l6314 1096                                               l6306 1060  
                                             l5610 2002                                               l5602 1F54  
                                             l6058 21EA                                               l6066 221C  
                                             l6090 28DE                                               l6082 27C6  
                                             l6074 274C                                               l8010 1A88  
                                             l8002 1A50                                               l6260 29F2  
                                             l6252 29A6                                               l6244 2682  
                                             l6236 2662                                               l6228 265A  
                                             l6420 1442                                               l6412 1406  
                                             l6404 13BA                                               l6340 1138  
                                             l6332 1108                                               l6324 10C2  
                                             l6316 109C                                               l6308 1070  
                                             l6500 1CC0                                               l5604 1F5C  
                                             l5612 202C                                               l5620 2B0C  
                                             l6092 28F0                                               l6076 2762  
                                             l8004 1A5C                                               l6254 29B6  
                                             l6238 2670                                               l6246 2686  
                                             l6414 1422                                               l6422 1448  
                                             l6406 13BE                                               l6350 1188  
                                             l6342 1142                                               l6334 1118  
                                             l6326 10D2                                               l6318 10A2  
                                             l6430 2046                                               l6510 1CFE  
                                             l6502 1CD6                                               l1998 25DC  
                                             l5606 1FB2                                               l6190 2DAA  
                                             l5622 2B0C                                               l6086 28C2  
                                             l6078 2790                                               l8006 1A64  
                                             l6256 29BE                                               l6424 144C  
                                             l6416 1432                                               l6408 13D8  
                                             l6360 11CA                                               l6352 1194  
                                             l6344 1158                                               l6328 10E2  
                                             l6440 2096                                               l6520 1D86  
                                             l6512 1D30                                               l5800 1E0E  
                                             l6192 2DBE                                               l5632 2E0A  
                                             l5624 2B1C                                               l6088 28D6  
                                             l8008 1A7C                                               l6258 29E4  
                                             l6418 1440                                               l6370 122C  
                                             l6362 11DA                                               l6354 11A2  
                                             l6346 1164                                               l6338 112C  
                                             l6450 20C0                                               l6442 209A  
                                             l6434 205A                                               l6530 1DDC  
                                             l6522 1D94                                               l6514 1D32  
                                             l6506 1CEA                                               l5802 1E22  
                                             l6194 2DC6                                               l5634 2E0A  
                                             l5626 2B2E                                               l6098 28F4  
                                             l6380 12D4                                               l6372 1248  
                                             l6364 11F4                                               l6356 11AE  
                                             l6348 117C                                               l6460 20E8  
                                             l6452 20CA                                               l6444 20A8  
                                             l6436 2084                                               l6428 2030  
                                             l6532 1DEC                                               l6524 1DB2  
                                             l6516 1D3E                                               l6508 1CF2  
                                             l5812 1EF0                                               l5804 1E42  
                                             l8052 2016                                               l6196 2DD6  
                                             l5636 2E16                                               l5628 2B42  
                                             l5740 2AB0                                               l5820 2A64  
                                             l8054 2288                                               l6390 1310  
                                             l6382 12DE                                               l6374 1272  
                                             l6366 1204                                               l6358 11BE  
                                             l6462 20F4                                               l6454 20D4  
                                             l6438 2086                                               l6534 1DFA  
                                             l6526 1DB4                                               l6518 1D7A  
                                             l6294 2EF4                                               l5806 1E4A  
                                             l5814 1F1C                                               l5638 2E1C  
                                             l5742 2AC0                                               l5822 2A6C  
                                             l5830 27CE                                               l5902 2C22  
                                             l6392 131E                                               l6384 12EC  
                                             l6376 12A8                                               l6368 1220  
                                             l6464 2104                                               l6480 2878  
                                             l6472 284E                                               l6536 1DFC  
                                             l6528 1DB8                                               l6296 2EF4  
                                             l5808 1EA0                                               l5744 2AC8  
                                             l5824 2AAC                                               l5832 27D4  
                                             l5840 2824                                               l5904 2C32  
                                             l5850 222C                                               l6394 134C  
                                             l6386 12FE                                               l6378 12B6  
                                             l6298 1034                                               l6466 2114  
                                             l6490 28AC                                               l6482 2886  
                                             l6474 2856                                               l5746 2B08  
                                             l5818 2A54                                               l5834 27E8  
                                             l5842 284A                                               l5906 2C3A  
                                             l5860 224A                                               l5852 2232  
                                             l6388 130C                                               l6468 2124  
                                             l6492 28B2                                               l6484 288C  
                                             l6476 2868                                               l5836 27FC  
                                             l5828 27CA                                               l5908 2C5A  
                                             l5870 2268                                               l5862 2250  
                                             l5854 2238                                               l5846 2222  
                                             l6398 1376                                               l6486 28A2  
                                             l6478 2870                                               l6494 1C5C  
                                             l5598 1F20                                               l5838 2810  
                                             l5872 226E                                               l5864 2256  
                                             l5856 223E                                               l5848 2226  
                                             l6488 28AA                                               l6496 1C6C  
                                             l7800 25B0                                               l5866 225C  
                                             l5858 2244                                               l5874 2274  
                                             l5970 2BE2                                               l6498 1C7A  
                                             l7802 25B6                                               l5890 29F6  
                                             l5868 2262                                               l5980 2B7C  
                                             l5972 2BFA                                               l7740 2316  
                                             l7732 22F8                                               l7804 25BC  
                                             l7820 2402                                               l7812 23BC  
                                             l7900 2C6A                                               l5892 2A06  
                                             l5990 2D3A                                               l5982 2D0A  
                                             l5974 2C00                                               l7750 234A  
                                             l7742 2324                                               l7734 22FC  
                                             l7806 25CC                                               l7822 2434  
                                             l7814 23CC                                               l7830 1A98  
                                             l7902 2C72                                               l7910 268A  
                                             l5894 2A26                                               l5992 2D3E  
                                             l5984 2D1A                                               l5976 2C18  
                                             l5968 2F20                                               l7760 2384  
                                             l7752 2352                                               l7744 232C  
                                             l7736 230A                                               l7808 25D4  
                                             l7816 23DC                                               l7840 1AE0  
                                             l7832 1ABC                                               l7904 2C7A  
                                             l7920 26B8                                               l7912 2690  
                                             l5896 2A2E                                               l5986 2D22  
                                             l5978 2B5C                                               l7770 23AA  
                                             l7762 238C                                               l7754 235A  
                                             l7746 2330                                               l7738 2312  
                                             l7826 2D42                                               l7818 23E6  
                                             l7850 1B56                                               l7842 1AFE  
                                             l7834 1AC4                                               l7906 2C8A  
                                             l7930 2712                                               l7922 26D0  
                                             l7914 269C                                               l5898 2A50  
                                             l5988 2D34                                               l5996 2E2E  
                                             l7772 23B2                                               l7764 238E  
                                             l7756 2368                                               l7748 2338  
                                             l7780 2540                                               l7828 2D50  
                                             l7860 1BD4                                               l7852 1B86  
                                             l7844 1B1C                                               l7836 1AD2  
                                             l7924 26DC                                               l7932 2730  
                                             l7916 26A0                                               l5998 2E3E  
                                             l7766 2394                                               l7758 236E  
                                             l7790 2574                                               l7782 2548  
                                             l7862 1BE4                                               l7854 1BA2  
                                             l7846 1B34                                               l7870 1C28  
                                             l7838 1AD6                                               l7926 26F8  
                                             l7918 26B0                                               l7768 239A  
                                             l7792 257C                                               l7784 254C  
                                             l7776 252E                                               l7864 1BF6  
                                             l7856 1BB4                                               l7848 1B3E  
                                             l7880 2BA2                                               l7928 2710  
                                             l7960 1864                                               l7890 2DDA  
                                             l7794 2584                                               l7786 255A  
                                             l7778 2532                                               l7866 1C10  
                                             l7858 1BC4                                               l7874 1C34  
                                             l7882 2BAA                                               l7970 1880  
                                             l7962 1864                                               l7892 2DE2  
                                             l7796 2592                                               l7788 2562  
                                             l7868 1C12                                               l7884 2BBA  
                                             l7980 18F0                                               l7972 1888  
                                             l7964 1868                                               l7894 2DEC  
                                             l7798 25A8                                               l7886 2BD8  
                                             l7990 19D0                                               l7982 1900  
                                             l7974 18A4                                               l7966 1870  
                                             l7896 2DEE                                               l7992 19EC  
                                             l7984 1910                                               l7976 18C0  
                                             l7968 1878                                               l7898 2C5E  
                                             l7994 19FC                                               l7986 1962  
                                             l7978 18D8                                               l7996 1A0C  
                                             l7988 19B4                                               l7998 1A22  
                                             STR_1 102F                                               STR_2 102F  
                                             STR_4 1011                                               STR_5 1020  
                                             _LATA 0F89                                               _LATB 0F8A  
                                             _LATC 0F8B                                               _LATD 0F8C  
                                             _LATE 0F8D                                               u4110 1F34  
                                             u4111 1F30                                               u5000 1292  
                                             u4120 1F54                                               u4121 1F50  
                                             u5010 12EC                                               u5011 12E8  
                                             u5100 1440                                               u5020 130C  
                                             u5101 143C                                               u5021 1308  
                                             u5005 1288                                               u5030 131E  
                                             u5110 2046                                               u4134 1F7A  
                                             u5031 131A                                               u5111 2042  
                                             u4135 1F76                                               u5040 134C  
                                             u5120 207A                                               u5200 28A2  
                                             u4144 1FD0                                               u4320 2AC0  
                                             u5041 1348                                               u5201 289E  
                                             u4145 1FCC                                               u4321 2ABC  
                                             u5050 1362                                               u5130 20A8  
                                             u5210 1C6C                                               u5051 135E  
                                             u5131 20A4                                               u5211 1C68  
                                             u5060 1376                                               u5140 20BC  
                                             u5300 1DFA                                               u5220 1C7A  
                                             u4500 2A06                                               u5061 1372  
                                             u5141 20B8                                               u5125 2070  
                                             u5301 1DF6                                               u5221 1C76  
                                             u4501 2A02                                               u5070 1390  
                                             u5150 20E4                                               u5230 1CD6  
                                             u4430 1E22                                               u4510 2A26  
                                             u5071 138C                                               u5151 20E0  
                                             u5231 1CD2                                               u4431 1E1E  
                                             u4511 2A22                                               u4600 2B94  
                                             u5080 13D8                                               u5160 2104  
                                             u5240 1D2C                                               u4440 1E42  
                                             u4520 2C32                                               u4601 2B90  
                                             u5081 13D4                                               u5161 2100  
                                             u5241 1D28                                               u4441 1E3E  
                                             u4521 2C2E                                               u4610 2D1A  
                                             u5090 1406                                               u5170 2114  
                                             u5250 1D76                                               u4611 2D16  
                                             u5091 1402                                               u5171 2110  
                                             u5251 1D72                                               u4620 2E3E  
                                             u5180 2868                                               u5260 1D94  
                                             u4700 2744                                               u4621 2E3A  
                                             u5181 2864                                               u5261 1D90  
                                             u4701 2740                                               u4630 2486  
                                             u5190 2886                                               u5270 1DA4  
                                             u4470 1F06                                               u4454 1E68  
                                             u4710 2788                                               u4631 2482  
                                             u5191 2882                                               u5271 1DA0  
                                             u4471 1F00                                               u4455 1E64  
                                             u4640 2496                                               u5280 1DB2  
                                             u7200 255A                                               u4464 1EBE  
                                             u4480 2A64                                               u4720 27B6  
                                             u4641 2492                                               u5281 1DAE  
                                             u7201 2556                                               u4465 1EBA  
                                             u4481 2A60                                               u4650 24B6  
                                             u4570 2BFA                                               u5290 1DEC  
                                             u7130 230A                                               u7210 2574  
                                             u4730 27C6                                               u4651 24B2  
                                             u4571 2BF6                                               u5291 1DE8  
                                             u7131 2306                                               u7211 2570  
                                             u4731 27C2                                               u4660 24F4  
                                             u4900 29B6                                               u4580 2C18  
                                             u7140 2324                                               u7220 2592  
                                             u7300 1ABC                                               u4476 1F08  
                                             u4740 28D6                                               u4661 24F0  
                                             u4901 29B2                                               u4581 2C14  
                                             u7141 2320                                               u7221 258E  
                                             u7301 1AB8                                               u4741 28D2  
                                             u4717 277E                                               u4910 29E4  
                                             u4590 2B74                                               u7150 234A  
                                             u7230 25A8                                               u7310 1AFE  
                                             u4750 291A                                               u4911 29E0  
                                             u4591 2B70                                               u7151 2346  
                                             u7231 25A4                                               u7311 1AFA  
                                             u4751 2916                                               u4727 27AC  
                                             u4920 104E                                               u7160 2368  
                                             u7240 25CC                                               u7320 1B1C  
                                             u7400 2BD8                                               u4680 214A  
                                             u4921 104A                                               u7161 2364  
                                             u7241 25C8                                               u7321 1B18  
                                             u7401 2BD4                                               u4681 2146  
                                             u4930 1060                                               u7410 2E08  
                                             u7170 2384                                               u7250 23CC  
                                             u7330 1B52                                               u4850 2DBE  
                                             u4690 2188                                               u4675 250C  
                                             u4931 105C                                               u7411 2E04  
                                             u7171 2380                                               u7251 23C8  
                                             u7331 1B4C                                               u4851 2DBA  
                                             u4691 2184                                               u4940 1070  
                                             u7180 23AA                                               u7260 23DC  
                                             u7340 1B54                                               u4860 2CE6  
                                             u4941 106C                                               u7181 23A6  
                                             u7261 23D8                                               u7421 2696  
                                             u4861 2CE2                                               u4950 10B0  
                                             u7190 2540                                               u7270 2402  
                                             u7350 1BB4                                               u7430 26B0  
                                             u4870 2CAE                                               u4951 10AC  
                                             u7191 253C                                               u7271 23FE  
                                             u7351 1BB0                                               u7431 26AC  
                                             u4871 2CAA                                               u4880 25EE  
                                             u4960 10C2                                               u7280 2434  
                                             u7360 1BC4                                               u7440 2730  
                                             u4881 25EA                                               u4961 10BE  
                                             u7281 2430                                               u7361 1BC0  
                                             u7441 272C                                               u4890 29A6  
                                             u4970 10D2                                               u7290 2D50  
                                             u7370 1BD4                                               u4891 29A2  
                                             u4971 10CE                                               u7291 2D4C  
                                             u7371 1BD0                                               u7507 21AA  
                                             u4980 1108                                               u7380 1BE4  
                                             u4981 1104                                               u7381 1BE0  
                                             u7517 21C2                                               u4990 1118  
                                             u7390 1C24                                               u7470 1A50  
                                             u4991 1114                                               u7391 1C20  
                                             u7471 1A4C                                               u7480 1A7C  
                                             u7481 1A78                                               u7497 218E  
                                             _TMR2 0FCC                            ??_application_intialize 0039  
                    ??_lcd_4bit_send_enable_signal 0042                           _RB4_InterruptHandler_LOW 0017  
                                             abs@a 003F                                               _dbuf 0080  
                                             _main 1864                                   __end_of_CCP1_ISR 2F1A  
                                 __end_of_CCP2_ISR 2F16                                               _prec 00A8  
                         _RB7_InterruptHandler_LOW 000B                                               fsr0h 0FEA  
                                             fsr1h 0FE2                                               indf0 0FEF  
                                             fsr2h 0FDA                                               fsr0l 0FE9  
                                             indf1 0FE7                                               indf2 0FDF  
                                             fsr1l 0FE1                                               fsr2l 0FD9  
                                             btemp 0079                                   __end_of_ADC_Init 268A  
                lcd_4bit_send_char_data_pos@column 004D                                               prodh 0FF4  
                                             prodl 0FF3                                               start 000E  
                                     ___param_bank 0000                                     _lm35_res_1_txt 00BF  
                            _lcd_4bit_send_command 2AB0                                     _lm35_res_2_txt 00B8  
                           dc_motor_initialize@ret 0045                                              ??_abs 0041  
                             _gpio_pin_write_logic 1F20                     lcd_4bit_send_string_pos@column 004D  
                            lcd_4bit_intialize@lcd 0047                              lcd_4bit_intialize@ret 004A  
                                 __end_of_INT0_ISR 2F0E                                   __end_of_INT1_ISR 2F0A  
                                 __end_of_INT2_ISR 2F06                                      _EUSART_RX_ISR 2F24  
                                    ___fltol@sign1 0068                                      _EUSART_TX_ISR 2F0E  
                                            ?_main 0038                                    __end_of___awdiv 23BC  
                                            _EEADR 0FA9                                    __end_of___awmod 25DE  
                                  __end_of___flmul 145E                                    __end_of___fltol 2136  
                                  ___awdiv@divisor 003B                                    __end_of___lwdiv 28C2  
                                            i2l473 2F1C                                              i2l574 2F14  
                                            i2l569 2F18                                              i2l923 2F00  
                                            i2l919 2EFC                                    ___awdiv@counter 003D  
                                            i2l992 2F08                                              i2l987 2F0C  
                                            i2l997 2F04                                              _RCREG 0FAE  
                              relay_turn_off@F3065 002D                                       vfpfcnvrt@fmt 0044  
                                            _TMR0H 0FD7                                              _TMR1H 0FCF  
                                            _TMR0L 0FD6                                              _TMR1L 0FCE  
                                            _TMR3H 0FB3                                              _TMR3L 0FB2  
                                            _SPBRG 0FAF                                              _PORTA 0F80  
                                            _PORTB 0F81                                              _PORTC 0F82  
                                            _PORTD 0F83                                              _PORTE 0F84  
                                            _TRISA 0F92                                              _TRISB 0F93  
                                            _TRISC 0F94                                              _TRISD 0F95  
                                            _TRISE 0F96                                              _TXREG 0FAD  
                        lcd_4bit_set_cursor@coulmn 0049                                   __end_of_TMR0_ISR 2EEC  
                                 __end_of_TMR1_ISR 2EE0                                   __end_of_TMR2_ISR 2EF4  
                                            _adc_1 00EC                                   __end_of_TMR3_ISR 2ED4  
                                            _lcd_1 00F3                                              _flags 002B  
                                            _fputc 23BC                                              _width 00A6  
                                            _putch 2F1E                                              tablat 0FF5  
                                            ttemp5 007A                                              ttemp6 007D  
                                            ttemp7 0081                                              status 0FD8  
                                            wtemp8 007A                                    __end_of_sprintf 2C9A  
                                  __initialization 2934                                       __end_of_main 1A98  
                            ?_gpio_pin_write_logic 0039                                          ??_ADC_ISR 0038  
                                   ?_EUSART_RX_ISR 0038                                     ?_EUSART_TX_ISR 0038  
                                    _lat_registers 00D0                        __end_of_dc_motor_initialize 2DDA  
                __end_of_lcd_4bit_send_custom_char 2934                                             ??_main 006A  
                                    __activetblptr 0003                              _TMR3_InterruptHandler 00B2  
                                 led_turn_on@F3066 0032                                          ??_RB4_ISR 0038  
                                        ??_RB5_ISR 0038                                          ??_RB6_ISR 0038  
                                        ??_RB7_ISR 0038                         _EUSART_OverrunErrorHandler 00AA  
                                           ?_fputc 0039                                             _ADRESH 0FC4  
                                           _EEADRH 0FAA                                             _ADRESL 0FC3  
                                           _EEDATA 0FA8                                             _CCPR1L 0FBE  
                                           _CCPR2L 0FBB                                             _EECON2 0FA7  
                                 ___awdiv@dividend 0039                                             ?_putch 0038  
                                           i2l1030 2E82                                             i2l1008 2EB6  
                                           i2l1041 2E68                                             i2l1019 2E9C  
                                           i2l1220 14C0                                             i2l1230 1614  
                                           i2l1222 1504                                             i2l1240 1720  
                                           i2l1232 1658                                             i2l1224 1548  
                                           i2l1216 1480                                             i2l1321 2F22  
                                           i2l1250 17C0                                             i2l1242 1740  
                                           i2l1234 169C                                             i2l1226 158C  
                                           i2l1218 14A0                                             i2l1252 17E0  
                                           i2l1244 1760                                             i2l1236 16E0  
                                           i2l1228 15D0                                             i2l1261 1860  
                                           i2l1254 1800                                             i2l1246 1780  
                                           i2l1238 1700                                             i2l1256 1820  
                                           i2l1248 17A0                                             i2l3210 2EFA  
                                           i2l1258 1840                                             i2l1507 2EF2  
                                           i2l3230 2F02                                             i2l3214 2EFE  
                                           i2l1551 2ED2                                             i2l3224 2F06  
                                           i2l1456 2EDE                                             i2l3218 2F0A  
                                           i2l3250 2E86                                             i2l1387 2EEA  
                                           i2l3244 2EB6                                             i2l3236 2EA0  
                                           i2l3252 2E88                                             i2l3182 2F1A  
                                           i2l3238 2EA2                                             i2l3334 2EE0  
                                           i2l3342 2ED4                                             i2l3192 2F12  
                                           i2l3272 2E82                                             i2l3264 2E6C  
                                           i2l3280 2E54                                             i2l3336 2EE2  
                                           i2l3344 2ED6                                             i2l3186 2F16  
                                           i2l3258 2E9C                                             i2l3266 2E6E  
                                           i2l3338 2EE6                                             i2l3346 2EDA  
                                           i2l1683 2F10                                             i2l1692 2F24  
                                           i2l3286 2E68                                             i2l3278 2E52  
                                           i2l7300 1512                                             i2l6270 2ECA  
                                           i2l7310 1556                                             i2l7302 1520  
                                           i2l6264 2EEC                                             i2l6272 2ECE  
                                           i2l7400 17DC                                             i2l7320 159A  
                                           i2l7312 1564                                             i2l7304 152E  
                                           i2l6282 2F24                                             i2l7410 182E  
                                           i2l7402 17EE                                             i2l7330 15DE  
                                           i2l7322 15A8                                             i2l7314 1572  
                                           i2l7306 153E                                             i2l6276 2F0E  
                                           i2l6268 2EC8                                             i2l7412 183C  
                                           i2l7404 17FC                                             i2l7340 1622  
                                           i2l7332 15EC                                             i2l7324 15B6  
                                           i2l7316 1582                                             i2l7308 1542  
                                           i2l7414 184E                                             i2l7406 180E  
                                           i2l7350 1666                                             i2l7342 1630  
                                           i2l7334 15FA                                             i2l7326 15C6  
                                           i2l7318 1586                                             i2l7416 185C  
                                           i2l7408 181C                                             i2l7360 16AA  
                                           i2l7352 1674                                             i2l7344 163E  
                                           i2l7336 160A                                             i2l7328 15CA  
                                           i2l7280 147C                                             i2l7370 16EE  
                                           i2l7362 16B8                                             i2l7354 1682  
                                           i2l7346 164E                                             i2l7338 160E  
                                           i2l7290 14CE                                             i2l7282 148E  
                                           i2l7380 173C                                             i2l7372 16FC  
                                           i2l7364 16C6                                             i2l7356 1692  
                                           i2l7348 1652                                             i2l7292 14DC  
                                           i2l7284 149C                                             i2l7276 1460  
                                           i2l7390 178E                                             i2l7382 174E  
                                           i2l7374 170E                                             i2l7366 16D6  
                                           i2l7358 1696                                             i2l7294 14EA  
                                           i2l7286 14AE                                             i2l7278 146E  
                                           i2l7392 179C                                             i2l7384 175C  
                                           i2l7376 171C                                             i2l7368 16DA  
                                           i2l7296 14FA                                             i2l7288 14BC  
                                           i2l7394 17AE                                             i2l7386 176E  
                                           i2l7378 172E                                             i2l7298 14FE  
                                           i2l7396 17BC                                             i2l7388 177C  
                                           i2l7398 17CE                                      vfpfcnvrt@done 0047  
              convert_uint16_to_string@Temp_String 0100                                             _SPBRGH 0FB0  
                                           _SSPADD 0FC8                                             _SSPBUF 0FC9  
                ADC_GetConversion_Blocking@channel 0041                                   __end_of___xxtofl 1E0E  
                 __end_of_lcd_4bit_send_string_pos 27CA                        __end_of_dc_motor_move_right 2D0A  
                           ?_lcd_4bit_send_command 0044                                       vfprintf@cfmt 0051  
                                        ??___awdiv 003D                                          ??___awmod 003D  
                                        ??___flmul 004F                                          ??___fltol 0064  
                                        ??___lwdiv 003D                                             _memset 2DDA  
                                           clear_0 297A                                             clear_1 2986  
                                 ___awdiv@quotient 003F                                    ___awmod@divisor 003B  
                                           isa$std 0001                                    ___awmod@counter 003D  
          gpio_pin_direction_intialize@_pin_config 0039        _I2C_Report_Receive_Overflow_InterruptHandle 00B6  
                                           fputc@c 0039                                          ?_CCP1_ISR 0038  
                                     __pdataCOMRAM 006A                                          ?_CCP2_ISR 0038  
                                        ?_ADC_Init 003C                                       __mediumconst 0000  
                                           tblptrh 0FF7                                             tblptrl 0FF6  
                                           tblptru 0FF8                                             putch@c 0038  
                                 __end_of_vfprintf 2BE2                                          ??_sprintf 0059  
                     __end_of_select_result_format 2C22                                       ___xxtofl@arg 0043  
                                     ___xxtofl@exp 0042                                       ___xxtofl@val 0039  
                                       __accesstop 0080                            __end_of__initialization 298C  
                                        ?_INT0_ISR 0038                                          ?_INT1_ISR 0038  
                                        ?_INT2_ISR 0038                                         _lm35_res_1 0036  
                                       _lm35_res_2 0034                                      ___rparam_used 0001  
                                       ___fltol@f1 0060                                   ??_lcd_send_4bits 0043  
                          _lcd_4bit_send_char_data 2A54                                  RB5_ISR@RB5_Source 0038  
                           ??_gpio_pin_write_logic 003B                                     __pcstackCOMRAM 0038  
                       _I2C_DefaultInterruptHandle 0021                                       __pidataBANK0 2D76  
                                        ?_TMR0_ISR 0038                                    ??_EUSART_RX_ISR 0038  
                                        ?_TMR1_ISR 0038                                          ?_TMR2_ISR 0038  
                                        ?_TMR3_ISR 0038                                    ??_EUSART_TX_ISR 0038  
                     ??_ADC_GetConversion_Blocking 0043                                      __end_of_fputc 2476  
                                    __end_of_putch 2F20                           lcd_4bit_send_command@lcd 0044  
                         lcd_4bit_send_command@ret 0046                      lcd_4bit_send_custom_char@_chr 0053  
                          _ADC_GetConversionResult 2476                                         ??_CCP1_ISR 0038  
                                       ??_CCP2_ISR 0038                                         ??_ADC_Init 003D  
                             ADC_SelectChannel@ret 003F                       ?_lcd_4bit_send_char_data_pos 004B  
                                          ??_fputc 003C                                         _dc_motor_1 0077  
                                       _dc_motor_2 0075                                            ??_putch 0039  
                           ADC_StartConversion@ret 003A                                         __pbssBANK0 0080  
                            _INT0_InterruptHandler 001F                                         ??_INT0_ISR 0038  
                                       ??_INT1_ISR 0038                                         ??_INT2_ISR 0038  
                       ADC_GetConversionResult@ret 003E                      __end_of_application_intialize 2EFA  
                  lcd_4bit_send_custom_char@column 0052                                         ??_TMR0_ISR 0038  
                                       ??_TMR1_ISR 0038                                         ??_TMR2_ISR 0038  
                                       ??_TMR3_ISR 0038                                  led_turn_off@F3071 0031  
                      convert_uint16_to_string@ret 0106                                            _ADC_ISR 2F1A  
                      convert_uint16_to_string@str 0068                                            ?_memset 0039  
                     lcd_4bit_send_custom_char@lcd 0050                       lcd_4bit_send_custom_char@ret 0055  
                     lcd_4bit_send_custom_char@row 0051                     ADC_GetConversion_Blocking@_adc 0040  
                                RB7_ISR@RB7_Source 0038                                            _RB4_ISR 2E9E  
                                          _RB5_ISR 2E84                                            _RB6_ISR 2E6A  
                                          _RB7_ISR 2E50                                          ?___xxtofl 0039  
                        ?_lcd_4bit_send_string_pos 004B                          _RB6_InterruptHandler_HIGH 0011  
                                    ?_MSSP_I2C_ISR 0038                               led_turn_toggle@F3076 0030  
                                          i2u85_40 2EB2                                            i2u85_41 2EAE  
                                          i2u86_40 2E98                                            i2u86_41 2E94  
                                          i2u87_40 2E7E                                            i2u87_41 2E7A  
                                          i2u88_40 2E64                                            i2u88_41 2E60  
                                       _btn_values 1001                                            _Celsius 00E4  
                                   _tris_registers 00DA                           _RB6_InterruptHandler_LOW 000F  
                        ??_lcd_4bit_send_char_data 0046                                      ?_MSSP_SPI_ISR 0038  
                                ??_MSSP_I2C_BC_ISR 0038                               _ADC_InterruptHandler 0029  
                                          __Hparam 0000                                       ADC_Init@_adc 003C  
                                          __Lparam 0000                                _ecu_layer_intialize 2F20  
                                          ___awdiv 22F8                                            ___awmod 252E  
                                          ___flmul 1034                                            ___fltol 2030  
                                          ___lwdiv 284E                                          ?_vfprintf 004E  
                                     __psmallconst 1000                          ??_ADC_GetConversionResult 003B  
                       __end_of_gpio_pin_intialize 2A54                                            __pcinit 2934  
                             _select_result_format 2BE2                                            __ramtop 1000  
                                          __ptext0 1864                                            __ptext1 2734  
                                          __ptext2 28C2                                            __ptext3 2C22  
                                          __ptext4 27CA                                            __ptext5 2A54  
                                          __ptext6 2136                                            __ptext7 2AB0  
                                          __ptext8 2B0C                                            __ptext9 2E0A  
                                        _T0CONbits 0FD5                                          _T1CONbits 0FCD  
                         _convert_uint16_to_string 268A                                     ??_MSSP_I2C_ISR 0038  
                                        _T2CONbits 0FCA                                         ??___xxtofl 003D  
                                        _T3CONbits 0FB1                                   ___awmod@dividend 0039  
                             ?_ecu_layer_intialize 0038                                            _sprintf 2C5E  
            lcd_4bit_intialize@l_data_pins_counter 0049                                     __pintcode_body 145E  
                             end_of_initialization 298C                                  lcd_send_4bits@lcd 0041  
                                lcd_send_4bits@ret 0043                           select_result_format@_adc 0039  
      ADC_GetConversion_Blocking@conversion_result 0042                                            fputc@fp 003B  
                                          memset@c 003A                                            memset@n 003C  
                                          memset@p 003E                                            int_func 145E  
                                   ??_MSSP_SPI_ISR 0038                         __end_of_lcd_4bit_intialize 2220  
                          ??_lcd_4bit_send_command 0046                              gpio_pin_intialize@ret 0043  
                                    _dc_motor_stop 2C9A                                  __end_of_vfpfcnvrt 1C5A  
                                        _RCSTAbits 0FAB                 __end_of_ADC_GetConversion_Blocking 29F6  
                       _ADC_GetConversion_Blocking 2996                                            postdec1 0FE5  
                                          postdec2 0FDD                                            postinc0 0FEE  
                                          postinc1 0FE6                                            postinc2 0FDE  
                                 vfpfcnvrt@convarg 0049                                         ??_vfprintf 0051  
                            ?_select_result_format 0039                    __end_of_lcd_4bit_send_char_data 2AB0  
                            _INT1_InterruptHandler 001D                                          _PORTBbits 0F81  
                                 _InterruptManager 0008                      gpio_pin_intialize@_pin_config 0041  
                       ?_lcd_4bit_send_custom_char 0050                         lcd_4bit_send_char_data@lcd 0044  
                            ??_ecu_layer_intialize 0039                         lcd_4bit_send_char_data@ret 0046  
             __end_of_gpio_pin_direction_intialize 1F20                       _gpio_pin_direction_intialize 1E0E  
                                    ___xxtofl@sign 0041                                          _TRISCbits 0F94  
                              _ADC_StartConversion 2E2E                    lcd_4bit_send_char_data_pos@data 004E  
                                      ___flmul@grs 0054                                        _CCP1CONbits 0FBD  
                                      _CCP2CONbits 0FBA                                          _TXSTAbits 0FAC  
                                   ?_dc_motor_stop 0041                                _lcd_4bit_set_cursor 27CA  
                               relay_turn_on@F3060 002E                               ?_ADC_StartConversion 0039  
                      lcd_4bit_send_string_pos@lcd 004B                        lcd_4bit_send_string_pos@ret 0050  
                      lcd_4bit_send_string_pos@row 004C                        lcd_4bit_send_string_pos@str 004E  
                    convert_uint16_to_string@F3211 00A0                                        vfpfcnvrt@ap 0045  
                                      vfpfcnvrt@cp 0048                                        vfpfcnvrt@fp 0043  
                                      _BAUDCONbits 0FB8                                      __pidataCOMRAM 2EB8  
          adc_input_channel_port_configure@channel 003B                                     _timer0_preload 0007  
                                   __end_of_memset 2E0A                                     _timer1_preload 0003  
                                   _timer2_preload 002C                       ?_configure_voltage_reference 0039  
                              start_initialization 2934                                     _timer3_preload 0001  
                     ?_lcd_4bit_send_enable_signal 0041                               ?_lcd_4bit_set_cursor 0047  
                    convert_uint16_to_string@value 0066                                        __end_of_abs 2D76  
MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3103 0070   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3112 006D  
MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3105 006F   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3114 006C  
MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3107 006E   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3116 006B  
 MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3118 006A                      ?_gpio_pin_direction_intialize 0039  
         ADC_GetConversionResult@conversion_result 003A                             dc_motor_stop@_dc_motor 0041  
                        _EUSART_RxInterruptHandler 00AE                              ADC_SelectChannel@_adc 003C  
                             __end_of_MSSP_I2C_ISR 2EFE                              ??_ADC_StartConversion 003A  
                                      vfprintf@fmt 004F                         _EUSART_FramingErrorHandler 00AC  
                           ??_select_result_format 003A                                        __pdataBANK0 00C6  
                                         ?_ADC_ISR 0038                                           ??_memset 003E  
                            __end_of_EUSART_RX_ISR 2F26                              __end_of_EUSART_TX_ISR 2F12  
                                       memset@dest 0039                       lcd_4bit_send_command@command 0045  
                                 dc_motor_stop@ret 0042                            ADC_StartConversion@_adc 0039  
                             __end_of_MSSP_SPI_ISR 2F24                                           ?_RB4_ISR 0038  
                                         ?_RB5_ISR 0038                                           ?_RB6_ISR 0038  
                                         ?_RB7_ISR 0038                                          ___flmul@a 004B  
                                        ___flmul@b 0047                                        __pbssCOMRAM 0001  
                            ??_lcd_4bit_set_cursor 004A        _I2C_Report_Write_Collision_InterruptHandler 0023  
                                    __pcstackBANK1 0100                      ??_configure_voltage_reference 003A  
                                  _MSSP_I2C_BC_ISR 2EFE                        ADC_GetConversionResult@_adc 0039  
                            _INT2_InterruptHandler 001B                    gpio_pin_direction_intialize@ret 003F  
                                  ??_dc_motor_stop 0042                              _TMR0_InterruptHandler 0009  
                                        __pnvBANK0 00F9                                   ___lwdiv@dividend 0039  
                            _application_intialize 2EF4                                          __pintcode 0008  
         __end_of_adc_input_channel_port_configure 22F8                 ??_adc_input_channel_port_configure 0039  
                ?_adc_input_channel_port_configure 0038                   _adc_input_channel_port_configure 2220  
                                _ADC_SelectChannel 2D0A                         ??_convert_uint16_to_string 0069  
                  gpio_pin_write_logic@_pin_config 0039                                           ?___awdiv 0039  
                                         ?___awmod 0039                                           ?___flmul 0047  
                                         ?___fltol 0060                                           ?___lwdiv 0039  
                    ADC_GetConversion_Blocking@ret 0043                                 ?_ADC_SelectChannel 003C  
                 lcd_4bit_send_custom_char@mem_pos 0054                          gpio_pin_write_logic@logic 003A  
                                      __smallconst 1000                          _RB4_InterruptHandler_HIGH 0019  
                                         _CCP1_ISR 2F16                                           _CCP2_ISR 2F12  
                              ??_ADC_SelectChannel 003E                                           _ADC_Init 25DE  
                        _RB7_InterruptHandler_HIGH 000D                                        ADC_Init@ret 003E  
                                 ___lwdiv@quotient 003D                                           ?_sprintf 0052  
                               _gpio_pin_intialize 29F6                     ??_gpio_pin_direction_intialize 003A  
                         _RB5_InterruptHandler_LOW 0013                                           _INT0_ISR 2F0A  
                                         _INT1_ISR 2F06                                           _INT2_ISR 2F02  
                                         _RB4_Flag 0074                                           _RB5_Flag 0073  
                                         _RB6_Flag 0072                                           _RB7_Flag 0071  
                                RB4_ISR@RB4_Source 0038                                ?_gpio_pin_intialize 0041  
                         __end_of_InterruptManager 1864                                           _PIE1bits 0F9D  
                                         _PIE2bits 0FA0                          __end_of_ADC_SelectChannel 2D42  
                    __end_of_lcd_4bit_send_command 2B0C                                           _PIR1bits 0F9E  
                                         _PIR2bits 0FA1                                           i2u630_40 14CE  
                                         i2u630_41 14CA                                           i2u631_40 14DC  
                                         i2u631_41 14D8                                           i2u640_40 1572  
                                         i2u632_40 14EA                                           i2u624_40 146E  
                                         i2u640_41 156E                                           i2u632_41 14E6  
                                         i2u624_41 146A                                           i2u641_40 1582  
                                         i2u633_40 14FA                                           i2u625_40 147C  
                                         i2u641_41 157E                                           i2u633_41 14F6  
                                         i2u625_41 1478                                           i2u650_40 1622  
                                         i2u642_40 159A                                           i2u634_40 1512  
                                         i2u626_40 148E                                           i2u650_41 161E  
                                         i2u642_41 1596                                           i2u634_41 150E  
                                         i2u626_41 148A                                           i2u651_40 1630  
                                         i2u643_40 15A8                                           i2u635_40 1520  
                                         i2u627_40 149C                                           i2u651_41 162C  
                                         i2u643_41 15A4                                           i2u635_41 151C  
                                         i2u627_41 1498                                           i2u660_40 16C6  
                                         i2u652_40 163E                                           i2u644_40 15B6  
                                         i2u636_40 152E                                           i2u628_40 14AE  
                                         i2u660_41 16C2                                           i2u652_41 163A  
                                         i2u644_41 15B2                                           i2u636_41 152A  
                                         i2u628_41 14AA                                           i2u661_40 16D6  
                                         i2u653_40 164E                                           i2u645_40 15C6  
                                         i2u637_40 153E                                           i2u629_40 14BC  
                                         i2u661_41 16D2                                           i2u653_41 164A  
                                         i2u645_41 15C2                                           i2u637_41 153A  
                                         i2u629_41 14B8                                           i2u670_40 176E  
                                         i2u662_40 16EE                                           i2u654_40 1666  
                                         i2u646_40 15DE                                           i2u638_40 1556  
                                         i2u670_41 176A                                           i2u662_41 16EA  
                                         i2u654_41 1662                                           i2u646_41 15DA  
                                         i2u638_41 1552                                           i2u671_40 177C  
                                         i2u663_40 16FC                                           i2u655_40 1674  
                                         i2u647_40 15EC                                           i2u639_40 1564  
                                         i2u671_41 1778                                           i2u663_41 16F8  
                                         i2u655_41 1670                                           i2u647_41 15E8  
                                         i2u639_41 1560                                           i2u680_40 180E  
                                         i2u672_40 178E                                           i2u664_40 170E  
                                         i2u656_40 1682                                           i2u648_40 15FA  
                                         i2u680_41 180A                                           i2u672_41 178A  
                                         i2u664_41 170A                                           i2u656_41 167E  
                                         i2u648_41 15F6                                           i2u681_40 181C  
                                         i2u673_40 179C                                           i2u665_40 171C  
                                         i2u657_40 1692                                           i2u649_40 160A  
                                         i2u681_41 1818                                           i2u673_41 1798  
                                         i2u665_41 1718                                           i2u657_41 168E  
                                         i2u649_41 1606                                           i2u682_40 182E  
                                         i2u674_40 17AE                                           i2u666_40 172E  
                                         i2u658_40 16AA                                           i2u682_41 182A  
                                         i2u674_41 17AA                                           i2u666_41 172A  
                                         i2u658_41 16A6                                           i2u683_40 183C  
                                         i2u675_40 17BC                                           i2u667_40 173C  
                                         i2u659_40 16B8                                           i2u683_41 1838  
                                         i2u675_41 17B8                                           i2u667_41 1738  
                                         i2u659_41 16B4                                           i2u684_40 184E  
                                         i2u676_40 17CE                                           i2u668_40 174E  
                                         i2u684_41 184A                                           i2u676_41 17CA  
                                         i2u668_41 174A                                           i2u685_40 185C  
                                         i2u677_40 17DC                                           i2u669_40 175C  
                                         i2u685_41 1858                                           i2u677_41 17D8  
                                         i2u669_41 1758                                           i2u678_40 17EE  
                                         i2u678_41 17EA                                           i2u679_40 17FC  
                                         i2u679_41 17F8                                _dc_motor_initialize 2DAA  
                     dc_motor_initialize@_dc_motor 0044                        ?_ADC_GetConversion_Blocking 0040  
                                         _TMR0_ISR 2EE0                                           _TMR1_ISR 2ED4  
                                         _TMR2_ISR 2EEC                                           _TMR3_ISR 2EC8  
                               _lcd_4bit_intialize 2136                                          _vfpfcnvrt 1A98  
                         _lcd_4bit_send_string_pos 2734                                         _ADCON0bits 0FC2  
                                       _ADCON1bits 0FC1                                         _ADCON2bits 0FC0  
                          __end_of_MSSP_I2C_BC_ISR 2F02                               ??_gpio_pin_intialize 0042  
                         ADC_SelectChannel@channel 003D                     lcd_4bit_send_char_data_pos@lcd 004B  
                   lcd_4bit_send_char_data_pos@ret 004F                     lcd_4bit_send_char_data_pos@row 004C  
                      ??_lcd_4bit_send_custom_char 0055                                ?_lcd_4bit_intialize 0047  
              __end_of_lcd_4bit_send_char_data_pos 2C5E                        _lcd_4bit_send_char_data_pos 2C22  
                             ?_dc_motor_initialize 0044                                         vfpfcnvrt@c 004D  
                          gpio_pin_write_logic@ret 0040                                        _INTCON2bits 0FF1  
                                      _INTCON3bits 0FF0                           ?_lcd_4bit_send_char_data 0044  
                                        copy_data0 2948                                          copy_data1 2968  
                            _lm35_res_1_Celsius_mv 00FB                                _dc_motor_move_right 2CD2  
                    ??_lcd_4bit_send_char_data_pos 004F               lcd_4bit_send_custom_char@lcd_counter 0056  
                                       _EECON1bits 0FA6                             ?_application_intialize 0038  
                             ??_lcd_4bit_intialize 0048                                           __Hrparam 0000  
                                       vfprintf@ap 0050                                           __Lrparam 0000  
                                       vfprintf@fp 004E                           ?_ADC_GetConversionResult 0039  
                                RB6_ISR@RB6_Source 0038                              _CCP1_InterruptHandler 0027  
                           lcd_4bit_set_cursor@lcd 0047                        __end_of_ecu_layer_intialize 2F22  
                           lcd_4bit_set_cursor@ret 004A                                         ?_vfpfcnvrt 0043  
                           lcd_4bit_set_cursor@row 0048                              _lm35_res_2_Celsius_mv 00F9  
                             ?_dc_motor_move_right 0041                                 __end_of_btn_values 1011  
                            _TMR1_InterruptHandler 0005                                         sprintf@fmt 0054  
                                         ___xxtofl 1C5A                                       _MSSP_I2C_ISR 2EFA  
                            ??_dc_motor_initialize 0045                                    ___lwdiv@divisor 003B  
                                  ___lwdiv@counter 003F                                           __ptext10 2C9A  
                                         __ptext11 2CD2                                           __ptext20 23BC  
                                         __ptext12 2DAA                                           __ptext21 2F1E  
                                         __ptext13 29F6                                           __ptext30 2030  
                                         __ptext22 2D42                                           __ptext14 1F20  
                                         __ptext31 1034                                           __ptext23 252E  
                                         __ptext15 1E0E                                           __ptext32 25DE  
                                         __ptext24 22F8                                           __ptext16 268A  
                                         __ptext41 2EC8                                           __ptext33 2BE2  
                                         __ptext25 2DDA                                           __ptext17 2C5E  
                                         __ptext50 2EFA                                           __ptext42 2EEC  
                                         __ptext34 2B5C                                           __ptext26 2EF4  
                                         __ptext18 2BA2                                           __ptext51 2EFE  
                                         __ptext43 2ED4                                           __ptext35 2996  
                                         __ptext27 2F20                                           __ptext19 1A98  
                                         __ptext52 2F02                                           __ptext44 2EE0  
                                         __ptext36 2E2E                                           __ptext28 1C5A  
                                         __ptext53 2F06                                           __ptext45 2E50  
                                         __ptext37 2D0A                                           __ptext29 284E  
                                         __ptext54 2F0A                                           __ptext46 2E6A  
                                         __ptext38 2220                                           __ptext55 2F0E  
                                         __ptext47 2E84                                           __ptext39 2476  
                                         __ptext56 2F24                                           __ptext48 2E9E  
                                         __ptext57 2F12                                           __ptext49 2F22  
                                         __ptext58 2F16                                           __ptext59 2F1A  
                  configure_voltage_reference@_adc 0039                             dc_motor_move_right@ret 0042  
                        _lcd_4bit_send_custom_char 28C2                                       _MSSP_SPI_ISR 2F22  
              convert_uint16_to_string@DataCounter 0107                   __end_of_convert_uint16_to_string 2734  
                                         isa$xinst 0000                                           int$flags 0079  
                                         _vfprintf 2BA2                              ??_dc_motor_move_right 0042  
                                   _lcd_send_4bits 2B0C                                   ?_MSSP_I2C_BC_ISR 0038  
                                       _INTCONbits 0FF2                       __end_of_gpio_pin_write_logic 2030  
                                         intlevel2 0000                                          sprintf@ap 0059  
                      __end_of_ADC_StartConversion 2E50                     lcd_4bit_send_enable_signal@lcd 0041  
                   lcd_4bit_send_enable_signal@ret 0042                          _EUSART_TxInterruptHandler 00B0  
                  __end_of_ADC_GetConversionResult 252E                             __end_of_lcd_send_4bits 2B5C  
                     dc_motor_move_right@_dc_motor 0041                                        ??_vfpfcnvrt 0046  
                      __end_of_lcd_4bit_set_cursor 284E                                           sprintf@f 005A  
                                         sprintf@s 0052                                     _port_registers 00C6  
                                      _SSPCON1bits 0FC6                                        _SSPCON2bits 0FC5  
                            _CCP2_InterruptHandler 0025                        lcd_4bit_send_char_data@data 0045  
                            _TMR2_InterruptHandler 00B4                                  ?_InterruptManager 0038  
                            __end_of_dc_motor_stop 2CD2                         ??_lcd_4bit_send_string_pos 0050  
